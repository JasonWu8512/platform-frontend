{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js!/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-3!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/jira.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/api/jira.ts","mtime":1655949681742},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js","mtime":1644298102066},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/jira.ts"],"names":[],"mappings":"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","sourcesContent":["import instance from '@/api/index'\nimport Qs from \"qs\";\nimport {RequestGetTestEpics} from './types/jira'\n\nconst urlPrefix = '/v1/jira/'\nexport default {\n  // 获取所有工程\n  getAllProject(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}projects`,\n      params: params\n    })\n  },\n  // 获取迭代\n  getSprintByProject(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprints`,\n      params: params\n    })\n  },\n  // 根据迭代获取story\n  getStoryBySprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}stories`,\n      params: params\n    })\n  },\n  // 获取最近一次迭代\n  getLatestSprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprints/latest`,\n      params: params\n    })\n  },\n  // 获取指定迭代下所有版本的信息\n  getVersionDetailsBySprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}version/details`,\n      params: params\n    })\n  },\n\n  // 获取bugsummary\n  getBugSummary(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}bug/summary`,\n      params: params\n    })\n  },\n\n  //获取指定月份测试报告\n  getTestMonthReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/report`,\n      params: params\n    })\n  },\n\n  //获取部门指定月份测试报告\n  getTestDepartmentMonthReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}department/month/report`,\n      params: params\n    })\n  },\n\n  // 获取指定月份测试bug指标报告趋势\n  getMonthTrendReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/quality/trend`,\n      params: params\n    })\n  },\n\n  // 获取指定月份bug解决时长趋势\n  getMonthBugFixTimeTrend(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/bug_time/trend`,\n      params: params\n    })\n  },\n\n  //获取每条产线迭代维度近半年需求响应周期\n  getBusinessSprintCycle(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}demand/business/sprint/cycle`,\n      params: params\n    })\n  },\n\n  // 获取项目半年的迭代维度下bug的平均解决、关闭时长\n  getSprintBugFixTimeTrend(param: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug_time/trend`,\n      params: param\n    })\n  },\n\n  // 获取项目吞吐量\n  getStoryThroughput(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/throughput`,\n      params: params\n    })\n  },\n\n  // 获取交付周期半年内趋势\n  getBusinessCycleTrend(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}demand/response/cycle`,\n      params: params\n    })\n  },\n\n  // epic搜索\n  getTestEpics(params: RequestGetTestEpics) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}epics`,\n      params: params,\n      paramsSerializer(params) {\n        return Qs.stringify(params, {arrayFormat: 'repeat'})\n      }\n    })\n  },\n\n  // 获取sprint的各职能团队人天报告\n  getSprintEstimateReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/estimate/report`,\n      params: params\n    })\n  },\n\n  // 获取占用研发/测试资源top10需求\n  getStoryResourceRank(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/story/resource/rank`,\n      params: params\n    })\n  },\n\n  // 编辑职能团队总的sprint的人数、开发人天等\n  editSprintTotalEstimate(sprId: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}sprint/total/estimate/${sprId}`,\n      data: params\n    })\n  },\n\n  // 获取技术部月度资源报告\n  getMonthResourceReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/resource/report`,\n      params: params\n    })\n  },\n\n  // 编辑月度资源报告\n  editMonthResourceReport(rid: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}month/resource/report/${rid}`,\n      data: params\n    })\n  },\n\n  // 编辑职能团队的sprint的人数、开发人天等\n  editSprintEstimateReport(rid: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}sprint/estimate/report/${rid}`,\n      data: params\n    })\n  },\n\n  // 获取研发测试投入及bugs\n  getDevQaAndBug(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}develop/bug/statistical`,\n      params: params\n    })\n  },\n\n  // 获取子任务\n  getSubTask(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/subtask`,\n      params: params\n    })\n  },\n\n  // 获取固定sprintid,暂时效能数据专用\n  getSprintSpecific(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/specific`,\n      params: params\n    })\n  },\n\n  //获取每个迭代的story的提测规划\n  getSprintStoryTestPlan(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/test/planning`,\n      params: params\n    })\n  },\n\n  // 获取每个迭代的story的测规划\n  getSprintStoryTestStatus(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/test/status`,\n      params: params\n    })\n  },\n\n  // 获取迭代冲刺总览\n  getSprintOverview() {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/story/overview`,\n    })\n  },\n\n  //获取bug质量分\n  getBugPoint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/point`,\n      params: params\n    })\n  },\n\n  //获取bug修复时长\n  getBugFixTime(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/fix/duration`,\n      params: params\n    })\n  },\n\n  //下载bug详情\n  downloadBugDetails(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/download`,\n      params: params\n    })\n  },\n  // 同步项目报告数据\n  synReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/report/refresh`,\n      params: params\n    })\n  },\n  // 获取迭代异常\n  getSprintExceptionsWarning(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/warning`,\n      params: params\n    })\n  }\n}\n"],"sourceRoot":""}]}