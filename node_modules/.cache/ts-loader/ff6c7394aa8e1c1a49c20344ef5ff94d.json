{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseImport.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseImport.vue","mtime":1670554799290},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgYXBpXzEgPSByZXF1aXJlKCJAL2FwaSIpOwoKdmFyIHV0aWxzXzEgPSByZXF1aXJlKCJAL3BhZ2VzL3RyYWNrL2NvbW1vbi91dGlscyIpOwoKZXhwb3J0cy5kZWZhdWx0ID0gewogIG5hbWU6ICJUZXN0Q2FzZUltcG9ydCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3VsdDoge30sCiAgICAgIGFjdGl2ZU5hbWU6ICd4bWluZEltcG9ydCcsCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIHNlbGVjdE5vZGU6IE9iamVjdCwKICAgIGN1cnJlbnRQcm9qZWN0OiBPYmplY3QKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJGV2ZW50QnVzLiRvbignVGVzdENhc2VJbXBvcnQnLCBmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLm9wZW4oKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgb3BlbjogZnVuY3Rpb24gb3BlbigpIHsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIGhhbmRsZUJlZm9yZVVwbG9hZDogZnVuY3Rpb24gaGFuZGxlQmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgLy8gY29uc29sZS5sb2coJ2hhbmRsZUJlZm9yZVVwbG9hZCcsIGZpbGUpCiAgICAgIHZhciBpc01hdGNoID0gZmlsZS50eXBlID09PSAnYXBwbGljYXRpb24vdm5kLnhtaW5kLndvcmtib29rJyB8fCBmaWxlLm5hbWUucmVwbGFjZSgvLitcLi8sICIiKSA9PT0gJ3htaW5kJzsKCiAgICAgIGlmICghaXNNYXRjaCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aWh+S7tuWPquaUr+aMgVhNaW5k5qC85byP77yBJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpc01hdGNoOwogICAgfSwKICAgIGhhbmRsZVVwbG9hZDogZnVuY3Rpb24gaGFuZGxlVXBsb2FkKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGZpbGUgPSBldmVudC5maWxlOwogICAgICB2YXIgYm9keSA9IHV0aWxzXzEuYnVpbGRVcGxvYWRGaWxlUGFyYW1zKHsKICAgICAgICBwcm9qSWQ6IHRoaXMuY3VycmVudFByb2plY3QuaWQsCiAgICAgICAgdHJlZUlkOiB0aGlzLnNlbGVjdE5vZGUuaWQsCiAgICAgICAgY2FzZUZpbGU6IGZpbGUKICAgICAgfSk7CiAgICAgIGFwaV8xLnRlc3RDYXNlQXBpLnVwbG9hZFhNaW5kKGJvZHkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kZW1pdCgicmVmcmVzaCIpOwoKICAgICAgICBfdGhpczIuY2xvc2UoKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseImport.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;AAgDA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,OAAA,CAAA,OAAA,GAAe;AACb,EAAA,IAAI,EAAE,gBADO;AAEb,EAAA,IAFa,kBAET;AACF,WAAO;AACL,MAAA,MAAM,EAAE,EADH;AAEL,MAAA,UAAU,EAAE,aAFP;AAGL,MAAA,aAAa,EAAE;AAHV,KAAP;AAKD,GARY;AASb,EAAA,KAAK,EAAE;AACL,IAAA,UAAU,EAAE,MADP;AAEL,IAAA,cAAc,EAAE;AAFX,GATM;AAab,EAAA,OAba,qBAaN;AAAA;;AACL,SAAK,SAAL,CAAe,GAAf,CAAmB,gBAAnB,EAAqC,YAAK;AACxC,MAAA,KAAI,CAAC,IAAL;AACD,KAFD;AAGD,GAjBY;AAkBb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACH;AACF,WAAK,aAAL,GAAqB,IAArB;AACD,KAHM;AAIP,IAAA,KAJO,mBAIF;AACH,WAAK,aAAL,GAAqB,KAArB;AACD,KANM;AAOP,IAAA,kBAPO,8BAOY,IAPZ,EAOsB;AAC3B;AACA,UAAM,OAAO,GAAG,IAAI,CAAC,IAAL,KAAc,gCAAd,IAAkD,IAAI,CAAC,IAAL,CAAU,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,MAAkC,OAApG;;AACA,UAAI,CAAC,OAAL,EAAc;AACZ,aAAK,QAAL,CAAc,KAAd,CAAoB,eAApB;AACD;;AACD,aAAO,OAAP;AACD,KAdM;AAeP,IAAA,YAfO,wBAeM,KAfN,EAe2B;AAAA;;AAChC,UAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,UAAM,IAAI,GAAa,OAAA,CAAA,qBAAA,CAAsB;AAC3C,QAAA,MAAM,EAAE,KAAK,cAAL,CAAoB,EADe;AAE3C,QAAA,MAAM,EAAE,KAAK,UAAL,CAAgB,EAFmB;AAG3C,QAAA,QAAQ,EAAE;AAHiC,OAAtB,CAAvB;AAKA,MAAA,KAAA,CAAA,WAAA,CAAY,WAAZ,CAAwB,IAAxB,EACG,IADH,CACQ,YAAK;AACT,QAAA,MAAI,CAAC,KAAL,CAAW,SAAX;;AACA,QAAA,MAAI,CAAC,KAAL;AACD,OAJH;AAKD;AA3BM;AAlBI,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testCaseApi} from \"@/api\"\nimport {buildUploadFileParams} from \"@/pages/track/common/utils\"\n\nexport default {\n  name: \"TestCaseImport\",\n  data() {\n    return {\n      result: {},\n      activeName: 'xmindImport',\n      dialogVisible: false,\n    }\n  },\n  props: {\n    selectNode: Object,\n    currentProject: Object,\n  },\n  mounted() {\n    this.$eventBus.$on('TestCaseImport', () => {\n      this.open()\n    })\n  },\n  methods: {\n    open() {\n      this.dialogVisible = true\n    },\n    close() {\n      this.dialogVisible = false\n    },\n    handleBeforeUpload(file: File) {\n      // console.log('handleBeforeUpload', file)\n      const isMatch = file.type === 'application/vnd.xmind.workbook' || file.name.replace(/.+\\./, \"\") === 'xmind'\n      if (!isMatch) {\n        this.$message.error('文件只支持XMind格式！')\n      }\n      return isMatch\n    },\n    handleUpload(event: { file: File }) {\n      const file = event.file\n      const body: FormData = buildUploadFileParams({\n        projId: this.currentProject.id,\n        treeId: this.selectNode.id,\n        caseFile: file\n      })\n      testCaseApi.uploadXMind(body)\n        .then(() => {\n          this.$emit(\"refresh\")\n          this.close()\n        })\n    },\n  }\n}\n"],"sourceRoot":""}]}