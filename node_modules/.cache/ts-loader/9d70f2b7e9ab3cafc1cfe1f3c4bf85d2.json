{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/constant/TestCase.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/constant/TestCase.ts","mtime":1655949681767},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2Y7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuc3RlcFN0YXR1c1R5cGUgPSBleHBvcnRzLnN0ZXBTdGF0dXNFbnVtID0gZXhwb3J0cy5jYXNlQmF0Y2hFZGl0VHlwZSA9IGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gPSBleHBvcnRzLmNhc2VVcGRhdGVUeXBlRW51bSA9IGV4cG9ydHMucHJpb3JpdHlUeXBlID0gZXhwb3J0cy5wcmlvcml0eUVudW0gPSBleHBvcnRzLmV4ZWN1dGlvblR5cGUgPSBleHBvcnRzLmV4ZWN1dGlvbkVudW0gPSBleHBvcnRzLmNhc2VUeXBlVHlwZSA9IGV4cG9ydHMuY2FzZVR5cGVFbnVtID0gZXhwb3J0cy5vcGVyYXRpb25UeXBlID0gZXhwb3J0cy5vcGVyYXRpb25FbnVtID0gdm9pZCAwOyAvLyDnlKjkvovmoJHmk43kvZzlsZ7mgKcKCnZhciBvcGVyYXRpb25FbnVtOwoKKGZ1bmN0aW9uIChvcGVyYXRpb25FbnVtKSB7CiAgb3BlcmF0aW9uRW51bVsiQUREIl0gPSAiYWRkIjsKICBvcGVyYXRpb25FbnVtWyJFRElUIl0gPSAiZWRpdCI7CiAgb3BlcmF0aW9uRW51bVsiVklFVyJdID0gInZpZXciOwp9KShvcGVyYXRpb25FbnVtID0gZXhwb3J0cy5vcGVyYXRpb25FbnVtIHx8IChleHBvcnRzLm9wZXJhdGlvbkVudW0gPSB7fSkpOwoKZXhwb3J0cy5vcGVyYXRpb25UeXBlID0gKF9hID0ge30sIF9hW29wZXJhdGlvbkVudW0uQUREXSA9ICfmlrDlu7rnlKjkvosnLCBfYVtvcGVyYXRpb25FbnVtLkVESVRdID0gJ+e8lui+keeUqOS+iycsIF9hW29wZXJhdGlvbkVudW0uVklFV10gPSAn5p+l55yL55So5L6LJywgX2EpOwp2YXIgY2FzZVR5cGVFbnVtOwoKKGZ1bmN0aW9uIChjYXNlVHlwZUVudW0pIHsKICBjYXNlVHlwZUVudW1bIkZVTkNUSU9OQUwiXSA9ICJmdW5jdGlvbmFsIjsKICBjYXNlVHlwZUVudW1bIlBFUkZPUk1BTkNFIl0gPSAicGVyZm9ybWFuY2UiOwogIGNhc2VUeXBlRW51bVsiQVBJIl0gPSAiYXBpIjsKfSkoY2FzZVR5cGVFbnVtID0gZXhwb3J0cy5jYXNlVHlwZUVudW0gfHwgKGV4cG9ydHMuY2FzZVR5cGVFbnVtID0ge30pKTsKCmV4cG9ydHMuY2FzZVR5cGVUeXBlID0gKF9iID0ge30sIF9iW2Nhc2VUeXBlRW51bS5GVU5DVElPTkFMXSA9ICflip/og73mtYvor5UnLCBfYltjYXNlVHlwZUVudW0uUEVSRk9STUFOQ0VdID0gJ+aAp+iDvea1i+ivlScsIF9iW2Nhc2VUeXBlRW51bS5BUEldID0gJ+aOpeWPo+a1i+ivlScsIF9iKTsKdmFyIGV4ZWN1dGlvbkVudW07CgooZnVuY3Rpb24gKGV4ZWN1dGlvbkVudW0pIHsKICBleGVjdXRpb25FbnVtW2V4ZWN1dGlvbkVudW1bIk1BTlVBTCJdID0gMV0gPSAiTUFOVUFMIjsKICBleGVjdXRpb25FbnVtW2V4ZWN1dGlvbkVudW1bIkFVVE8iXSA9IDJdID0gIkFVVE8iOwp9KShleGVjdXRpb25FbnVtID0gZXhwb3J0cy5leGVjdXRpb25FbnVtIHx8IChleHBvcnRzLmV4ZWN1dGlvbkVudW0gPSB7fSkpOwoKZXhwb3J0cy5leGVjdXRpb25UeXBlID0gKF9jID0ge30sIF9jW2V4ZWN1dGlvbkVudW0uTUFOVUFMXSA9ICfmiYvliqgnLCBfY1tleGVjdXRpb25FbnVtLkFVVE9dID0gJ+iHquWKqCcsIF9jKTsKdmFyIHByaW9yaXR5RW51bTsKCihmdW5jdGlvbiAocHJpb3JpdHlFbnVtKSB7CiAgcHJpb3JpdHlFbnVtW3ByaW9yaXR5RW51bVsiUDEiXSA9IDFdID0gIlAxIjsKICBwcmlvcml0eUVudW1bcHJpb3JpdHlFbnVtWyJQMiJdID0gMl0gPSAiUDIiOwogIHByaW9yaXR5RW51bVtwcmlvcml0eUVudW1bIlAzIl0gPSAzXSA9ICJQMyI7Cn0pKHByaW9yaXR5RW51bSA9IGV4cG9ydHMucHJpb3JpdHlFbnVtIHx8IChleHBvcnRzLnByaW9yaXR5RW51bSA9IHt9KSk7CgpleHBvcnRzLnByaW9yaXR5VHlwZSA9IChfZCA9IHt9LCBfZFtwcmlvcml0eUVudW0uUDFdID0gJ1AxJywgX2RbcHJpb3JpdHlFbnVtLlAyXSA9ICdQMicsIF9kW3ByaW9yaXR5RW51bS5QM10gPSAnUDMnLCBfZCk7CnZhciBjYXNlVXBkYXRlVHlwZUVudW07CgooZnVuY3Rpb24gKGNhc2VVcGRhdGVUeXBlRW51bSkgewogIGNhc2VVcGRhdGVUeXBlRW51bVsiREVMRVRFIl0gPSAiZGVsZXRlIjsKICBjYXNlVXBkYXRlVHlwZUVudW1bIlVQREFURV9DQVNFIl0gPSAidXBkYXRlX2Nhc2UiOwogIGNhc2VVcGRhdGVUeXBlRW51bVsiVVBEQVRFX1BMQU5fU1RBVFVTIl0gPSAidXBkYXRlX3BsYW5fc3RhdHVzIjsKICBjYXNlVXBkYXRlVHlwZUVudW1bIlVQREFURV9QTEFOX0VYRUNVVE9SIl0gPSAidXBkYXRlX3BsYW5fZXhlY3V0b3IiOwogIGNhc2VVcGRhdGVUeXBlRW51bVsiVVBEQVRFX1JFVklFV19TVEFUVVMiXSA9ICJ1cGRhdGVfcmV2aWV3X3N0YXR1cyI7CiAgY2FzZVVwZGF0ZVR5cGVFbnVtWyJVUERBVEVfUExBTl9TTU9LRV9DSEVDSyJdID0gInVwZGF0ZV9wbGFuX3Ntb2tlX2NoZWNrIjsKfSkoY2FzZVVwZGF0ZVR5cGVFbnVtID0gZXhwb3J0cy5jYXNlVXBkYXRlVHlwZUVudW0gfHwgKGV4cG9ydHMuY2FzZVVwZGF0ZVR5cGVFbnVtID0ge30pKTsKCnZhciBjYXNlQmF0Y2hFZGl0RW51bTsKCihmdW5jdGlvbiAoY2FzZUJhdGNoRWRpdEVudW0pIHsKICBjYXNlQmF0Y2hFZGl0RW51bVsiUFJJT1JJVFkiXSA9ICJwcmlvcml0eSI7CiAgY2FzZUJhdGNoRWRpdEVudW1bIkNBU0VfVFlQRSJdID0gImNhc2VUeXBlIjsKICBjYXNlQmF0Y2hFZGl0RW51bVsiTUVUSE9EIl0gPSAibWV0aG9kIjsKICBjYXNlQmF0Y2hFZGl0RW51bVsiTUFJTlRBSU5FUiJdID0gIm1haW50YWluZXIiOwp9KShjYXNlQmF0Y2hFZGl0RW51bSA9IGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gfHwgKGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gPSB7fSkpOwoKZXhwb3J0cy5jYXNlQmF0Y2hFZGl0VHlwZSA9IChfZSA9IHt9LCBfZVtjYXNlQmF0Y2hFZGl0RW51bS5QUklPUklUWV0gPSAn55So5L6L562J57qnJywgLy8gW2Nhc2VCYXRjaEVkaXRFbnVtLkNBU0VfVFlQRV06ICfnsbvlnosnLAovLyBbY2FzZUJhdGNoRWRpdEVudW0uTUVUSE9EXTogJ+a1i+ivleaWueW8jycsCl9lW2Nhc2VCYXRjaEVkaXRFbnVtLk1BSU5UQUlORVJdID0gJ+e7tOaKpOS6uicsIF9lKTsKdmFyIHN0ZXBTdGF0dXNFbnVtOwoKKGZ1bmN0aW9uIChzdGVwU3RhdHVzRW51bSkgewogIHN0ZXBTdGF0dXNFbnVtWyJQQVNTIl0gPSAicGFzcyI7CiAgc3RlcFN0YXR1c0VudW1bIkZBSUwiXSA9ICJmYWlsIjsKICBzdGVwU3RhdHVzRW51bVsiQkxPQ0siXSA9ICJibG9jayI7CiAgc3RlcFN0YXR1c0VudW1bIlNLSVAiXSA9ICJza2lwIjsKfSkoc3RlcFN0YXR1c0VudW0gPSBleHBvcnRzLnN0ZXBTdGF0dXNFbnVtIHx8IChleHBvcnRzLnN0ZXBTdGF0dXNFbnVtID0ge30pKTsKCmV4cG9ydHMuc3RlcFN0YXR1c1R5cGUgPSAoX2YgPSB7fSwgX2Zbc3RlcFN0YXR1c0VudW0uUEFTU10gPSAn6YCa6L+HJywgX2Zbc3RlcFN0YXR1c0VudW0uRkFJTF0gPSAn5aSx6LSlJywgX2Zbc3RlcFN0YXR1c0VudW0uQkxPQ0tdID0gJ+mYu+WhnicsIF9mW3N0ZXBTdGF0dXNFbnVtLlNLSVBdID0gJ+i3s+i/hycsIF9mKTs="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/constant/TestCase.ts"],"names":[],"mappings":"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","sourcesContent":["// 用例树操作属性\nexport enum operationEnum {\n  ADD = 'add',\n  EDIT = 'edit',\n  VIEW = 'view',\n}\n\nexport const operationType = {\n  [operationEnum.ADD]: '新建用例',\n  [operationEnum.EDIT]: '编辑用例',\n  [operationEnum.VIEW]: '查看用例',\n}\n\nexport enum caseTypeEnum {\n  FUNCTIONAL = 'functional',\n  PERFORMANCE = 'performance',\n  API = 'api',\n}\n\nexport const caseTypeType = {\n  [caseTypeEnum.FUNCTIONAL]: '功能测试',\n  [caseTypeEnum.PERFORMANCE]: '性能测试',\n  [caseTypeEnum.API]: '接口测试',\n}\n\nexport enum executionEnum {\n  MANUAL = 1,\n  AUTO = 2,\n}\n\nexport const executionType = {\n  [executionEnum.MANUAL]: '手动',\n  [executionEnum.AUTO]: '自动',\n}\n\nexport enum priorityEnum {\n  P1 = 1,\n  P2 = 2,\n  P3 = 3,\n}\n\nexport const priorityType = {\n  [priorityEnum.P1]: 'P1',\n  [priorityEnum.P2]: 'P2',\n  [priorityEnum.P3]: 'P3',\n}\n\nexport enum caseUpdateTypeEnum {\n  DELETE = 'delete',\n  UPDATE_CASE = 'update_case',\n  UPDATE_PLAN_STATUS = 'update_plan_status',\n  UPDATE_PLAN_EXECUTOR = 'update_plan_executor',\n  UPDATE_REVIEW_STATUS = 'update_review_status',\n  UPDATE_PLAN_SMOKE_CHECK = 'update_plan_smoke_check',\n}\n\nexport enum caseBatchEditEnum {\n  PRIORITY = 'priority',\n  CASE_TYPE = 'caseType',\n  METHOD = 'method',\n  MAINTAINER = 'maintainer',\n}\n\nexport const caseBatchEditType = {\n  [caseBatchEditEnum.PRIORITY]: '用例等级',\n  // [caseBatchEditEnum.CASE_TYPE]: '类型',\n  // [caseBatchEditEnum.METHOD]: '测试方式',\n  [caseBatchEditEnum.MAINTAINER]: '维护人',\n}\n\nexport enum stepStatusEnum {\n  PASS = 'pass',\n  FAIL = 'fail',\n  BLOCK = 'block',\n  SKIP = 'skip',\n}\n\nexport const stepStatusType = {\n  [stepStatusEnum.PASS]: '通过',\n  [stepStatusEnum.FAIL]: '失败',\n  [stepStatusEnum.BLOCK]: '阻塞',\n  [stepStatusEnum.SKIP]: '跳过',\n}\n"],"sourceRoot":""}]}