{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js!/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-3!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/auto.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/api/auto.ts","mtime":1655949681742},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js","mtime":1644298102066},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9faW1wb3J0RGVmYXVsdCA9IHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQgfHwgZnVuY3Rpb24gKG1vZCkgewogIHJldHVybiBtb2QgJiYgbW9kLl9fZXNNb2R1bGUgPyBtb2QgOiB7CiAgICAiZGVmYXVsdCI6IG1vZAogIH07Cn07CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgaW5kZXhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2FwaS9pbmRleCIpKTsKCnZhciB1cmxQcmVmaXggPSAndjEvYXV0by9jYXNlJzsKZXhwb3J0cy5kZWZhdWx0ID0gewogIC8vIOiOt+WPluagh+etvuWIl+ihqAogIGdldEF1dG9UYWdzOiBmdW5jdGlvbiBnZXRBdXRvVGFncyhwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvdGFnIiksCiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOiOt+WPluiHquWKqOWMlueUqOS+i+agkQogIGdldEF1dG9DYXNlczogZnVuY3Rpb24gZ2V0QXV0b0Nhc2VzKHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi90cmVlIiksCiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOiOt+WPlumFjee9rumbhuWIl+ihqAogIGdldEF1dG9DYXNlQ29uZmlnTGlzdDogZnVuY3Rpb24gZ2V0QXV0b0Nhc2VDb25maWdMaXN0KHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9jb25maWciKSwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g5Yib5bu65oiW57yW6L6R6Ieq5Yqo5YyW6YWN572uCiAgY3JlYXRlT3JFZGl0QXV0b0NvbmZpZzogZnVuY3Rpb24gY3JlYXRlT3JFZGl0QXV0b0NvbmZpZyhwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL2NvbmZpZyIpLAogICAgICBkYXRhOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g5Yig6Zmk6Ieq5Yqo5YyW6YWN572uCiAgZGVsZXRlQXV0b0NvbmZpZzogZnVuY3Rpb24gZGVsZXRlQXV0b0NvbmZpZyhpZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2RlbGV0ZScsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9jb25maWcvIikuY29uY2F0KGlkKQogICAgfSk7CiAgfSwKICAvLyDmiafooYzoh6rliqjljJZjYXNlCiAgcnVuQXV0b0NvbmZpZzogZnVuY3Rpb24gcnVuQXV0b0NvbmZpZyhpZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvY29uZmlnL3J1bi8iKS5jb25jYXQoaWQpCiAgICB9KTsKICB9LAogIC8vIOiOt+WPluaOpeWPo+iHquWKqOWMluaehOW7uuiusOW9lQogIGdldEF1dG9SdW5IaXN0b3J5OiBmdW5jdGlvbiBnZXRBdXRvUnVuSGlzdG9yeShwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvcnVuL2hpc3RvcnkiKSwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g6I635Y+WYWxsdXJlIOaKpeWRiuamguiniAogIGdldEFsbHVyZVJlcG9ydDogZnVuY3Rpb24gZ2V0QWxsdXJlUmVwb3J0KGhpc3RvcnlJZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIi92MS9hdXRvL2Nhc2UvYWxsdXJlLyIuY29uY2F0KGhpc3RvcnlJZCkKICAgIH0pOwogIH0sCiAgLy8g6I635Y+W55So5L6LYWxsdXJl6K+m5oOFCiAgZ2V0QWxsdXJlRGV0YWlsOiBmdW5jdGlvbiBnZXRBbGx1cmVEZXRhaWwoY2FzZVVpZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9hbGx1cmUvZGV0YWlsLyIpLmNvbmNhdChjYXNlVWlkKQogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/auto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,IAAM,SAAS,GAAG,cAAlB;AACA,OAAA,CAAA,OAAA,GAAe;AACb;AACA,EAAA,WAFa,uBAED,MAFC,EAEa;AACxB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,YAAK,SAAL,SAFW;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GARY;AASb;AACA,EAAA,YAVa,wBAUA,MAVA,EAUc;AACzB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,YAAK,SAAL,UAFW;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKH,GAhBc;AAiBb;AACA,EAAA,qBAlBa,iCAkBS,MAlBT,EAkBuB;AAClC,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,YAAK,SAAL,YAFW;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GAxBY;AAyBb;AACA,EAAA,sBA1Ba,kCA0BU,MA1BV,EA0BwB;AACnC,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,MADM;AAEd,MAAA,GAAG,YAAK,SAAL,YAFW;AAGd,MAAA,IAAI,EAAE;AAHQ,KAAT,CAAP;AAKD,GAhCY;AAiCb;AACA,EAAA,gBAlCa,4BAkCI,EAlCJ,EAkCc;AACzB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,QADM;AAEd,MAAA,GAAG,YAAK,SAAL,qBAAyB,EAAzB;AAFW,KAAT,CAAP;AAID,GAvCY;AAwCb;AACA,EAAA,aAzCa,yBAyCC,EAzCD,EAyCW;AACtB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,MADM;AAEd,MAAA,GAAG,YAAK,SAAL,yBAA6B,EAA7B;AAFW,KAAT,CAAP;AAID,GA9CY;AA+Cb;AACA,EAAA,iBAhDa,6BAgDK,MAhDL,EAgDmB;AAC9B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,YAAK,SAAL,iBAFW;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GAtDY;AAuDb;AACA,EAAA,eAxDa,2BAwDG,SAxDH,EAwDoB;AAC/B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,iCAA0B,SAA1B;AAFW,KAAT,CAAP;AAID,GA7DY;AA8Db;AACA,EAAA,eA/Da,2BA+DG,OA/DH,EA+DkB;AAC7B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,YAAK,SAAL,4BAAgC,OAAhC;AAFW,KAAT,CAAP;AAID;AApEY,CAAf","sourcesContent":["import instance from '@/api/index'\n\nconst urlPrefix = 'v1/auto/case'\nexport default {\n  // 获取标签列表\n  getAutoTags(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/tag`,\n      params: params\n    })\n  },\n  // 获取自动化用例树\n  getAutoCases(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/tree`,\n      params: params\n    })\n},\n  // 获取配置集列表\n  getAutoCaseConfigList(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/config`,\n      params: params\n    })\n  },\n  // 创建或编辑自动化配置\n  createOrEditAutoConfig(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/config`,\n      data: params\n    })\n  },\n  // 删除自动化配置\n  deleteAutoConfig(id: string) {\n    return instance({\n      method: 'delete',\n      url: `${urlPrefix}/config/${id}`\n    })\n  },\n  // 执行自动化case\n  runAutoConfig(id: string) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/config/run/${id}`\n    })\n  },\n  // 获取接口自动化构建记录\n  getAutoRunHistory(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/run/history`,\n      params: params\n    })\n  },\n  // 获取allure 报告概览\n  getAllureReport(historyId: string) {\n    return instance({\n      method: 'get',\n      url: `/v1/auto/case/allure/${historyId}`,\n    })\n  },\n  // 获取用例allure详情\n  getAllureDetail(caseUid: string) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/allure/detail/${caseUid}`\n    })\n  }\n\n\n}\n"],"sourceRoot":""}]}