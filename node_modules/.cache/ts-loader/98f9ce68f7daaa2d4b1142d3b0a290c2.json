{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanList.vue","mtime":1655949681803},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5lbnRyaWVzLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwoKdmFyIF9faW1wb3J0RGVmYXVsdCA9IHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQgfHwgZnVuY3Rpb24gKG1vZCkgewogIHJldHVybiBtb2QgJiYgbW9kLl9fZXNNb2R1bGUgPyBtb2QgOiB7CiAgICAiZGVmYXVsdCI6IG1vZAogIH07Cn07CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgYXBpXzEgPSByZXF1aXJlKCJAL2FwaSIpOwoKdmFyIHV0aWxzX3Njc3NfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2Fzc2V0cy9jc3MvdXRpbHMuc2NzcyIpKTsKCnZhciBUYWJsZVBhZ2luYXRpb25fdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9jb21tb24vY29tcG9uZW50cy9wYWdpbmF0aW9uL1RhYmxlUGFnaW5hdGlvbi52dWUiKSk7Cgp2YXIgVGFibGVIZWFkZXJfdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZUhlYWRlci52dWUiKSk7Cgp2YXIgVGFibGVPcGVyYXRvcl92dWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlT3BlcmF0b3IudnVlIikpOwoKdmFyIHV0aWxzXzEgPSByZXF1aXJlKCJAL2NvbW1vbi91dGlscyIpOwoKdmFyIGNvbnN0YW50XzEgPSByZXF1aXJlKCJAL2NvbnN0YW50Iik7Cgp2YXIgcm91dGVEYXRhXzEgPSByZXF1aXJlKCJAL2NvbnN0YW50L3JvdXRlRGF0YSIpOwoKdmFyIFRlc3RQbGFuXzEgPSByZXF1aXJlKCJAL2NvbnN0YW50L1Rlc3RQbGFuIik7Cgp2YXIgUGxhblN0YWdlVGFibGVJdGVtX3Z1ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoIkAvcGFnZXMvdHJhY2svY29tbW9uL3RhYmxlSXRlbXMvUGxhblN0YWdlVGFibGVJdGVtLnZ1ZSIpKTsKCnZhciBQbGFuU3RhdHVzVGFibGVJdGVtX3Z1ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoIkAvcGFnZXMvdHJhY2svY29tbW9uL3RhYmxlSXRlbXMvUGxhblN0YXR1c1RhYmxlSXRlbS52dWUiKSk7Cgp2YXIgUGxhblRlc3RUYWJsZUl0ZW1fdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9wYWdlcy90cmFjay9jb21tb24vdGFibGVJdGVtcy9QbGFuVGVzdFRhYmxlSXRlbS52dWUiKSk7Cgp2YXIgZWxlbWVudF91aV8xID0gcmVxdWlyZSgiZWxlbWVudC11aSIpOyAvLyDlvZPliY3nirbmgIEKCgp2YXIgcGxhblN0YXR1c09wdGlvbnMgPSBPYmplY3QuZW50cmllcyhUZXN0UGxhbl8xLnBsYW5TdGF0dXNUeXBlKS5tYXAoZnVuY3Rpb24gKF9hKSB7CiAgdmFyIHZhbHVlID0gX2FbMF0sCiAgICAgIHRleHQgPSBfYVsxXTsKICByZXR1cm4gewogICAgdGV4dDogdGV4dCwKICAgIHZhbHVlOiB2YWx1ZQogIH07Cn0pOwpleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogIlRlc3RQbGFuTGlzdCIsCiAgY29tcG9uZW50czogewogICAgUGxhblRlc3RUYWJsZUl0ZW06IFBsYW5UZXN0VGFibGVJdGVtX3Z1ZV8xLmRlZmF1bHQsCiAgICBQbGFuU3RhZ2VUYWJsZUl0ZW06IFBsYW5TdGFnZVRhYmxlSXRlbV92dWVfMS5kZWZhdWx0LAogICAgUGxhblN0YXR1czogUGxhblN0YXR1c1RhYmxlSXRlbV92dWVfMS5kZWZhdWx0LAogICAgVGFibGVPcGVyYXRvcjogVGFibGVPcGVyYXRvcl92dWVfMS5kZWZhdWx0LAogICAgVGFibGVQYWdpbmF0aW9uOiBUYWJsZVBhZ2luYXRpb25fdnVlXzEuZGVmYXVsdCwKICAgIFRhYmxlSGVhZGVyOiBUYWJsZUhlYWRlcl92dWVfMS5kZWZhdWx0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxhblN0YXR1c09wdGlvbnM6IHBsYW5TdGF0dXNPcHRpb25zLAogICAgICBwbGFuU3RhZ2VFbnVtOiBUZXN0UGxhbl8xLnBsYW5TdGFnZUVudW0sCiAgICAgIHBsYW5JbnN0YW5jZVN0YXR1c0VudW06IFRlc3RQbGFuXzEucGxhbkluc3RhbmNlU3RhdHVzRW51bSwKICAgICAgcHJvamVjdHM6IHRoaXMucHJvamVjdHMsCiAgICAgIHVzZXJzOiB0aGlzLnVzZXJzLAogICAgICBpc1JlamVjdDogZmFsc2UsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBwYWdlU2l6ZTogY29uc3RhbnRfMS5QQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICAgIHRvdGFsOiAwLAogICAgICBjYXNlRmlsdGVyOiB7fQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBjb25kaXRpb246IE9iamVjdCwKICAgIHN0YWdlOiBTdHJpbmcKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubG9hZGluZzsKICAgIH0sCiAgICB0YWJsZTRCdG5XaWR0aDogZnVuY3Rpb24gdGFibGU0QnRuV2lkdGgoKSB7CiAgICAgIHJldHVybiB1dGlsc19zY3NzXzEuZGVmYXVsdFsndGFibGU0QnRuV2lkdGgnXTsKICAgIH0sCiAgICBwbGFuU3RhZ2VPcHRpb25zOiBmdW5jdGlvbiBwbGFuU3RhZ2VPcHRpb25zKCkgewogICAgICBpZiAodGhpcy5zdGFnZSA9PT0gVGVzdFBsYW5fMS5wbGFuU3RhZ2VFbnVtLlNNT0tFKSB7CiAgICAgICAgLy8gQHRzLWlnbm9yZQogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwogICAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhUZXN0UGxhbl8xLnBsYW5TdGFnZVR5cGUpLmZpbHRlcihmdW5jdGlvbiAoX2EpIHsKICAgICAgICAgIHZhciB2YWx1ZSA9IF9hWzBdLAogICAgICAgICAgICAgIHRleHQgPSBfYVsxXTsKICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gVGVzdFBsYW5fMS5wbGFuU3RhZ2VFbnVtLlNNT0tFOwogICAgICAgIH0pLm1hcChmdW5jdGlvbiAoX2EpIHsKICAgICAgICAgIHZhciB2YWx1ZSA9IF9hWzBdLAogICAgICAgICAgICAgIHRleHQgPSBfYVsxXTsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRleHQ6IHRleHQsCiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZQogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBAdHMtaWdub3JlCiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKFRlc3RQbGFuXzEucGxhblN0YWdlVHlwZSkuZmlsdGVyKGZ1bmN0aW9uIChfYSkgewogICAgICAgICAgdmFyIHZhbHVlID0gX2FbMF0sCiAgICAgICAgICAgICAgdGV4dCA9IF9hWzFdOwogICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBUZXN0UGxhbl8xLnBsYW5TdGFnZUVudW0uU01PS0U7CiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChfYSkgewogICAgICAgICAgdmFyIHZhbHVlID0gX2FbMF0sCiAgICAgICAgICAgICAgdGV4dCA9IF9hWzFdOwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGV4dDogdGV4dCwKICAgICAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBpbmplY3Q6IFsncHJvamVjdHMnLCAndXNlcnMnXSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0VGFibGVEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0VGFibGVEYXRhOiBmdW5jdGlvbiBpbml0VGFibGVEYXRhKCkgewogICAgICB0aGlzLnNldFNlbGVjdE9wdGlvbnMoKTsKICAgICAgdGhpcy5nZXREYXRhKCk7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpjb25kaXRpb24nLCB0aGlzLmNvbmRpdGlvbik7CiAgICB9LAogICAgc2V0U2VsZWN0T3B0aW9uczogZnVuY3Rpb24gc2V0U2VsZWN0T3B0aW9ucygpIHsKICAgICAgdGhpcy5zZXRPd25lck9wdGlvbnMoKTsKICAgICAgdGhpcy5zZXRQcm9qZWN0T3B0aW9ucygpOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEodmFsdWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkZWZhdWx0U3RhZ2UgPSB0aGlzLnBsYW5TdGFnZU9wdGlvbnMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIG9mZnNldDogdGhpcy5wYWdlU2l6ZSAqICh0aGlzLmN1cnJlbnRQYWdlIC0gMSksCiAgICAgICAgbGltaXQ6IHRoaXMucGFnZVNpemUsCiAgICAgICAgc3RhZ2U6IGRlZmF1bHRTdGFnZSwKICAgICAgICBuYW1lOiB2YWx1ZSwKICAgICAgICBpc1JlamVjdDogdGhpcy5pc1JlamVjdAogICAgICB9OwogICAgICB0aGlzLmNhc2VGaWx0ZXIgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHRoaXMuJHJvdXRlLnBhdGgpOwogICAgICB0aGlzLmNhc2VGaWx0ZXIgPSB0aGlzLmNhc2VGaWx0ZXIgPyBKU09OLnBhcnNlKHRoaXMuY2FzZUZpbHRlcikgOiB7fTsKCiAgICAgIGlmIChKU09OLnN0cmluZ2lmeSh0aGlzLmNhc2VGaWx0ZXIpICE9PSAie30iKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbihwYXJhbXMsIHRoaXMuY2FzZUZpbHRlcik7CgogICAgICAgIGlmICghdGhpcy5jYXNlRmlsdGVyLnN0YWdlIHx8IHRoaXMuY2FzZUZpbHRlci5zdGFnZS5sZW5ndGggPT09IDApIHsKICAgICAgICAgIE9iamVjdC5hc3NpZ24ocGFyYW1zLCB7CiAgICAgICAgICAgIHN0YWdlOiBkZWZhdWx0U3RhZ2UKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kcmVmcy50YWJsZS5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGl0ZW0uZmlsdGVyZWRWYWx1ZSA9IF90aGlzLmNhc2VGaWx0ZXJbaXRlbS5jb2x1bW5LZXldOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBhcGlfMS50ZXN0UGxhbkFwaS5nZXRUZXN0Q2FzZVBsYW5MaXN0KHBhcmFtcykudGhlbihmdW5jdGlvbiAoX2EpIHsKICAgICAgICB2YXIgZGF0YSA9IF9hLmRhdGE7CiAgICAgICAgX3RoaXMudG90YWwgPSBkYXRhLnRvdGFsOwogICAgICAgIF90aGlzLnRhYmxlRGF0YSA9IGRhdGEuZGF0YTsKCiAgICAgICAgX3RoaXMudGFibGVEYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGl0ZW0udGFyZ2V0U3RhcnQgPSB1dGlsc18xLmZvcm1hdFRpbWUoaXRlbS50YXJnZXRTdGFydCk7CiAgICAgICAgICBpdGVtLnRhcmdldEVuZCA9IHV0aWxzXzEuZm9ybWF0VGltZShpdGVtLnRhcmdldEVuZCk7CiAgICAgICAgICBpdGVtLmFjdHVhbFN0YXJ0ID0gdXRpbHNfMS5mb3JtYXRUaW1lKGl0ZW0uYWN0dWFsU3RhcnQpOwogICAgICAgICAgaXRlbS5hY3R1YWxFbmQgPSB1dGlsc18xLmZvcm1hdFRpbWUoaXRlbS5hY3R1YWxFbmQpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVBZGRPckVkaXQ6IGZ1bmN0aW9uIGhhbmRsZUFkZE9yRWRpdCh0ZXN0UGxhbikgewogICAgICB0aGlzLiRldmVudEJ1cy4kZW1pdCgndGVzdFBsYW5DcmVhdGVPclVwZGF0ZScsIHRlc3RQbGFuLCB0aGlzLnBsYW5TdGFnZU9wdGlvbnMpOwogICAgfSwKICAgIGhhbmRsZVNlYXJjaDogZnVuY3Rpb24gaGFuZGxlU2VhcmNoKHZhbHVlLCBmZXRjaFJlamVjdCkgewogICAgICBpZiAoZmV0Y2hSZWplY3QpIHsKICAgICAgICB0aGlzLmlzUmVqZWN0ID0gIXRoaXMuaXNSZWplY3Q7CiAgICAgIH0KCiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgICB0aGlzLmdldERhdGEodmFsdWUpOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKHRlc3RQbGFuKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRhbGVydCgn56Gu6K6k5Yig6Zmk5rWL6K+V6K6h5YiSPycsICcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKGFjdGlvbikgewogICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2NvbmZpcm0nKSB7CiAgICAgICAgICAgIGFwaV8xLnRlc3RQbGFuQXBpLmRlbGV0ZVRlc3RDYXNlUGxhbih0ZXN0UGxhbi5pZCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXMucmVmcmVzaCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlU3VibWl0KHRlc3RQbGFuKSB7CiAgICAgIHRoaXMuJGV2ZW50QnVzLiRlbWl0KCJwYWNrYWdpbmdUZXN0U3VibWl0IiwgdGVzdFBsYW4pOwogICAgfSwKICAgIGhhbmRsZVRvUmVwb3J0OiBmdW5jdGlvbiBoYW5kbGVUb1JlcG9ydCh0ZXN0UGxhbikgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogcm91dGVEYXRhXzEuUGF0aE5hbWUuVGVzdFRyYWNrQ2FzZVBsYW5SZXBvcnQsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBwbGFuSWQ6IHRlc3RQbGFuLmlkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB0aGlzLmluaXRUYWJsZURhdGEoKTsKICAgIH0sCiAgICBoYW5kbGVSb3dDbGljazogZnVuY3Rpb24gaGFuZGxlUm93Q2xpY2socm93KSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiByb3V0ZURhdGFfMS5QYXRoTmFtZS5UZXN0VHJhY2tDYXNlUGxhblZpZXcsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBwbGFuSWQ6IHJvdy5pZAogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UodGVzdFBsYW4pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsgLy8g5YaS54Of55So5L6L5a6h5om56YCa6L+H6ZyA6KaB5rWL6K+V5qOA5p+l6YCa6L+H546H6L6+MTAwJQoKCiAgICAgIGlmICh0aGlzLmNvbW1hbmQgPT09IFRlc3RQbGFuXzEucGxhbkluc3RhbmNlU3RhdHVzRW51bS5BUFBST1ZFRCAmJiB0ZXN0UGxhbi5jaGVja1BlcmNlbnRhZ2UgIT09IDEwMCkgewogICAgICAgIGVsZW1lbnRfdWlfMS5NZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICLlrqHmibnpgJrov4fpnIDopoHnoa7orqTmiJDlip/njofovr4xMDAlIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLAogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgYm9keSA9IHsKICAgICAgICBzdGF0dXM6IHRoaXMuY29tbWFuZCwKICAgICAgICB1c2VyRW1haWw6IHRoaXMuJHN0b3JlLnN0YXRlLmxvZ2luLmVtYWlsCiAgICAgIH07CiAgICAgIGFwaV8xLnRlc3RQbGFuQXBpLnVwZGF0ZUFwcHJvdmFsU3RhdHVzKHRlc3RQbGFuLmlkLCBib2R5KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXMuY29tbWFuZCA9PT0gVGVzdFBsYW5fMS5wbGFuSW5zdGFuY2VTdGF0dXNFbnVtLkFQUFJPVkVEKSB7CiAgICAgICAgICBhcGlfMS50ZXN0UGxhbkFwaS51cGRhdGVUZXN0Q2FzZVBsYW4odGVzdFBsYW4uaWQsIHsKICAgICAgICAgICAgc3RhdHVzOiBUZXN0UGxhbl8xLnBsYW5TdGF0dXNFbnVtLkRPTkUKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpcy5yZWZyZXNoKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMucmVmcmVzaCgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgYXBwcm92YWxTdGF0dXM6IGZ1bmN0aW9uIGFwcHJvdmFsU3RhdHVzKGNvbW1hbmQpIHsKICAgICAgdGhpcy5jb21tYW5kID0gY29tbWFuZDsKICAgIH0sCiAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihmaWx0ZXJzKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwoKICAgICAgdXRpbHNfMS5fZmlsdGVyKGZpbHRlcnMsIHRoaXMuY2FzZUZpbHRlciwgdGhpcy4kcm91dGUucGF0aCk7CgogICAgICB0aGlzLmluaXRUYWJsZURhdGEoKTsKICAgIH0sCiAgICBzZXRPd25lck9wdGlvbnM6IGZ1bmN0aW9uIHNldE93bmVyT3B0aW9ucygpIHsKICAgICAgdGhpcy5jb25kaXRpb24ub3duZXJPcHRpb25zID0gdGhpcy51c2VyczsKICAgIH0sCiAgICBzZXRQcm9qZWN0T3B0aW9uczogZnVuY3Rpb24gc2V0UHJvamVjdE9wdGlvbnMoKSB7CiAgICAgIHRoaXMuY29uZGl0aW9uLnByb2plY3RPcHRpb25zID0gdGhpcy5wcm9qZWN0czsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqKA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oDAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,uCAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wDAAA,CAAA,CAAA;;AACA,IAAA,yBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yDAAA,CAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,uDAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA,C,CAGA;;;AACA,IAAM,iBAAiB,GAAG,MAAM,CAAC,OAAP,CAAe,UAAA,CAAA,cAAf,EAA+B,GAA/B,CAAmC,UAAC,EAAD,EAAc;MAAZ,KAAK,GAAA,EAAA,CAAA,CAAA,C;MAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AACxE,SAAO;AAAC,IAAA,IAAI,EAAE,IAAP;AAAa,IAAA,KAAK,EAAE;AAApB,GAAP;AACD,CAFyB,CAA1B;AAKA,OAAA,CAAA,OAAA,GAAe;AACb,EAAA,IAAI,EAAE,cADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,iBAAiB,EAAA,uBAAA,CAAA,OADP;AAEV,IAAA,kBAAkB,EAAA,wBAAA,CAAA,OAFR;AAGV,IAAA,UAAU,EAAA,yBAAA,CAAA,OAHA;AAIV,IAAA,aAAa,EAAA,mBAAA,CAAA,OAJH;AAKV,IAAA,eAAe,EAAA,qBAAA,CAAA,OALL;AAMV,IAAA,WAAW,EAAA,iBAAA,CAAA;AAND,GAFC;AAUb,EAAA,IAAI,EAAA,gBAAA;AACF,WAAO;AACL,MAAA,iBAAiB,EAAE,iBADd;AAEL,MAAA,aAAa,EAAE,UAAA,CAAA,aAFV;AAGL,MAAA,sBAAsB,EAAE,UAAA,CAAA,sBAHnB;AAIL,MAAA,QAAQ,EAAE,KAAK,QAJV;AAKL,MAAA,KAAK,EAAE,KAAK,KALP;AAML,MAAA,QAAQ,EAAE,KANL;AAOL,MAAA,SAAS,EAAE,EAPN;AAQL,MAAA,WAAW,EAAE,CARR;AASL,MAAA,QAAQ,EAAE,UAAA,CAAA,eAAA,CAAgB,KATrB;AAUL,MAAA,KAAK,EAAE,CAVF;AAWL,MAAA,UAAU,EAAE;AAXP,KAAP;AAaD,GAxBY;AAyBb,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE,MADN;AAEL,IAAA,KAAK,EAAE;AAFF,GAzBM;AA6Bb,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,EAAA,mBAAA;AACL,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAzB;AACD,KAHO;AAIR,IAAA,cAAc,EAAA,0BAAA;AACZ,aAAO,YAAA,CAAA,OAAA,CAAU,gBAAV,CAAP;AACD,KANO;AAOR,IAAA,gBAAgB,EAAA,4BAAA;AACd,UAAI,KAAK,KAAL,KAAe,UAAA,CAAA,aAAA,CAAc,KAAjC,EAAwC;AACtC;AACA;AACA,eAAO,MAAM,CAAC,OAAP,CAAe,UAAA,CAAA,aAAf,EAA8B,MAA9B,CAAqC,UAAC,EAAD,EAAc;cAAZ,KAAK,GAAA,EAAA,CAAA,CAAA,C;cAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AAAM,iBAAA,KAAK,KAAK,UAAA,CAAA,aAAA,CAAc,KAAxB;AAA6B,SAArF,EAAuF,GAAvF,CAA2F,UAAC,EAAD,EAAc;cAAZ,KAAK,GAAA,EAAA,CAAA,CAAA,C;cAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AAC7G,iBAAO;AAAC,YAAA,IAAI,EAAE,IAAP;AAAa,YAAA,KAAK,EAAE;AAApB,WAAP;AACD,SAFM,CAAP;AAGD,OAND,MAMO;AACL;AACA;AACA,eAAO,MAAM,CAAC,OAAP,CAAe,UAAA,CAAA,aAAf,EAA8B,MAA9B,CAAqC,UAAC,EAAD,EAAc;cAAZ,KAAK,GAAA,EAAA,CAAA,CAAA,C;cAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AAAM,iBAAA,KAAK,KAAK,UAAA,CAAA,aAAA,CAAc,KAAxB;AAA6B,SAArF,EAAuF,GAAvF,CAA2F,UAAC,EAAD,EAAc;cAAZ,KAAK,GAAA,EAAA,CAAA,CAAA,C;cAAE,IAAI,GAAA,EAAA,CAAA,CAAA,C;AAC7G,iBAAO;AAAC,YAAA,IAAI,EAAE,IAAP;AAAa,YAAA,KAAK,EAAE;AAApB,WAAP;AACD,SAFM,CAAP;AAGD;AACF;AArBO,GA7BG;AAoDb,EAAA,MAAM,EAAE,CAAC,UAAD,EAAa,OAAb,CApDK;AAqDb,EAAA,OAAO,EAAA,mBAAA;AACL,SAAK,aAAL;AACD,GAvDY;AAwDb,EAAA,OAAO,EAAE;AACP,IAAA,aAAa,EAAA,yBAAA;AACX,WAAK,gBAAL;AACA,WAAK,OAAL;AACA,WAAK,KAAL,CAAW,kBAAX,EAA+B,KAAK,SAApC;AACD,KALM;AAMP,IAAA,gBAAgB,EAAA,4BAAA;AACd,WAAK,eAAL;AACA,WAAK,iBAAL;AACD,KATM;AAUP,IAAA,OAAO,EAAP,iBAAQ,KAAR,EAAsB;AAAtB,UAAA,KAAA,GAAA,IAAA;;AACE,UAAI,YAAY,GAAG,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,UAAC,IAAD,EAAU;AACrD,eAAO,IAAI,CAAC,KAAZ;AACD,OAFkB,CAAnB;AAGA,UAAM,MAAM,GAA+B;AACzC,QAAA,MAAM,EAAE,KAAK,QAAL,IAAiB,KAAK,WAAL,GAAmB,CAApC,CADiC;AAEzC,QAAA,KAAK,EAAE,KAAK,QAF6B;AAGzC,QAAA,KAAK,EAAE,YAHkC;AAIzC,QAAA,IAAI,EAAE,KAJmC;AAKzC,QAAA,QAAQ,EAAE,KAAK;AAL0B,OAA3C;AAOA,WAAK,UAAL,GAAkB,cAAc,CAAC,OAAf,CAAuB,KAAK,MAAL,CAAY,IAAnC,CAAlB;AACA,WAAK,UAAL,GAAkB,KAAK,UAAL,GAAkB,IAAI,CAAC,KAAL,CAAW,KAAK,UAAhB,CAAlB,GAAgD,EAAlE;;AACA,UAAI,IAAI,CAAC,SAAL,CAAe,KAAK,UAApB,MAAoC,IAAxC,EAA8C;AAC5C,QAAA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,KAAK,UAA3B;;AACA,YAAI,CAAC,KAAK,UAAL,CAAgB,KAAjB,IAA0B,KAAK,UAAL,CAAgB,KAAhB,CAAsB,MAAtB,KAAiC,CAA/D,EAAkE;AAChE,UAAA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB;AAAC,YAAA,KAAK,EAAE;AAAR,WAAtB;AACD;;AACD,aAAK,KAAL,CAAW,KAAX,CAAiB,OAAjB,CAAyB,OAAzB,CAAiC,UAAC,IAAD,EAAU;AACzC,UAAA,IAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,UAAL,CAAgB,IAAI,CAAC,SAArB,CAArB;AACD,SAFD;AAGD;;AAED,MAAA,KAAA,CAAA,WAAA,CAAY,mBAAZ,CAAgC,MAAhC,EACG,IADH,CACQ,UAAC,EAAD,EAAO;YAAL,IAAI,GAAA,EAAA,CAAA,I;AACV,QAAA,KAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAlB;AACA,QAAA,KAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,IAAtB;;AACA,QAAA,KAAI,CAAC,SAAL,CAAe,OAAf,CAAuB,UAAC,IAAD,EAAmB;AACxC,UAAA,IAAI,CAAC,WAAL,GAAmB,OAAA,CAAA,UAAA,CAAW,IAAI,CAAC,WAAhB,CAAnB;AACA,UAAA,IAAI,CAAC,SAAL,GAAiB,OAAA,CAAA,UAAA,CAAW,IAAI,CAAC,SAAhB,CAAjB;AACA,UAAA,IAAI,CAAC,WAAL,GAAmB,OAAA,CAAA,UAAA,CAAW,IAAI,CAAC,WAAhB,CAAnB;AACA,UAAA,IAAI,CAAC,SAAL,GAAiB,OAAA,CAAA,UAAA,CAAW,IAAI,CAAC,SAAhB,CAAjB;AACD,SALD;AAMD,OAVH;AAWD,KA5CM;AA6CP,IAAA,eAAe,EAAf,yBAAgB,QAAhB,EAAuC;AACrC,WAAK,SAAL,CAAe,KAAf,CAAqB,wBAArB,EAA+C,QAA/C,EAAyD,KAAK,gBAA9D;AACD,KA/CM;AAgDP,IAAA,YAAY,EAAZ,sBAAa,KAAb,EAA6B,WAA7B,EAAkD;AAChD,UAAI,WAAJ,EAAiB;AACf,aAAK,QAAL,GAAgB,CAAC,KAAK,QAAtB;AACD;;AACD,WAAK,WAAL,GAAmB,CAAnB;AACA,WAAK,OAAL,CAAa,KAAb;AACD,KAtDM;AAuDP,IAAA,YAAY,EAAZ,sBAAa,QAAb,EAAmC;AAAnC,UAAA,KAAA,GAAA,IAAA;;AACE,WAAK,MAAL,CAAY,WAAZ,EAAyB,EAAzB,EAA6B;AAC3B,QAAA,iBAAiB,EAAE,IADQ;AAE3B,QAAA,gBAAgB,EAAE,IAFS;AAG3B,QAAA,gBAAgB,EAAE,IAHS;AAI3B,QAAA,QAAQ,EAAE,kBAAC,MAAD,EAAe;AACvB,cAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,YAAA,KAAA,CAAA,WAAA,CAAY,kBAAZ,CAA+B,QAAQ,CAAC,EAAxC,EACG,IADH,CACQ,YAAA;AACJ,cAAA,KAAI,CAAC,OAAL;AACD,aAHH;AAID;AACF;AAX0B,OAA7B;AAaD,KArEM;AAsEP,IAAA,YAAY,EAAZ,sBAAa,QAAb,EAAmC;AACjC,WAAK,SAAL,CAAe,KAAf,CAAqB,qBAArB,EAA4C,QAA5C;AACD,KAxEM;AAyEP,IAAA,cAAc,EAAd,wBAAe,QAAf,EAAqC;AACnC,WAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,QAAA,IAAI,EAAE,WAAA,CAAA,QAAA,CAAS,uBADC;AAEhB,QAAA,MAAM,EAAE;AAAC,UAAA,MAAM,EAAE,QAAQ,CAAC;AAAlB;AAFQ,OAAlB;AAID,KA9EM;AA+EP,IAAA,OAAO,EAAA,mBAAA;AACL,WAAK,aAAL;AACD,KAjFM;AAkFP,IAAA,cAAc,EAAd,wBAAe,GAAf,EAAuB;AACrB,WAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,QAAA,IAAI,EAAE,WAAA,CAAA,QAAA,CAAS,qBADC;AAEhB,QAAA,MAAM,EAAE;AAAC,UAAA,MAAM,EAAE,GAAG,CAAC;AAAb;AAFQ,OAAlB;AAID,KAvFM;AAwFP,IAAA,YAAY,EAAZ,sBAAa,QAAb,EAAmC;AAAnC,UAAA,KAAA,GAAA,IAAA,CAAmC,CACjC;;;AACA,UAAI,KAAK,OAAL,KAAiB,UAAA,CAAA,sBAAA,CAAuB,QAAxC,IAAoD,QAAQ,CAAC,eAAT,KAA6B,GAArF,EAA0F;AACxF,QAAA,YAAA,CAAA,OAAA,CAAQ;AACN,UAAA,OAAO,EAAE,kBADH;AAEN,UAAA,IAAI,EAAE,SAFA;AAGN,UAAA,QAAQ,EAAE,IAHJ;AAIN,UAAA,SAAS,EAAE;AAJL,SAAR;AAMA;AACD;;AACD,UAAI,IAAI,GAAgC;AACtC,QAAA,MAAM,EAAE,KAAK,OADyB;AAEtC,QAAA,SAAS,EAAE,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,CAAwB;AAFG,OAAxC;AAIA,MAAA,KAAA,CAAA,WAAA,CAAY,oBAAZ,CAAiC,QAAQ,CAAC,EAA1C,EAA8C,IAA9C,EACG,IADH,CACQ,YAAA;AACJ,YAAI,KAAI,CAAC,OAAL,KAAiB,UAAA,CAAA,sBAAA,CAAuB,QAA5C,EAAsD;AACpD,UAAA,KAAA,CAAA,WAAA,CAAY,kBAAZ,CAA+B,QAAQ,CAAC,EAAxC,EAA4C;AAAC,YAAA,MAAM,EAAE,UAAA,CAAA,cAAA,CAAe;AAAxB,WAA5C,EACG,IADH,CACQ,YAAA;AACJ,YAAA,KAAI,CAAC,OAAL;AACD,WAHH;AAID,SALD,MAKO;AACL,UAAA,KAAI,CAAC,OAAL;AACD;AACF,OAVH;AAWD,KAlHM;AAmHP,IAAA,cAAc,EAAd,wBAAe,OAAf,EAA8C;AAC5C,WAAK,OAAL,GAAe,OAAf;AACD,KArHM;AAsHP,IAAA,MAAM,EAAN,gBAAO,OAAP,EAAmB;AACjB,WAAK,WAAL,GAAmB,CAAnB;;AACA,MAAA,OAAA,CAAA,OAAA,CAAQ,OAAR,EAAiB,KAAK,UAAtB,EAAkC,KAAK,MAAL,CAAY,IAA9C;;AACA,WAAK,aAAL;AACD,KA1HM;AA2HP,IAAA,eAAe,EAAA,2BAAA;AACb,WAAK,SAAL,CAAe,YAAf,GAA8B,KAAK,KAAnC;AACD,KA7HM;AA8HP,IAAA,iBAAiB,EAAA,6BAAA;AACf,WAAK,SAAL,CAAe,cAAf,GAAgC,KAAK,QAArC;AACD;AAhIM;AAxDI,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testPlanApi} from \"@/api\"\nimport {RequestGetTestCasePlanList, RequestUpdateApprovalStatus} from \"@/api/types/testPlan\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {_filter, formatTime} from \"@/common/utils\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport {planInstanceStatusEnum, planStageEnum, planStageType, planStatusEnum, planStatusType} from \"@/constant/TestPlan\"\nimport PlanStageTableItem from \"@/pages/track/common/tableItems/PlanStageTableItem.vue\"\nimport PlanStatus from \"@/pages/track/common/tableItems/PlanStatusTableItem.vue\"\nimport PlanTestTableItem from \"@/pages/track/common/tableItems/PlanTestTableItem.vue\"\nimport {Message} from \"element-ui\"\n\n\n// 当前状态\nconst planStatusOptions = Object.entries(planStatusType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\n\nexport default {\n  name: \"TestPlanList\",\n  components: {\n    PlanTestTableItem,\n    PlanStageTableItem,\n    PlanStatus,\n    TableOperator,\n    TablePagination,\n    TableHeader,\n  },\n  data() {\n    return {\n      planStatusOptions: planStatusOptions,\n      planStageEnum: planStageEnum,\n      planInstanceStatusEnum: planInstanceStatusEnum,\n      projects: this.projects,\n      users: this.users,\n      isReject: false,\n      tableData: [],\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      caseFilter: {},\n    }\n  },\n  props: {\n    condition: Object,\n    stage: String,\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    table4BtnWidth() {\n      return variables['table4BtnWidth']\n    },\n    planStageOptions() {\n      if (this.stage === planStageEnum.SMOKE) {\n        // @ts-ignore\n        // eslint-disable-next-line no-unused-vars\n        return Object.entries(planStageType).filter(([value, text]) => value === planStageEnum.SMOKE).map(([value, text]) => {\n          return {text: text, value: value}\n        })\n      } else {\n        // @ts-ignore\n        // eslint-disable-next-line no-unused-vars\n        return Object.entries(planStageType).filter(([value, text]) => value !== planStageEnum.SMOKE).map(([value, text]) => {\n          return {text: text, value: value}\n        })\n      }\n    }\n  },\n  inject: ['projects', 'users'],\n  mounted() {\n    this.initTableData()\n  },\n  methods: {\n    initTableData() {\n      this.setSelectOptions()\n      this.getData()\n      this.$emit('update:condition', this.condition)\n    },\n    setSelectOptions() {\n      this.setOwnerOptions()\n      this.setProjectOptions()\n    },\n    getData(value?: string) {\n      let defaultStage = this.planStageOptions.map((item: any) => {\n        return item.value\n      })\n      const params: RequestGetTestCasePlanList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        stage: defaultStage,\n        name: value,\n        isReject: this.isReject,\n      }\n      this.caseFilter = sessionStorage.getItem(this.$route.path)\n      this.caseFilter = this.caseFilter ? JSON.parse(this.caseFilter) : {}\n      if (JSON.stringify(this.caseFilter) !== \"{}\") {\n        Object.assign(params, this.caseFilter)\n        if (!this.caseFilter.stage || this.caseFilter.stage.length === 0) {\n          Object.assign(params, {stage: defaultStage})\n        }\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.caseFilter[item.columnKey]\n        })\n      }\n\n      testPlanApi.getTestCasePlanList(params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n          this.tableData.forEach((item: typePlanData) => {\n            item.targetStart = formatTime(item.targetStart)\n            item.targetEnd = formatTime(item.targetEnd)\n            item.actualStart = formatTime(item.actualStart)\n            item.actualEnd = formatTime(item.actualEnd)\n          })\n        })\n    },\n    handleAddOrEdit(testPlan?: typePlanData) {\n      this.$eventBus.$emit('testPlanCreateOrUpdate', testPlan, this.planStageOptions)\n    },\n    handleSearch(value?: string, fetchReject?: boolean) {\n      if (fetchReject) {\n        this.isReject = !this.isReject\n      }\n      this.currentPage = 1\n      this.getData(value)\n    },\n    handleDelete(testPlan: typePlanData) {\n      this.$alert('确认删除测试计划?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            testPlanApi.deleteTestCasePlan(testPlan.id)\n              .then(() => {\n                this.refresh()\n              })\n          }\n        }\n      })\n    },\n    handleSubmit(testPlan: typePlanData) {\n      this.$eventBus.$emit(\"packagingTestSubmit\", testPlan)\n    },\n    handleToReport(testPlan: typePlanData) {\n      this.$router.push({\n        name: PathName.TestTrackCasePlanReport,\n        params: {planId: testPlan.id},\n      })\n    },\n    refresh() {\n      this.initTableData()\n    },\n    handleRowClick(row: any) {\n      this.$router.push({\n        name: PathName.TestTrackCasePlanView,\n        params: {planId: row.id},\n      })\n    },\n    handleChange(testPlan: typePlanData) {\n      // 冒烟用例审批通过需要测试检查通过率达100%\n      if (this.command === planInstanceStatusEnum.APPROVED && testPlan.checkPercentage !== 100) {\n        Message({\n          message: \"审批通过需要确认成功率达100%\",\n          type: \"warning\",\n          duration: 3000,\n          showClose: true\n        })\n        return\n      }\n      let body: RequestUpdateApprovalStatus = {\n        status: this.command,\n        userEmail: this.$store.state.login.email,\n      }\n      testPlanApi.updateApprovalStatus(testPlan.id, body)\n        .then(() => {\n          if (this.command === planInstanceStatusEnum.APPROVED) {\n            testPlanApi.updateTestCasePlan(testPlan.id, {status: planStatusEnum.DONE})\n              .then(() => {\n                this.refresh()\n              })\n          } else {\n            this.refresh()\n          }\n        })\n    },\n    approvalStatus(command: planInstanceStatusEnum) {\n      this.command = command\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.caseFilter, this.$route.path)\n      this.initTableData()\n    },\n    setOwnerOptions() {\n      this.condition.ownerOptions = this.users\n    },\n    setProjectOptions() {\n      this.condition.projectOptions = this.projects\n    },\n  },\n}\n"],"sourceRoot":""}]}