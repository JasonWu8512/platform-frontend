{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCaseRelevance.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCaseRelevance.vue","mtime":1655949681804},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKCnZhciBfX2ltcG9ydERlZmF1bHQgPSB0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0IHx8IGZ1bmN0aW9uIChtb2QpIHsKICByZXR1cm4gbW9kICYmIG1vZC5fX2VzTW9kdWxlID8gbW9kIDogewogICAgImRlZmF1bHQiOiBtb2QKICB9Owp9OwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwoKdmFyIGFwaV8xID0gcmVxdWlyZSgiQC9hcGkiKTsKCnZhciBEaWFsb2dGb290ZXJfdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9jb21tb24vY29tcG9uZW50cy9EaWFsb2dGb290ZXIudnVlIikpOwoKdmFyIFRhYmxlUGFnaW5hdGlvbl92dWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2NvbW1vbi9jb21wb25lbnRzL3BhZ2luYXRpb24vVGFibGVQYWdpbmF0aW9uLnZ1ZSIpKTsKCnZhciBUYWJsZUhlYWRlcl92dWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIpKTsKCnZhciB1dGlsc18xID0gcmVxdWlyZSgiQC9jb21tb24vdXRpbHMiKTsKCnZhciBjb25zdGFudF8xID0gcmVxdWlyZSgiQC9jb25zdGFudCIpOwoKdmFyIFRlc3RQbGFuXzEgPSByZXF1aXJlKCJAL2NvbnN0YW50L1Rlc3RQbGFuIik7Cgp2YXIgTm9kZVRyZWVfdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9wYWdlcy90cmFjay9jb21tb24vTm9kZVRyZWUudnVlIikpOwoKdmFyIFNlbGVjdE1lbnVfdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9wYWdlcy90cmFjay9jb21tb24vU2VsZWN0TWVudS52dWUiKSk7Cgp2YXIgQ2FzZVR5cGVUYWJsZUl0ZW1fdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9wYWdlcy90cmFjay9jb21tb24vdGFibGVJdGVtcy9DYXNlVHlwZVRhYmxlSXRlbS52dWUiKSk7Cgp2YXIgUHJpb3JpdHlUYWJsZUl0ZW1fdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9wYWdlcy90cmFjay9jb21tb24vdGFibGVJdGVtcy9Qcmlvcml0eVRhYmxlSXRlbS52dWUiKSk7CgpleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogIlRlc3RDYXNlUmVsZXZhbmNlIiwKICBjb21wb25lbnRzOiB7CiAgICBDYXNlVHlwZVRhYmxlSXRlbTogQ2FzZVR5cGVUYWJsZUl0ZW1fdnVlXzEuZGVmYXVsdCwKICAgIFByaW9yaXR5VGFibGVJdGVtOiBQcmlvcml0eVRhYmxlSXRlbV92dWVfMS5kZWZhdWx0LAogICAgVGFibGVQYWdpbmF0aW9uOiBUYWJsZVBhZ2luYXRpb25fdnVlXzEuZGVmYXVsdCwKICAgIE5vZGVUcmVlOiBOb2RlVHJlZV92dWVfMS5kZWZhdWx0LAogICAgU2VsZWN0TWVudTogU2VsZWN0TWVudV92dWVfMS5kZWZhdWx0LAogICAgRGlhbG9nRm9vdGVyOiBEaWFsb2dGb290ZXJfdnVlXzEuZGVmYXVsdCwKICAgIFRhYmxlSGVhZGVyOiBUYWJsZUhlYWRlcl92dWVfMS5kZWZhdWx0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJpb3JpdHlPcHRpb25zOiBbXSwKICAgICAgY2FzZVR5cGVPcHRpb25zOiBbXSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGN1cnJlbnRQcm9qZWN0OiB7fSwKICAgICAgdHJlZU5vZGVzOiBbXSwKICAgICAgc2VsZWN0Tm9kZToge30sCiAgICAgIHByb2plY3RzOiBbXSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgc2VsZWN0Um93czogW10sCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBwYWdlU2l6ZTogY29uc3RhbnRfMS5QQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICAgIHRvdGFsOiAwLAogICAgICBjYXNlRmlsdGVyOiB7fSwKICAgICAgY29uZGl0aW9uOiB7fQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBwbGFuSWQ6IFtTdHJpbmcsIE51bWJlcl0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubG9hZGluZzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRPcHRpb25zOiBmdW5jdGlvbiBpbml0T3B0aW9ucygpIHsKICAgICAgdGhpcy5wcm9qZWN0cyA9IHRoaXMuY29uZGl0aW9uLnByb2plY3RPcHRpb25zOwogICAgICB0aGlzLnByaW9yaXR5T3B0aW9ucyA9IHRoaXMuY29uZGl0aW9uLnByaW9yaXR5T3B0aW9uczsKICAgICAgdGhpcy5jYXNlVHlwZU9wdGlvbnMgPSB0aGlzLmNvbmRpdGlvbi5jYXNlVHlwZU9wdGlvbnM7CiAgICB9LAogICAgaW5pdFRhYmxlRGF0YTogZnVuY3Rpb24gaW5pdFRhYmxlRGF0YSgpIHsKICAgICAgdGhpcy5pbml0T3B0aW9ucygpOwogICAgICB0aGlzLmdldERhdGEoKTsKICAgIH0sCiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHZhbHVlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIG9mZnNldDogdGhpcy5wYWdlU2l6ZSAqICh0aGlzLmN1cnJlbnRQYWdlIC0gMSksCiAgICAgICAgbGltaXQ6IHRoaXMucGFnZVNpemUsCiAgICAgICAgbmFtZTogdmFsdWUsCiAgICAgICAgdHJlZUlkOiB0aGlzLnNlbGVjdE5vZGUuaWQsCiAgICAgICAgcHJvaklkOiB0aGlzLnNlbGVjdE5vZGUuaWQgPyB1bmRlZmluZWQgOiB0aGlzLmN1cnJlbnRQcm9qZWN0LmlkCiAgICAgIH07CiAgICAgIHRoaXMuY2FzZUZpbHRlciA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odGhpcy4kcm91dGUucGF0aCk7CiAgICAgIHRoaXMuY2FzZUZpbHRlciA9IHRoaXMuY2FzZUZpbHRlciA/IEpTT04ucGFyc2UodGhpcy5jYXNlRmlsdGVyKSA6IHt9OwoKICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KHRoaXMuY2FzZUZpbHRlcikgIT09ICJ7fSIpIHsKICAgICAgICBPYmplY3QuYXNzaWduKHBhcmFtcywgdGhpcy5jYXNlRmlsdGVyKTsKICAgICAgICB0aGlzLiRyZWZzLnRhYmxlLmNvbHVtbnMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaXRlbS5maWx0ZXJlZFZhbHVlID0gX3RoaXMuY2FzZUZpbHRlcltpdGVtLmNvbHVtbktleV07CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGFwaV8xLnRlc3RQbGFuQXBpLmdldFRlc3RDYXNlUGxhblVuUmVsYXRlQ2FzZUxpc3QodGhpcy5wbGFuSWQsIHBhcmFtcykudGhlbihmdW5jdGlvbiAoX2EpIHsKICAgICAgICB2YXIgZGF0YSA9IF9hLmRhdGE7CiAgICAgICAgX3RoaXMudG90YWwgPSBkYXRhLnRvdGFsOwogICAgICAgIF90aGlzLnRhYmxlRGF0YSA9IGRhdGEuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgb3BlbjogZnVuY3Rpb24gb3Blbihjb25kaXRpb24sIHByb2pJZCkgewogICAgICB0aGlzLmNvbmRpdGlvbiA9IGNvbmRpdGlvbjsKICAgICAgdGhpcy5pbml0VGFibGVEYXRhKCk7CiAgICAgIHRoaXMuY3VycmVudFByb2plY3QuaWQgPSBwcm9qSWQ7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlU2VhcmNoOiBmdW5jdGlvbiBoYW5kbGVTZWFyY2godmFsdWUpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMuZ2V0RGF0YSh2YWx1ZSk7CiAgICB9LAogICAgaGFuZGxlU2VsZWN0QWxsOiBmdW5jdGlvbiBoYW5kbGVTZWxlY3RBbGwoc2VsZWN0aW9uKSB7CiAgICAgIGlmIChzZWxlY3Rpb24ubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuc2VsZWN0Um93cyA9IHNlbGVjdGlvbjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlbGVjdFJvd3MgPSBbXTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikgewogICAgICB0aGlzLnNlbGVjdFJvd3MgPSBzZWxlY3Rpb247CiAgICB9LAogICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoZmlsdGVycykgewogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsKCiAgICAgIHV0aWxzXzEuX2ZpbHRlcihmaWx0ZXJzLCB0aGlzLmNhc2VGaWx0ZXIsIHRoaXMuJHJvdXRlLnBhdGgpOwoKICAgICAgdGhpcy5pbml0VGFibGVEYXRhKCk7CiAgICB9LAogICAgcmVmcmVzaE5vZGU6IGZ1bmN0aW9uIHJlZnJlc2hOb2RlKCkgewogICAgICB0aGlzLiRlbWl0KCdyZWZyZXNoJyk7CiAgICB9LAogICAgc2F2ZTogZnVuY3Rpb24gc2F2ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBib2R5ID0gewogICAgICAgIG9wZXJhdGlvbjogVGVzdFBsYW5fMS5wbGFuT3BlcmF0aW9uRW51bS5BREQsCiAgICAgICAgY2FzZUlkczogdGhpcy5zZWxlY3RSb3dzLm1hcChmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgICByZXR1cm4gb2JqLmlkOwogICAgICAgIH0pLAogICAgICAgIHRyZWVJZDogdGhpcy5zZWxlY3ROb2RlLmlkLAogICAgICAgIHByb2pJZDogdGhpcy5zZWxlY3ROb2RlLmlkID8gdW5kZWZpbmVkIDogdGhpcy5jdXJyZW50UHJvamVjdC5pZAogICAgICB9OwogICAgICBhcGlfMS50ZXN0UGxhbkFwaS51cGRhdGVUZXN0Q2FzZVBsYW5DYXNlTGlzdCh0aGlzLnBsYW5JZCwgYm9keSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuY2xvc2UoKTsKCiAgICAgICAgX3RoaXMuJGVtaXQoJ3JlZnJlc2hUYWJsZScpOwogICAgICB9KTsKICAgIH0sCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIGNoYW5nZVByb2plY3Q6IGZ1bmN0aW9uIGNoYW5nZVByb2plY3QocHJvamVjdCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5jdXJyZW50UHJvamVjdCA9IHByb2plY3Q7CiAgICAgIGFwaV8xLnRlc3RDYXNlQXBpLmdldFRlc3RDYXNlTW9kdWxlcyh7CiAgICAgICAgcHJvaklkOiBwcm9qZWN0LmlkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy50cmVlTm9kZXMgPSBkYXRhLmRhdGE7CiAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdE5vZGUgPSB7fTsKICAgICAgdGhpcy5pbml0VGFibGVEYXRhKCk7IC8vIHRoaXMuJGVtaXQoJ3NldFByb2plY3QnLCBwcm9qZWN0LmlkKQogICAgICAvLyDojrflj5bpobnnm67ml7bliLfmlrDor6Xpobnnm67mqKHlnZcKICAgICAgLy8gdGhpcy4kZW1pdCgncmVmcmVzaE5vZGUnKQogICAgfSwKICAgIG5vZGVDaGFuZ2U6IGZ1bmN0aW9uIG5vZGVDaGFuZ2Uobm9kZSkgewogICAgICAvLyDph43nva7liIbpobUKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMuc2VsZWN0Tm9kZSA9IG5vZGU7CiAgICAgIHRoaXMuaW5pdFRhYmxlRGF0YSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCaseRelevance.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testCaseApi, testPlanApi} from \"@/api\"\nimport {RequestGetTestCasePlanUnRelateCaseList, RequestUpdateTestCasePlanCaseList} from \"@/api/types/testPlan\"\nimport {typeNode} from \"@/api/types/testTrackType\"\nimport DialogFooter from \"@/common/components/DialogFooter.vue\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport {_filter} from \"@/common/utils\";\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {planOperationEnum} from \"@/constant/TestPlan\"\nimport NodeTree from \"@/pages/track/common/NodeTree.vue\"\nimport SelectMenu from \"@/pages/track/common/SelectMenu.vue\"\nimport CaseTypeTableItem from \"@/pages/track/common/tableItems/CaseTypeTableItem.vue\"\nimport PriorityTableItem from \"@/pages/track/common/tableItems/PriorityTableItem.vue\"\n\nexport default {\n  name: \"TestCaseRelevance\",\n  components: {\n    CaseTypeTableItem,\n    PriorityTableItem,\n    TablePagination,\n    NodeTree,\n    SelectMenu,\n    DialogFooter,\n    TableHeader\n  },\n  data() {\n    return {\n      priorityOptions: [],\n      caseTypeOptions: [],\n      dialogVisible: false,\n      currentProject: {},\n      treeNodes: [],\n      selectNode: {},\n      projects: [],\n      tableData: [],\n      selectRows: [],\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      caseFilter: {},\n      condition: {},\n    }\n  },\n  props: {\n    planId: [String, Number],\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    }\n  },\n  methods: {\n    initOptions() {\n      this.projects = this.condition.projectOptions\n      this.priorityOptions = this.condition.priorityOptions\n      this.caseTypeOptions = this.condition.caseTypeOptions\n    },\n    initTableData() {\n      this.initOptions()\n      this.getData()\n    },\n    getData(value?: string) {\n      let params: RequestGetTestCasePlanUnRelateCaseList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        name: value,\n        treeId: this.selectNode.id,\n        projId: this.selectNode.id ? undefined : this.currentProject.id,\n      }\n\n      this.caseFilter = sessionStorage.getItem(this.$route.path)\n      this.caseFilter = this.caseFilter ? JSON.parse(this.caseFilter) : {}\n      if (JSON.stringify(this.caseFilter) !== \"{}\") {\n        Object.assign(params, this.caseFilter)\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.caseFilter[item.columnKey]\n        })\n      }\n\n      testPlanApi.getTestCasePlanUnRelateCaseList(this.planId, params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n        })\n    },\n    open(condition: any, projId: string) {\n      this.condition = condition\n      this.initTableData()\n      this.currentProject.id = projId\n      this.dialogVisible = true\n    },\n    handleSearch(value?: string) {\n      this.currentPage = 1\n      this.getData(value)\n    },\n    handleSelectAll(selection: Object[]) {\n      if (selection.length > 0) {\n        this.selectRows = selection\n      } else {\n        this.selectRows = []\n      }\n    },\n    handleSelectionChange(selection: Object[]) {\n      this.selectRows = selection\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.caseFilter, this.$route.path)\n      this.initTableData()\n    },\n    refreshNode() {\n      this.$emit('refresh')\n    },\n    save() {\n      let body: RequestUpdateTestCasePlanCaseList = {\n        operation: planOperationEnum.ADD,\n        caseIds: this.selectRows.map((obj: { id: string }) => {\n          return obj.id\n        }),\n        treeId: this.selectNode.id,\n        projId: this.selectNode.id ? undefined : this.currentProject.id\n      }\n      testPlanApi.updateTestCasePlanCaseList(this.planId, body)\n        .then(() => {\n          this.close()\n          this.$emit('refreshTable')\n        })\n    },\n    close() {\n      this.dialogVisible = false\n    },\n    changeProject(project: any) {\n      this.currentProject = project\n      testCaseApi.getTestCaseModules({projId: project.id})\n        .then((data) => {\n          this.treeNodes = data.data\n        })\n      this.selectNode = {}\n      this.initTableData()\n      // this.$emit('setProject', project.id)\n      // 获取项目时刷新该项目模块\n      // this.$emit('refreshNode')\n    },\n    nodeChange(node: typeNode) {\n      // 重置分页\n      this.currentPage = 1\n      this.selectNode = node\n      this.initTableData()\n    }\n  }\n}\n"],"sourceRoot":""}]}