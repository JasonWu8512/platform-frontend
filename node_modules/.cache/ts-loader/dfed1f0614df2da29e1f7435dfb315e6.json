{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanRun.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanRun.vue","mtime":1655949681804},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanRun.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testCaseApi} from \"@/api\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport {RequestUpdateTestCase} from \"@/api/types/testTrack\"\nimport {typeCaseStep} from \"@/api/types/testTrackType\"\nimport {caseTypeEnum, caseUpdateTypeEnum, executionEnum, stepStatusEnum, stepStatusType} from \"@/constant/TestCase\"\nimport {planResultEnum} from \"@/constant/TestPlan\"\nimport CaseTypeTableItem from \"@/pages/track/common/tableItems/CaseTypeTableItem.vue\"\nimport ExecutionTypeTableItem from \"@/pages/track/common/tableItems/ExecutionTypeTableItem.vue\"\nimport PriorityTableItem from \"@/pages/track/common/tableItems/PriorityTableItem.vue\"\nimport TestPlanCaseStatusButton from \"@/pages/track/plan/common/TestPlanCaseStatusButton.vue\"\nimport TestReviewCaseStepStatus from \"@/pages/track/review/commom/TestReviewCaseStepStatus.vue\"\nimport {cloneDeep} from \"lodash\"\n\n// 用例步骤执行结果\nconst stepStatusOptions = Object.entries(stepStatusType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"TestCasePlanRun\",\n  components: {\n    PriorityTableItem,\n    CaseTypeTableItem,\n    ExecutionTypeTableItem,\n    TestPlanCaseStatusButton,\n    TestReviewCaseStepStatus,\n  },\n  data() {\n    return {\n      caseTypeEnum: caseTypeEnum,\n      executionEnum: executionEnum,\n      stepStatusOptions: stepStatusOptions,\n      showDialog: false,\n      testCase: {caseDetail: {}},\n      index: 0,\n      total: 0,\n      parent: '',\n      tableData: [],\n      test: {},\n      activeTab: 'detail',\n      isFailure: true,\n    }\n  },\n  props: {\n    searchParam: Object,\n    planId: [String, Number],\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    offset() {\n      return this.parent.pageSize * (this.parent.currentPage - 1)\n    }\n  },\n  mounted() {\n    this.$eventBus.$on('testPlanCaseRun', (testcase: typePlanData, tableData: typePlanData[], parent: any) => {\n      this.parent = parent\n      this.open(testcase, tableData)\n    })\n  },\n  methods: {\n    cancel() {\n      this.showDialog = false\n      this.$emit('refresh')\n    },\n    saveCase(status: planResultEnum) {\n      let body: RequestUpdateTestCase = {\n        type: caseUpdateTypeEnum.UPDATE_PLAN_STATUS,\n        planId: this.planId,\n        executor: this.$store.state.login.username,\n        stepActualResults: this.testCase.caseDetail.steps.map((step: typeCaseStep) => {\n          return step.actualResult || ''\n        }),\n        stepActualStatus: this.testCase.caseDetail.steps.map((step: typeCaseStep) => {\n          return step.actualStatus || planResultEnum.PASS\n        }),\n        issueIds: [],\n      }\n      if (this.parent.isQa) {\n        this.testCase.smokeCheck = status\n        body = Object.assign(body, {\n          type: caseUpdateTypeEnum.UPDATE_PLAN_SMOKE_CHECK,\n          smokeCheck: status,\n        })\n      } else {\n        this.testCase.status = status\n        body = Object.assign(body, {status: status})\n      }\n      testCaseApi.updateTestCase(this.testCase.caseId, body)\n        .then(() => {\n          this.handleNext()\n        })\n        .catch(() => {\n          this.parent.isQa\n            ? this.testCase.smokeCheck = planResultEnum.INIT\n            : this.testCase.status = planResultEnum.INIT\n        })\n    },\n    async handleNext() {\n      if (this.index + this.offset + 1 === this.total) {\n        return\n      }\n      // 超过当前页总数时，触发翻页\n      if (this.index + 1 !== this.tableData.length) {\n        this.index++\n        this.getTestCase(this.index)\n      } else {\n        try {\n          this.parent.currentPage++\n          // 重置列表索引\n          this.index = -1\n          await this.parent.getData()\n          this.tableData = this.parent.tableData\n          await this.handleNext()\n        } catch {\n          // 恢复列表索引\n          this.index = this.parent.pageSize - 1\n          this.parent.currentPage--\n        }\n      }\n    },\n    async handlePre() {\n      if (this.index !== 0) {\n        this.index--\n        this.getTestCase(this.index)\n      } else {\n        try {\n          this.parent.currentPage--\n          // 重置列表索引\n          this.index = this.parent.pageSize\n          await this.parent.getData()\n          this.tableData = this.parent.tableData\n          await this.handlePre()\n        } catch {\n          // 恢复列表索引\n          this.index = this.parent.pageSize + 1\n          this.parent.currentPage++\n        }\n      }\n    },\n    getTestCase(index: number) {\n      this.testCase = this.tableData[index]\n    },\n    open(testCase: typePlanData, tableData: typePlanData[]) {\n      this.showDialog = true\n      this.total = this.parent.total\n      this.activeTab = 'detail'\n      this.testCase = cloneDeep(testCase)\n      this.tableData = tableData\n      this.index = this.tableData.indexOf(testCase)\n    },\n    stepResultChange() {\n      if (this.testCase.method === executionEnum.MANUAL) {\n        this.isFailure = this.testCase.caseDetail.steps.filter((s: { actualStatus: stepStatusEnum }) => {\n          return s.actualStatus === stepStatusEnum.FAIL || s.actualStatus === stepStatusEnum.BLOCK\n        }).length > 0\n      }\n    },\n  }\n}\n"],"sourceRoot":""}]}