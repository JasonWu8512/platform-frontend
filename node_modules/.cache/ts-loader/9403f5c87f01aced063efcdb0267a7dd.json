{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/constant/TestPlan.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/constant/TestPlan.ts","mtime":1655949681767},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9kZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoIi9Vc2Vycy9qbGdscWEvRG9jdW1lbnRzL1FBL25vYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eSIpLmRlZmF1bHQ7Cgp2YXIgX2V4cG9ydHMkcGxhblJlc3VsdFR5LCBfZXhwb3J0cyRwbGFuU3RhZ2VUeXAsIF9leHBvcnRzJHBsYW5SZXBvcnRUeSwgX2V4cG9ydHMkcGxhblN0YXR1c1R5LCBfZXhwb3J0cyRjYXNlQmF0Y2hFZGksIF9leHBvcnRzJHBsYW5JbnN0YW5jZTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5wbGFuSW5zdGFuY2VTdGF0dXNUeXBlID0gZXhwb3J0cy5wbGFuSW5zdGFuY2VTdGF0dXNFbnVtID0gZXhwb3J0cy5jYXNlQmF0Y2hFZGl0VHlwZSA9IGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gPSBleHBvcnRzLnBsYW5TdGF0dXNUeXBlID0gZXhwb3J0cy5wbGFuU3RhdHVzRW51bSA9IGV4cG9ydHMucGxhbk9wZXJhdGlvbkVudW0gPSBleHBvcnRzLnBsYW5SZXBvcnRUeXBlID0gZXhwb3J0cy5wbGFuUmVwb3J0RW51bSA9IGV4cG9ydHMucGxhblN0YWdlVHlwZSA9IGV4cG9ydHMucGxhblN0YWdlRW51bSA9IGV4cG9ydHMucGxhblJlc3VsdFR5cGUgPSBleHBvcnRzLnBsYW5SZXN1bHRFbnVtID0gdm9pZCAwOwp2YXIgcGxhblJlc3VsdEVudW07CgooZnVuY3Rpb24gKHBsYW5SZXN1bHRFbnVtKSB7CiAgcGxhblJlc3VsdEVudW1bIklOSVQiXSA9ICJpbml0IjsKICBwbGFuUmVzdWx0RW51bVsiUEFTUyJdID0gInBhc3MiOwogIHBsYW5SZXN1bHRFbnVtWyJGQUlMIl0gPSAiZmFpbCI7CiAgcGxhblJlc3VsdEVudW1bIkJMT0NLIl0gPSAiYmxvY2siOwogIHBsYW5SZXN1bHRFbnVtWyJTS0lQIl0gPSAic2tpcCI7Cn0pKHBsYW5SZXN1bHRFbnVtID0gZXhwb3J0cy5wbGFuUmVzdWx0RW51bSB8fCAoZXhwb3J0cy5wbGFuUmVzdWx0RW51bSA9IHt9KSk7CgpleHBvcnRzLnBsYW5SZXN1bHRUeXBlID0gKF9leHBvcnRzJHBsYW5SZXN1bHRUeSA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblJlc3VsdFR5LCBwbGFuUmVzdWx0RW51bS5JTklULCAn5pyq5byA5aeLJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuUmVzdWx0VHksIHBsYW5SZXN1bHRFbnVtLlBBU1MsICfmiJDlip8nKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5SZXN1bHRUeSwgcGxhblJlc3VsdEVudW0uRkFJTCwgJ+Wksei0pScpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblJlc3VsdFR5LCBwbGFuUmVzdWx0RW51bS5CTE9DSywgJ+mYu+WhnicpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblJlc3VsdFR5LCBwbGFuUmVzdWx0RW51bS5TS0lQLCAn6Lez6L+HJyksIF9leHBvcnRzJHBsYW5SZXN1bHRUeSk7CnZhciBwbGFuU3RhZ2VFbnVtOwoKKGZ1bmN0aW9uIChwbGFuU3RhZ2VFbnVtKSB7CiAgcGxhblN0YWdlRW51bVsiU01PS0UiXSA9ICJzbW9rZSI7CiAgcGxhblN0YWdlRW51bVsiUkVHUkVTU0lPTiJdID0gInJlZ3Jlc3Npb24iOwogIHBsYW5TdGFnZUVudW1bIlNZU1RFTSJdID0gInN5c3RlbSI7Cn0pKHBsYW5TdGFnZUVudW0gPSBleHBvcnRzLnBsYW5TdGFnZUVudW0gfHwgKGV4cG9ydHMucGxhblN0YWdlRW51bSA9IHt9KSk7CgpleHBvcnRzLnBsYW5TdGFnZVR5cGUgPSAoX2V4cG9ydHMkcGxhblN0YWdlVHlwID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuU3RhZ2VUeXAsIHBsYW5TdGFnZUVudW0uU01PS0UsICflhpLng5/mtYvor5UnKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5TdGFnZVR5cCwgcGxhblN0YWdlRW51bS5SRUdSRVNTSU9OLCAn5Zue5b2S5rWL6K+VJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuU3RhZ2VUeXAsIHBsYW5TdGFnZUVudW0uU1lTVEVNLCAn5Yqf6IO95rWL6K+VJyksIF9leHBvcnRzJHBsYW5TdGFnZVR5cCk7CnZhciBwbGFuUmVwb3J0RW51bTsKCihmdW5jdGlvbiAocGxhblJlcG9ydEVudW0pIHsKICBwbGFuUmVwb3J0RW51bVtwbGFuUmVwb3J0RW51bVsiQkFTRV9JTkZPIl0gPSAxXSA9ICJCQVNFX0lORk8iOwogIHBsYW5SZXBvcnRFbnVtW3BsYW5SZXBvcnRFbnVtWyJNT0RVTEVfRVhFQ1VURV9SRVNVTFQiXSA9IDJdID0gIk1PRFVMRV9FWEVDVVRFX1JFU1VMVCI7CiAgcGxhblJlcG9ydEVudW1bcGxhblJlcG9ydEVudW1bIkVYRUNVVEVfUkVTVUxUIl0gPSAzXSA9ICJFWEVDVVRFX1JFU1VMVCI7CiAgcGxhblJlcG9ydEVudW1bcGxhblJlcG9ydEVudW1bIkJVR19MRVZFTF9DSEFSVFMiXSA9IDRdID0gIkJVR19MRVZFTF9DSEFSVFMiOwogIHBsYW5SZXBvcnRFbnVtW3BsYW5SZXBvcnRFbnVtWyJCVUdfT1dORVJfQ0hBUlRTIl0gPSA1XSA9ICJCVUdfT1dORVJfQ0hBUlRTIjsKICBwbGFuUmVwb3J0RW51bVtwbGFuUmVwb3J0RW51bVsiVElDS0VUUyJdID0gNl0gPSAiVElDS0VUUyI7CiAgcGxhblJlcG9ydEVudW1bcGxhblJlcG9ydEVudW1bIklTU1VFUyJdID0gN10gPSAiSVNTVUVTIjsKfSkocGxhblJlcG9ydEVudW0gPSBleHBvcnRzLnBsYW5SZXBvcnRFbnVtIHx8IChleHBvcnRzLnBsYW5SZXBvcnRFbnVtID0ge30pKTsKCmV4cG9ydHMucGxhblJlcG9ydFR5cGUgPSAoX2V4cG9ydHMkcGxhblJlcG9ydFR5ID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuUmVwb3J0VHksIHBsYW5SZXBvcnRFbnVtLkJBU0VfSU5GTywgJ+WGkueDn+a1i+ivlScpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblJlcG9ydFR5LCBwbGFuUmVwb3J0RW51bS5NT0RVTEVfRVhFQ1VURV9SRVNVTFQsICflm57lvZLmtYvor5UnKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5SZXBvcnRUeSwgcGxhblJlcG9ydEVudW0uRVhFQ1VURV9SRVNVTFQsICflip/og73mtYvor5UnKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5SZXBvcnRUeSwgcGxhblJlcG9ydEVudW0uQlVHX0xFVkVMX0NIQVJUUywgJ+WKn+iDvea1i+ivlScpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblJlcG9ydFR5LCBwbGFuUmVwb3J0RW51bS5CVUdfT1dORVJfQ0hBUlRTLCAn5Yqf6IO95rWL6K+VJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuUmVwb3J0VHksIHBsYW5SZXBvcnRFbnVtLlRJQ0tFVFMsICflip/og73mtYvor5UnKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5SZXBvcnRUeSwgcGxhblJlcG9ydEVudW0uSVNTVUVTLCAn5Yqf6IO95rWL6K+VJyksIF9leHBvcnRzJHBsYW5SZXBvcnRUeSk7CnZhciBwbGFuT3BlcmF0aW9uRW51bTsKCihmdW5jdGlvbiAocGxhbk9wZXJhdGlvbkVudW0pIHsKICBwbGFuT3BlcmF0aW9uRW51bVsiQUREIl0gPSAiYWRkIjsKICBwbGFuT3BlcmF0aW9uRW51bVsiUkVNT1ZFIl0gPSAicmVtb3ZlIjsKfSkocGxhbk9wZXJhdGlvbkVudW0gPSBleHBvcnRzLnBsYW5PcGVyYXRpb25FbnVtIHx8IChleHBvcnRzLnBsYW5PcGVyYXRpb25FbnVtID0ge30pKTsKCnZhciBwbGFuU3RhdHVzRW51bTsKCihmdW5jdGlvbiAocGxhblN0YXR1c0VudW0pIHsKICBwbGFuU3RhdHVzRW51bVsiSU5JVCJdID0gImluaXQiOwogIHBsYW5TdGF0dXNFbnVtWyJJTl9QUk9HUkVTUyJdID0gImluX3Byb2dyZXNzIjsKICBwbGFuU3RhdHVzRW51bVsiRE9ORSJdID0gImRvbmUiOwogIHBsYW5TdGF0dXNFbnVtWyJSRUpFQ1QiXSA9ICJyZWplY3QiOwp9KShwbGFuU3RhdHVzRW51bSA9IGV4cG9ydHMucGxhblN0YXR1c0VudW0gfHwgKGV4cG9ydHMucGxhblN0YXR1c0VudW0gPSB7fSkpOwoKZXhwb3J0cy5wbGFuU3RhdHVzVHlwZSA9IChfZXhwb3J0cyRwbGFuU3RhdHVzVHkgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5TdGF0dXNUeSwgcGxhblN0YXR1c0VudW0uSU5JVCwgJ+acquW8gOWniycpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblN0YXR1c1R5LCBwbGFuU3RhdHVzRW51bS5JTl9QUk9HUkVTUywgJ+i/m+ihjOS4rScpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhblN0YXR1c1R5LCBwbGFuU3RhdHVzRW51bS5ET05FLCAn5bey5a6M5oiQJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuU3RhdHVzVHksIHBsYW5TdGF0dXNFbnVtLlJFSkVDVCwgJ+mps+WbnicpLCBfZXhwb3J0cyRwbGFuU3RhdHVzVHkpOwp2YXIgY2FzZUJhdGNoRWRpdEVudW07CgooZnVuY3Rpb24gKGNhc2VCYXRjaEVkaXRFbnVtKSB7CiAgY2FzZUJhdGNoRWRpdEVudW1bIlJFU1VMVCJdID0gInJlc3VsdCI7CiAgY2FzZUJhdGNoRWRpdEVudW1bIkVYRUNVVE9SIl0gPSAiZXhlY3V0b3IiOwp9KShjYXNlQmF0Y2hFZGl0RW51bSA9IGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gfHwgKGV4cG9ydHMuY2FzZUJhdGNoRWRpdEVudW0gPSB7fSkpOwoKZXhwb3J0cy5jYXNlQmF0Y2hFZGl0VHlwZSA9IChfZXhwb3J0cyRjYXNlQmF0Y2hFZGkgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJGNhc2VCYXRjaEVkaSwgY2FzZUJhdGNoRWRpdEVudW0uUkVTVUxULCAn5omn6KGM57uT5p6cJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRjYXNlQmF0Y2hFZGksIGNhc2VCYXRjaEVkaXRFbnVtLkVYRUNVVE9SLCAn5omn6KGM5Lq6JyksIF9leHBvcnRzJGNhc2VCYXRjaEVkaSk7CnZhciBwbGFuSW5zdGFuY2VTdGF0dXNFbnVtOwoKKGZ1bmN0aW9uIChwbGFuSW5zdGFuY2VTdGF0dXNFbnVtKSB7CiAgcGxhbkluc3RhbmNlU3RhdHVzRW51bVsiSU5JVCJdID0gIklOSVQiOwogIHBsYW5JbnN0YW5jZVN0YXR1c0VudW1bIlBFTkRJTkciXSA9ICJQRU5ESU5HIjsKICBwbGFuSW5zdGFuY2VTdGF0dXNFbnVtWyJBUFBST1ZFRCJdID0gIkFQUFJPVkVEIjsKICBwbGFuSW5zdGFuY2VTdGF0dXNFbnVtWyJSRUpFQ1RFRCJdID0gIlJFSkVDVEVEIjsKICBwbGFuSW5zdGFuY2VTdGF0dXNFbnVtWyJDQU5DRUxFRCJdID0gIkNBTkNFTEVEIjsKfSkocGxhbkluc3RhbmNlU3RhdHVzRW51bSA9IGV4cG9ydHMucGxhbkluc3RhbmNlU3RhdHVzRW51bSB8fCAoZXhwb3J0cy5wbGFuSW5zdGFuY2VTdGF0dXNFbnVtID0ge30pKTsKCmV4cG9ydHMucGxhbkluc3RhbmNlU3RhdHVzVHlwZSA9IChfZXhwb3J0cyRwbGFuSW5zdGFuY2UgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5JbnN0YW5jZSwgcGxhbkluc3RhbmNlU3RhdHVzRW51bS5JTklULCAn5pyq5o+Q5LqkJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuSW5zdGFuY2UsIHBsYW5JbnN0YW5jZVN0YXR1c0VudW0uUEVORElORywgJ+i/m+ihjOS4rScpLCBfZGVmaW5lUHJvcGVydHkoX2V4cG9ydHMkcGxhbkluc3RhbmNlLCBwbGFuSW5zdGFuY2VTdGF0dXNFbnVtLkFQUFJPVkVELCAn5bey6YCa6L+HJyksIF9kZWZpbmVQcm9wZXJ0eShfZXhwb3J0cyRwbGFuSW5zdGFuY2UsIHBsYW5JbnN0YW5jZVN0YXR1c0VudW0uUkVKRUNURUQsICflt7Lmi5Lnu50nKSwgX2RlZmluZVByb3BlcnR5KF9leHBvcnRzJHBsYW5JbnN0YW5jZSwgcGxhbkluc3RhbmNlU3RhdHVzRW51bS5DQU5DRUxFRCwgJ+W3suaSpOWbnicpLCBfZXhwb3J0cyRwbGFuSW5zdGFuY2UpOw=="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/constant/TestPlan.ts"],"names":[],"mappings":"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","sourcesContent":["export enum planResultEnum {\n  INIT = 'init',\n  PASS = 'pass',\n  FAIL = 'fail',\n  BLOCK = 'block',\n  SKIP = 'skip',\n}\n\nexport const planResultType = {\n  [planResultEnum.INIT]: '未开始',\n  [planResultEnum.PASS]: '成功',\n  [planResultEnum.FAIL]: '失败',\n  [planResultEnum.BLOCK]: '阻塞',\n  [planResultEnum.SKIP]: '跳过',\n}\n\nexport enum planStageEnum {\n  SMOKE = 'smoke',\n  REGRESSION = 'regression',\n  SYSTEM = 'system',\n}\n\nexport const planStageType = {\n  [planStageEnum.SMOKE]: '冒烟测试',\n  [planStageEnum.REGRESSION]: '回归测试',\n  [planStageEnum.SYSTEM]: '功能测试',\n}\n\nexport enum planReportEnum {\n  BASE_INFO = 1,\n  MODULE_EXECUTE_RESULT = 2,\n  EXECUTE_RESULT = 3,\n  BUG_LEVEL_CHARTS = 4,\n  BUG_OWNER_CHARTS = 5,\n  TICKETS = 6,\n  ISSUES = 7,\n}\n\nexport const planReportType = {\n  [planReportEnum.BASE_INFO]: '冒烟测试',\n  [planReportEnum.MODULE_EXECUTE_RESULT]: '回归测试',\n  [planReportEnum.EXECUTE_RESULT]: '功能测试',\n  [planReportEnum.BUG_LEVEL_CHARTS]: '功能测试',\n  [planReportEnum.BUG_OWNER_CHARTS]: '功能测试',\n  [planReportEnum.TICKETS]: '功能测试',\n  [planReportEnum.ISSUES]: '功能测试',\n}\n\nexport enum planOperationEnum {\n  ADD = 'add',\n  REMOVE = 'remove',\n}\n\nexport enum planStatusEnum {\n  INIT = 'init',\n  IN_PROGRESS = 'in_progress',\n  DONE = 'done',\n  REJECT = 'reject',\n}\n\nexport const planStatusType = {\n  [planStatusEnum.INIT]: '未开始',\n  [planStatusEnum.IN_PROGRESS]: '进行中',\n  [planStatusEnum.DONE]: '已完成',\n  [planStatusEnum.REJECT]: '驳回',\n}\n\nexport enum caseBatchEditEnum {\n  RESULT = 'result',\n  EXECUTOR = 'executor',\n}\n\nexport const caseBatchEditType = {\n  [caseBatchEditEnum.RESULT]: '执行结果',\n  [caseBatchEditEnum.EXECUTOR]: '执行人',\n}\n\nexport enum planInstanceStatusEnum {\n  INIT = \"INIT\",\n  PENDING = \"PENDING\",\n  APPROVED = \"APPROVED\",\n  REJECTED = \"REJECTED\",\n  CANCELED = \"CANCELED\",\n}\n\nexport const planInstanceStatusType = {\n  [planInstanceStatusEnum.INIT]: '未提交',\n  [planInstanceStatusEnum.PENDING]: '进行中',\n  [planInstanceStatusEnum.APPROVED]: '已通过',\n  [planInstanceStatusEnum.REJECTED]: '已拒绝',\n  [planInstanceStatusEnum.CANCELED]: '已撤回',\n}\n"],"sourceRoot":""}]}