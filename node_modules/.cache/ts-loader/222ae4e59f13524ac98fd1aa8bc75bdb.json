{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseList.vue","mtime":1667185952633},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testCaseApi} from \"@/api\"\nimport {RequestGetTestCaseList, RequestUpdateTestCaseBatch, UpdateTestCaseParams} from \"@/api/types/testTrack\"\nimport {typeCaseData} from \"@/api/types/testTrackType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {_filter, formatTime} from \"@/common/utils\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {\n  caseBatchEditEnum,\n  caseBatchEditType,\n  caseTypeType,\n  caseUpdateTypeEnum,\n  executionType,\n  priorityType,\n} from \"@/constant/TestCase\"\nimport {reviewCaseStatusType} from \"@/constant/TestReivew\"\nimport BatchEdit from \"@/pages/track/case/components/BatchEdit.vue\"\nimport BatchMove from \"@/pages/track/case/components/BatchMove.vue\"\nimport ShowMoreBtn from \"@/pages/track/case/components/ShowMoreBtn.vue\"\nimport TestCaseDetail from \"@/pages/track/case/components/TestCaseDetail.vue\"\nimport NodeBreadcrumb from \"@/pages/track/common/NodeBreadcrumb.vue\"\nimport CaseTypeTableItem from \"@/pages/track/common/tableItems/CaseTypeTableItem.vue\"\nimport ExecutionTypeTableItem from \"@/pages/track/common/tableItems/ExecutionTypeTableItem.vue\"\nimport PriorityTableItem from \"@/pages/track/common/tableItems/PriorityTableItem.vue\"\nimport ReviewCaseStatusTableItem from \"@/pages/track/common/tableItems/ReviewCaseStatusTableItem.vue\"\nimport {getModuleByTreeId, getModuleOptions} from \"@/pages/track/common/utils\"\n\n// 执行方式\nconst executionOptions = Object.entries(executionType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 用例优先级\nconst priorityOptions = Object.entries(priorityType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 评审状态\nconst statusOptions = Object.entries(reviewCaseStatusType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 用例类型\nconst caseTypeOptions = Object.entries(caseTypeType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 批量编辑类型\nconst caseBatchEditOptions = Object.entries(caseBatchEditType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"TestCaseList\",\n  components: {\n    ReviewCaseStatusTableItem,\n    ExecutionTypeTableItem,\n    CaseTypeTableItem,\n    TestCaseDetail,\n    TableOperator,\n    PriorityTableItem,\n    TablePagination,\n    NodeBreadcrumb,\n    TableHeader,\n    ShowMoreBtn,\n    BatchEdit,\n    BatchMove,\n  },\n  data() {\n    return {\n      executionOptions: executionOptions,\n      priorityOptions: priorityOptions,\n      statusOptions: statusOptions,\n      caseTypeOptions: caseTypeOptions,\n      tableData: [],\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      selectRows: new Set(),\n      isDisabled: true,\n      caseFilter: {},\n      buttons: [\n        {name: '批量编辑用例', handleClick: this.handleBatchEdit},\n        {name: '批量移动用例', handleClick: this.handleBatchMove},\n        {name: '批量删除用例', handleClick: this.handleDeleteBatch}\n      ],\n      caseBatchEditOptions: caseBatchEditOptions,\n      batchEditValueArr: {\n        // 优先级\n        priority: priorityOptions,\n        // 用例类型\n        caseType: caseTypeOptions,\n        // 执行方式\n        method: executionOptions,\n        // 维护人\n        maintainer: [],\n      },\n    }\n  },\n  props: {\n    currentProject: Object,\n    treeNodes: Array,\n    selectNode: Object,\n    selectParentNodes: Array,\n    condition: Object,\n    readOnly: Boolean,\n  },\n  computed: {\n    caseIds() {\n      return Array.from(this.selectRows).map((row: { id: string }) => row.id)\n    },\n    table3BtnWidth() {\n      return variables['table3BtnWidth']\n    },\n    tableTimeWidth() {\n      return variables['tableTimeWidth']\n    },\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  inject: ['users'],\n  methods: {\n    setSelectOptions() {\n      this.setModuleOptions()\n      this.setMaintainerOptions()\n      this.condition.executionOptions = this.executionOptions\n      this.condition.priorityOptions = this.priorityOptions\n      this.condition.caseTypeOptions = this.caseTypeOptions\n      this.$emit(\"update:condition\", this.condition)\n    },\n    initTableData() {\n      this.setSelectOptions()\n      this.getData()\n    },\n    getData(value?: string) {\n      let params: RequestGetTestCaseList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        name: value,\n        treeId: this.selectNode.id,\n        projId: this.selectNode.id ? undefined : this.currentProject.id,\n      }\n\n      this.caseFilter = sessionStorage.getItem(this.$route.path)\n      this.caseFilter = this.caseFilter ? JSON.parse(this.caseFilter) : {}\n      if (JSON.stringify(this.caseFilter) !== \"{}\") {\n        Object.assign(params, this.caseFilter)\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.caseFilter[item.columnKey]\n        })\n      }\n\n      testCaseApi.getTestCaseList(params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n          this.tableData.forEach((item: any) => {\n            item.updatedAt = formatTime(item.updatedAt)\n            item.treePath = getModuleByTreeId(this.treeNodes, item.treeId).path\n          })\n        })\n    },\n    handleSearch(value?: string) {\n      // console.log('handleSearch', value)\n      this.currentPage = 1\n      this.getData(value)\n    },\n    testCaseModify(testCase?: typeCaseData, isCopy?: boolean) {\n      if (this.treeNodes.length < 1) {\n        this.$message.warning('请先新建模块')\n        return\n      }\n      this.$eventBus.$emit(\"testCaseAddOrEditOrCopy\", testCase, isCopy)\n      this.$emit(\"update:readOnly\", false)\n    },\n    handleShow() {\n      this.$emit(\"update:readOnly\", true)\n    },\n    handleDelete(testCase: any) {\n      this.$alert(`确认删除测试用例'${testCase.name}'？删除后评审及测试计划关联的用例均会被删除。`, '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            testCaseApi.updateTestCase(testCase.id, {type: caseUpdateTypeEnum.DELETE})\n              .then(() => {\n                this.refresh()\n              })\n          }\n        }\n      })\n    },\n    handleDeleteBatch() {\n      this.$alert('确认删除测试用例？删除后评审及测试计划关联的用例均会被删除。', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            const body: RequestUpdateTestCaseBatch = {\n              caseIds: this.caseIds,\n              type: caseUpdateTypeEnum.DELETE,\n            }\n            testCaseApi.updateTestCaseBatch(body)\n              .then(() => {\n                this.refresh()\n              })\n          }\n        }\n      })\n    },\n    refresh() {\n      this.$emit(\"refresh\")\n    },\n    handleSelectAll(selection: Object[]) {\n      if (selection.length > 0) {\n        this.tableData.forEach((item: any) => {\n          this.$set(item, \"isDisabled\", false)\n        })\n        this.selectRows = new Set(selection)\n      } else {\n        this.selectRows.clear()\n        this.tableData.forEach((row: any) => {\n          this.$set(row, \"isDisabled\", true)\n        })\n      }\n    },\n    handleSelectionChange(selection: Object[], row: any) {\n      if (selection.indexOf(row) === -1) {\n        this.$set(row, \"isDisabled\", true)\n      } else {\n        this.$set(row, \"isDisabled\", false)\n      }\n      this.selectRows = new Set(selection)\n    },\n    handleUpload() {\n      this.$eventBus.$emit('TestCaseImport')\n    },\n    batchEdit(editForm: any) {\n      let _case: UpdateTestCaseParams = {}\n      if (editForm.type === caseBatchEditEnum.PRIORITY) {\n        _case = Object.assign({importance: parseInt(editForm.value)}, _case)\n      } else if (editForm.type === caseBatchEditEnum.CASE_TYPE) {\n        _case = Object.assign({caseType: editForm.value}, _case)\n      } else if (editForm.type === caseBatchEditEnum.MAINTAINER) {\n        _case = Object.assign({qa: editForm.value}, _case)\n      } else if (editForm.type === caseBatchEditEnum.METHOD) {\n        _case = Object.assign({executionType: parseInt(editForm.value)}, _case)\n      }\n      const body: RequestUpdateTestCaseBatch = {\n        caseIds: this.caseIds,\n        type: caseUpdateTypeEnum.UPDATE_CASE,\n        case: _case\n      }\n      testCaseApi.updateTestCaseBatch(body)\n        .then(() => {\n          this.refresh()\n        })\n    },\n    batchMove(nodeId: string) {\n      const _case: UpdateTestCaseParams = {treeId: nodeId}\n      const body = {\n        caseIds: this.caseIds,\n        type: caseUpdateTypeEnum.UPDATE_CASE,\n        case: _case\n      }\n      testCaseApi.updateTestCaseBatch(body)\n        .then(() => {\n          this.refresh()\n        })\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.caseFilter, this.$route.path)\n      this.initTableData()\n    },\n    handleBatchEdit() {\n      this.$refs.batchEdit.open()\n    },\n    handleBatchMove() {\n      this.$refs.batchMove.open(this.treeNodes)\n\n      // this.$emit(\"batchMove\", this.caseIds)\n    },\n    setModuleOptions() {\n      this.condition.moduleOptions = getModuleOptions(this.treeNodes)\n    },\n    setMaintainerOptions() {\n      this.batchEditValueArr.maintainer = this.users\n      this.condition.maintainerOptions = this.users\n    },\n  }\n}\n"],"sourceRoot":""}]}