{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjects.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjects.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9faW1wb3J0RGVmYXVsdCA9IHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQgfHwgZnVuY3Rpb24gKG1vZCkgewogIHJldHVybiBtb2QgJiYgbW9kLl9fZXNNb2R1bGUgPyBtb2QgOiB7CiAgICAiZGVmYXVsdCI6IG1vZAogIH07Cn07CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgYXBpXzEgPSByZXF1aXJlKCJAL2FwaSIpOwoKdmFyIFRhYmxlSGVhZGVyX3Z1ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoIkAvY29tbW9uL2NvbXBvbmVudHMvVGFibGVIZWFkZXIudnVlIikpOwoKdmFyIFRhYmxlT3BlcmF0b3JfdnVlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSIpKTsKCnZhciByb3V0ZURhdGFfMSA9IHJlcXVpcmUoIkAvY29uc3RhbnQvcm91dGVEYXRhIik7CgpleHBvcnRzLmRlZmF1bHQgPSB7CiAgbmFtZTogIkdpdExhYlByb2plY3RzIiwKICBjb21wb25lbnRzOiB7CiAgICBUYWJsZUhlYWRlcjogVGFibGVIZWFkZXJfdnVlXzEuZGVmYXVsdCwKICAgIFRhYmxlT3BlcmF0b3I6IFRhYmxlT3BlcmF0b3JfdnVlXzEuZGVmYXVsdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbmRpdGlvbjoge30sCiAgICAgIHRhYmxlRGF0YTogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbG9hZGluZzogZnVuY3Rpb24gbG9hZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmxvYWRpbmc7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5oYW5kbGVHZXRQcm9qZWN0cygnJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVHZXRQcm9qZWN0czogZnVuY3Rpb24gaGFuZGxlR2V0UHJvamVjdHModmFsdWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGFwaV8xLmNvdmVyYWdlQXBpLmdldEdpdGxhYlByb2plY3RzKHsKICAgICAgICBzZWFyY2g6IHZhbHVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnRhYmxlRGF0YSA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVUb0JyYW5jaGVzOiBmdW5jdGlvbiBoYW5kbGVUb0JyYW5jaGVzKHJvdykgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogcm91dGVEYXRhXzEuUGF0aE5hbWUuR2l0TGFiUHJvamVjdEJyYW5jaGVzLAogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICBwcm9qZWN0SWQ6IHJvdy5pZCwKICAgICAgICAgIHByb2plY3ROYW1lOiByb3cucGF0aFdpdGhOYW1lc3BhY2UKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjects.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;AA0CA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,uCAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,OAAA,CAAA,OAAA,GAAe;AACb,EAAA,IAAI,EAAE,gBADO;AAEb,EAAA,UAAU,EAAE;AAAC,IAAA,WAAW,EAAX,iBAAA,CAAA,OAAD;AAAc,IAAA,aAAa,EAAb,mBAAA,CAAA;AAAd,GAFC;AAGb,EAAA,IAHa,kBAGT;AACF,WAAO;AACL,MAAA,SAAS,EAAE,EADN;AAEL,MAAA,SAAS,EAAE;AAFN,KAAP;AAID,GARY;AASb,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAzB;AACD;AAHO,GATG;AAcb,EAAA,OAda,qBAcN;AACL,SAAK,iBAAL,CAAuB,EAAvB;AACD,GAhBY;AAiBb,EAAA,OAAO,EAAE;AACP,IAAA,iBADO,6BACW,KADX,EACyB;AAAA;;AAC9B,MAAA,KAAA,CAAA,WAAA,CAAY,iBAAZ,CAA8B;AAAC,QAAA,MAAM,EAAE;AAAT,OAA9B,EAA+C,IAA/C,CAAoD,UAAA,GAAG,EAAG;AACxD,QAAA,KAAI,CAAC,SAAL,GAAiB,GAAG,CAAC,IAArB;AACD,OAFD;AAGD,KALM;AAMP,IAAA,gBANO,4BAMU,GANV,EAMmB;AACxB,WAAK,OAAL,CAAa,IAAb,CAAkB;AAAC,QAAA,IAAI,EAAE,WAAA,CAAA,QAAA,CAAS,qBAAhB;AAChB,QAAA,KAAK,EAAE;AACL,UAAA,SAAS,EAAE,GAAG,CAAC,EADV;AAEL,UAAA,WAAW,EAAE,GAAG,CAAC;AAFZ;AADS,OAAlB;AAMD;AAbM;AAjBI,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {coverageApi} from \"@/api\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\";\nimport {PathName} from \"@/constant/routeData\";\nexport default {\n  name: \"GitLabProjects\",\n  components: {TableHeader, TableOperator},\n  data() {\n    return {\n      condition: {},\n      tableData: []\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  mounted() {\n    this.handleGetProjects('')\n  },\n  methods: {\n    handleGetProjects(value?: string) {\n      coverageApi.getGitlabProjects({search: value}).then(res => {\n        this.tableData = res.data\n      })\n    },\n    handleToBranches(row?: any) {\n      this.$router.push({name: PathName.GitLabProjectBranches,\n        query: {\n          projectId: row.id,\n          projectName: row.pathWithNamespace\n        }\n      })\n    }\n  }\n}\n"],"sourceRoot":""}]}