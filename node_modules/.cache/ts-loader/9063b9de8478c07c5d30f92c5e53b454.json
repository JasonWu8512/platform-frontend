{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/pages/track/common/utils.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/common/utils.ts","mtime":1655949681801},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuYnVpbGRVcGxvYWRGaWxlUGFyYW1zID0gZXhwb3J0cy5nZXRNb2R1bGVCeVRyZWVJZCA9IGV4cG9ydHMuZ2V0TW9kdWxlT3B0aW9ucyA9IGV4cG9ydHMuYnVpbGROb2RlUGF0aCA9IHZvaWQgMDsKCnZhciBodW1wc18xID0gcmVxdWlyZSgiaHVtcHMiKTsKCmZ1bmN0aW9uIGJ1aWxkTm9kZVBhdGgobm9kZSwgb3B0aW9uLCBtb2R1bGVPcHRpb25zKSB7CiAgLy8g6YCS5b2S5p6E5bu66IqC54K56Lev5b6ECiAgb3B0aW9uLmlkID0gbm9kZS5pZDsKICBvcHRpb24ucGF0aCA9IG9wdGlvbi5wYXRoICsgJy8nICsgbm9kZS5uYW1lOwogIG1vZHVsZU9wdGlvbnMucHVzaChvcHRpb24pOwoKICBpZiAobm9kZS5jaGlsZHJlbikgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2RlLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7CiAgICAgIGJ1aWxkTm9kZVBhdGgobm9kZS5jaGlsZHJlbltpXSwgewogICAgICAgIGlkOiAnJywKICAgICAgICBwYXRoOiBvcHRpb24ucGF0aAogICAgICB9LCBtb2R1bGVPcHRpb25zKTsKICAgIH0KICB9Cn0KCmV4cG9ydHMuYnVpbGROb2RlUGF0aCA9IGJ1aWxkTm9kZVBhdGg7CgpmdW5jdGlvbiBnZXRNb2R1bGVPcHRpb25zKG5vZGVzKSB7CiAgdmFyIG1vZHVsZU9wdGlvbnMgPSBbXTsKICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICBidWlsZE5vZGVQYXRoKG5vZGUsIHsKICAgICAgaWQ6ICcnLAogICAgICBwYXRoOiAnJwogICAgfSwgbW9kdWxlT3B0aW9ucyk7CiAgfSk7CiAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShKU09OLnN0cmluZ2lmeShub2RlcyksIEpTT04uc3RyaW5naWZ5KG1vZHVsZU9wdGlvbnMpKTsKICByZXR1cm4gbW9kdWxlT3B0aW9uczsKfQoKZXhwb3J0cy5nZXRNb2R1bGVPcHRpb25zID0gZ2V0TW9kdWxlT3B0aW9uczsKCmZ1bmN0aW9uIGdldE1vZHVsZUJ5VHJlZUlkKG5vZGVzLCBub2RlSWQpIHsKICB2YXIgdG1wID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShKU09OLnN0cmluZ2lmeShub2RlcykpOwogIHZhciBtb2R1bGVPcHRpb25zOwoKICBpZiAodG1wID09PSBudWxsKSB7CiAgICBtb2R1bGVPcHRpb25zID0gZ2V0TW9kdWxlT3B0aW9ucyhub2Rlcyk7CiAgfSBlbHNlIHsKICAgIG1vZHVsZU9wdGlvbnMgPSBKU09OLnBhcnNlKHRtcCk7CiAgfQoKICB2YXIgbW9kdWxlID0gbW9kdWxlT3B0aW9ucy5maW5kKGZ1bmN0aW9uIChtb2R1bGVPcHRpb24pIHsKICAgIHJldHVybiBtb2R1bGVPcHRpb24uaWQgPT09IG5vZGVJZDsKICB9KTsKICByZXR1cm4gbW9kdWxlIHx8IHsKICAgIGlkOiAnJywKICAgIHBhdGg6ICctJwogIH07Cn0KCmV4cG9ydHMuZ2V0TW9kdWxlQnlUcmVlSWQgPSBnZXRNb2R1bGVCeVRyZWVJZDsKCmZ1bmN0aW9uIGJ1aWxkVXBsb2FkRmlsZVBhcmFtcyhwYXJhbXMpIHsKICB2YXIgZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogIE9iamVjdC5rZXlzKHBhcmFtcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICBkYXRhLmFwcGVuZChodW1wc18xLmRlY2FtZWxpemUoa2V5KSwgcGFyYW1zW2tleV0pOwogIH0pOwogIHJldHVybiBkYXRhOwp9CgpleHBvcnRzLmJ1aWxkVXBsb2FkRmlsZVBhcmFtcyA9IGJ1aWxkVXBsb2FkRmlsZVBhcmFtczs="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/pages/track/common/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,SAAgB,aAAhB,CAA8B,IAA9B,EAA8C,MAA9C,EAAwE,aAAxE,EAAyG;AACvG;AACA,EAAA,MAAM,CAAC,EAAP,GAAY,IAAI,CAAC,EAAjB;AACA,EAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,GAAc,GAAd,GAAoB,IAAI,CAAC,IAAvC;AACA,EAAA,aAAa,CAAC,IAAd,CAAmB,MAAnB;;AACA,MAAI,IAAI,CAAC,QAAT,EAAmB;AACjB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,QAAL,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,MAAA,aAAa,CAAC,IAAI,CAAC,QAAL,CAAc,CAAd,CAAD,EAAmB;AAAC,QAAA,EAAE,EAAE,EAAL;AAAS,QAAA,IAAI,EAAE,MAAM,CAAC;AAAtB,OAAnB,EAAgD,aAAhD,CAAb;AACD;AACF;AACF;;AAVD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAYA,SAAgB,gBAAhB,CAAiC,KAAjC,EAAkD;AAChD,MAAI,aAAa,GAAuB,EAAxC;AACA,EAAA,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAAmB;AAC/B,IAAA,aAAa,CAAC,IAAD,EAAO;AAAC,MAAA,EAAE,EAAE,EAAL;AAAS,MAAA,IAAI,EAAE;AAAf,KAAP,EAA2B,aAA3B,CAAb;AACD,GAFD;AAGA,EAAA,cAAc,CAAC,OAAf,CAAuB,IAAI,CAAC,SAAL,CAAe,KAAf,CAAvB,EAA8C,IAAI,CAAC,SAAL,CAAe,aAAf,CAA9C;AACA,SAAO,aAAP;AACD;;AAPD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AASA,SAAgB,iBAAhB,CAAkC,KAAlC,EAAqD,MAArD,EAAmE;AACjE,MAAI,GAAG,GAAG,cAAc,CAAC,OAAf,CAAuB,IAAI,CAAC,SAAL,CAAe,KAAf,CAAvB,CAAV;AACA,MAAI,aAAJ;;AACA,MAAI,GAAG,KAAK,IAAZ,EAAkB;AAChB,IAAA,aAAa,GAAG,gBAAgB,CAAC,KAAD,CAAhC;AACD,GAFD,MAEO;AACL,IAAA,aAAa,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAhB;AACD;;AACD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAd,CAAmB,UAAC,YAAD;AAAA,WAAoC,YAAY,CAAC,EAAb,KAAoB,MAAxD;AAAA,GAAnB,CAAf;AACA,SAAO,MAAM,IAAI;AAAC,IAAA,EAAE,EAAE,EAAL;AAAS,IAAA,IAAI,EAAE;AAAf,GAAjB;AACD;;AAVD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAaA,SAAgB,qBAAhB,CAAsC,MAAtC,EAAiD;AAC/C,MAAI,IAAI,GAAG,IAAI,QAAJ,EAAX;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,GAAD,EAAQ;AAClC,IAAA,IAAI,CAAC,MAAL,CAAY,OAAA,CAAA,UAAA,CAAW,GAAX,CAAZ,EAA6B,MAAM,CAAC,GAAD,CAAnC;AACD,GAFD;AAGA,SAAO,IAAP;AACD;;AAND,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["import {typeModuleOption, typeNode} from \"@/api/types/testTrackType\";\nimport {decamelize} from \"humps\";\n\nexport function buildNodePath(node: typeNode, option: typeModuleOption, moduleOptions: typeModuleOption[]) {\n  // 递归构建节点路径\n  option.id = node.id\n  option.path = option.path + '/' + node.name\n  moduleOptions.push(option)\n  if (node.children) {\n    for (let i = 0; i < node.children.length; i++) {\n      buildNodePath(node.children[i], {id: '', path: option.path}, moduleOptions)\n    }\n  }\n}\n\nexport function getModuleOptions(nodes: typeNode[]) {\n  let moduleOptions: typeModuleOption[] = []\n  nodes.forEach((node: typeNode) => {\n    buildNodePath(node, {id: '', path: ''}, moduleOptions)\n  })\n  sessionStorage.setItem(JSON.stringify(nodes), JSON.stringify(moduleOptions))\n  return moduleOptions\n}\n\nexport function getModuleByTreeId(nodes: typeNode[], nodeId: string): typeModuleOption {\n  let tmp = sessionStorage.getItem(JSON.stringify(nodes))\n  let moduleOptions: typeModuleOption[]\n  if (tmp === null) {\n    moduleOptions = getModuleOptions(nodes)\n  } else {\n    moduleOptions = JSON.parse(tmp)\n  }\n  const module = moduleOptions.find((moduleOption: typeModuleOption) => moduleOption.id === nodeId)\n  return module || {id: '', path: '-'}\n}\n\n\nexport function buildUploadFileParams(params: any): FormData {\n  let data = new FormData()\n  Object.keys(params).forEach((key) => {\n    data.append(decamelize(key), params[key])\n  })\n  return data\n}\n"],"sourceRoot":""}]}