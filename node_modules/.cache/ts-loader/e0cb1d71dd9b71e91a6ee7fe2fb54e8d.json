{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/jira.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/api/jira.ts","mtime":1655949681742},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/jira.ts"],"names":[],"mappings":"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","sourcesContent":["import instance from '@/api/index'\nimport Qs from \"qs\";\nimport {RequestGetTestEpics} from './types/jira'\n\nconst urlPrefix = '/v1/jira/'\nexport default {\n  // 获取所有工程\n  getAllProject(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}projects`,\n      params: params\n    })\n  },\n  // 获取迭代\n  getSprintByProject(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprints`,\n      params: params\n    })\n  },\n  // 根据迭代获取story\n  getStoryBySprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}stories`,\n      params: params\n    })\n  },\n  // 获取最近一次迭代\n  getLatestSprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprints/latest`,\n      params: params\n    })\n  },\n  // 获取指定迭代下所有版本的信息\n  getVersionDetailsBySprint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}version/details`,\n      params: params\n    })\n  },\n\n  // 获取bugsummary\n  getBugSummary(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}bug/summary`,\n      params: params\n    })\n  },\n\n  //获取指定月份测试报告\n  getTestMonthReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/report`,\n      params: params\n    })\n  },\n\n  //获取部门指定月份测试报告\n  getTestDepartmentMonthReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}department/month/report`,\n      params: params\n    })\n  },\n\n  // 获取指定月份测试bug指标报告趋势\n  getMonthTrendReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/quality/trend`,\n      params: params\n    })\n  },\n\n  // 获取指定月份bug解决时长趋势\n  getMonthBugFixTimeTrend(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/bug_time/trend`,\n      params: params\n    })\n  },\n\n  //获取每条产线迭代维度近半年需求响应周期\n  getBusinessSprintCycle(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}demand/business/sprint/cycle`,\n      params: params\n    })\n  },\n\n  // 获取项目半年的迭代维度下bug的平均解决、关闭时长\n  getSprintBugFixTimeTrend(param: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug_time/trend`,\n      params: param\n    })\n  },\n\n  // 获取项目吞吐量\n  getStoryThroughput(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/throughput`,\n      params: params\n    })\n  },\n\n  // 获取交付周期半年内趋势\n  getBusinessCycleTrend(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}demand/response/cycle`,\n      params: params\n    })\n  },\n\n  // epic搜索\n  getTestEpics(params: RequestGetTestEpics) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}epics`,\n      params: params,\n      paramsSerializer(params) {\n        return Qs.stringify(params, {arrayFormat: 'repeat'})\n      }\n    })\n  },\n\n  // 获取sprint的各职能团队人天报告\n  getSprintEstimateReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/estimate/report`,\n      params: params\n    })\n  },\n\n  // 获取占用研发/测试资源top10需求\n  getStoryResourceRank(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/story/resource/rank`,\n      params: params\n    })\n  },\n\n  // 编辑职能团队总的sprint的人数、开发人天等\n  editSprintTotalEstimate(sprId: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}sprint/total/estimate/${sprId}`,\n      data: params\n    })\n  },\n\n  // 获取技术部月度资源报告\n  getMonthResourceReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}month/resource/report`,\n      params: params\n    })\n  },\n\n  // 编辑月度资源报告\n  editMonthResourceReport(rid: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}month/resource/report/${rid}`,\n      data: params\n    })\n  },\n\n  // 编辑职能团队的sprint的人数、开发人天等\n  editSprintEstimateReport(rid: string, params: any) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}sprint/estimate/report/${rid}`,\n      data: params\n    })\n  },\n\n  // 获取研发测试投入及bugs\n  getDevQaAndBug(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}develop/bug/statistical`,\n      params: params\n    })\n  },\n\n  // 获取子任务\n  getSubTask(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/subtask`,\n      params: params\n    })\n  },\n\n  // 获取固定sprintid,暂时效能数据专用\n  getSprintSpecific(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/specific`,\n      params: params\n    })\n  },\n\n  //获取每个迭代的story的提测规划\n  getSprintStoryTestPlan(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/test/planning`,\n      params: params\n    })\n  },\n\n  // 获取每个迭代的story的测规划\n  getSprintStoryTestStatus(params: any) {\n    return instance( {\n      method: 'get',\n      url: `${urlPrefix}sprint/story/test/status`,\n      params: params\n    })\n  },\n\n  // 获取迭代冲刺总览\n  getSprintOverview() {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/story/overview`,\n    })\n  },\n\n  //获取bug质量分\n  getBugPoint(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/point`,\n      params: params\n    })\n  },\n\n  //获取bug修复时长\n  getBugFixTime(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/fix/duration`,\n      params: params\n    })\n  },\n\n  //下载bug详情\n  downloadBugDetails(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/bug/download`,\n      params: params\n    })\n  },\n  // 同步项目报告数据\n  synReport(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/report/refresh`,\n      params: params\n    })\n  },\n  // 获取迭代异常\n  getSprintExceptionsWarning(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}sprint/warning`,\n      params: params\n    })\n  }\n}\n"],"sourceRoot":""}]}