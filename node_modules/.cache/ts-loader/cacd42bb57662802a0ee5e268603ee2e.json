{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/coverage.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/api/coverage.ts","mtime":1655949681742},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9jbGFzc0NhbGxDaGVjayA9IHJlcXVpcmUoIi9Vc2Vycy9qbGdscWEvRG9jdW1lbnRzL1FBL25vYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLmRlZmF1bHQ7Cgp2YXIgX19pbXBvcnREZWZhdWx0ID0gdGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCB8fCBmdW5jdGlvbiAobW9kKSB7CiAgcmV0dXJuIG1vZCAmJiBtb2QuX19lc01vZHVsZSA/IG1vZCA6IHsKICAgICJkZWZhdWx0IjogbW9kCiAgfTsKfTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5jb3ZlcmFnZUFwaSA9IHZvaWQgMDsKCnZhciBpbmRleF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoIkAvYXBpL2luZGV4IikpOwoKdmFyIHFzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgicXMiKSk7Cgp2YXIgdXJsUHJlZml4ID0gJ3YxL2NvdmVyYWdlJzsKdmFyIHVybEdpdFByZWZpeCA9ICd2MS9naXRsYWInOwpleHBvcnRzLmRlZmF1bHQgPSB7CiAgLy8g6I635Y+W5omA5pyJZ2l05bel56iLCiAgZ2V0QWxsR2l0UHJvamVjdHM6IGZ1bmN0aW9uIGdldEFsbEdpdFByb2plY3RzKCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9naXQvcHJvamVjdCIpCiAgICB9KTsKICB9LAogIC8vIOiOt+WPlua1geawtOe6v+ivpuaDhQogIGdldFBpcGVsaW5lSW5mbzogZnVuY3Rpb24gZ2V0UGlwZWxpbmVJbmZvKGlkKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL3BpcGVsaW5lLyIpLmNvbmNhdChpZCkKICAgIH0pOwogIH0sCiAgLy8g5Yib5bu65rWB5rC057q/CiAgY3JlYXRlUGlwZWxpbmU6IGZ1bmN0aW9uIGNyZWF0ZVBpcGVsaW5lKHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvcGlwZWxpbmUiKSwKICAgICAgZGF0YTogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOe8lui+kea1geawtOe6vwogIHVwZGF0ZVBpcGVsaW5lOiBmdW5jdGlvbiB1cGRhdGVQaXBlbGluZShpZCwgcGFyYW1zKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAncGF0Y2gnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvcGlwZWxpbmUvIikuY29uY2F0KGlkKSwKICAgICAgZGF0YTogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOWIoOmZpOa1geawtOe6vwogIGRlbGV0ZVBpcGVsaW5lOiBmdW5jdGlvbiBkZWxldGVQaXBlbGluZShpZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2RlbGV0ZScsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9waXBlbGluZS8iKS5jb25jYXQoaWQpCiAgICB9KTsKICB9LAogIC8vIOiOt+WPlua1geawtOe6v+WIl+ihqAogIGdldFBpcGVsaW5lTGlzdDogZnVuY3Rpb24gZ2V0UGlwZWxpbmVMaXN0KHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9waXBlbGluZSIpLAogICAgICBwYXJhbXM6IHBhcmFtcywKICAgICAgcGFyYW1zU2VyaWFsaXplcjogZnVuY3Rpb24gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpIHsKICAgICAgICByZXR1cm4gcXNfMS5kZWZhdWx0LnN0cmluZ2lmeShwYXJhbXMsIHsKICAgICAgICAgIGFycmF5Rm9ybWF0OiAncmVwZWF0JwogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9LAogIC8vIOiOt+WPluafkOa1geawtOe6v+acjeWKoeerr+WPkeeJiGNvbnNvbGUKICBnZXRQaXBlbGluZURlcGxveUNvbnNvbGU6IGZ1bmN0aW9uIGdldFBpcGVsaW5lRGVwbG95Q29uc29sZShpZCkgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9waXBlbGluZS8iKS5jb25jYXQoaWQsICIvZGVwbG95L2NvbnNvbGUiKQogICAgfSk7CiAgfSwKICBnZXRQaXBlbGluZUNvdmVyYWdlQ29uc29sZTogZnVuY3Rpb24gZ2V0UGlwZWxpbmVDb3ZlcmFnZUNvbnNvbGUoaWQpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxQcmVmaXgsICIvcGlwZWxpbmUvIikuY29uY2F0KGlkLCAiL2NvdmVyYWdlL2NvbnNvbGUiKQogICAgfSk7CiAgfSwKICAvLyDmn6XnnIvmtYHmsLTnur/nmoTmnoTlu7rorrDlvZUKICBnZXRKZW5raW5zVGFza3NIaXN0b3J5OiBmdW5jdGlvbiBnZXRKZW5raW5zVGFza3NIaXN0b3J5KHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9qZW5raW5zL3Rhc2siKSwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g6Kem5Y+R5pyN5Yqh5p6E5bu6CiAgdHJpZ2dlclNlcnZlckRlcGxveTogZnVuY3Rpb24gdHJpZ2dlclNlcnZlckRlcGxveShwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL2plbmtpbnMvdGFzay9zZXJ2ZXIvZGVwbG95IiksCiAgICAgIGRhdGE6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDop6blj5Hopobnm5bnjofmiqXlkYrmnoTlu7oKICB0cmlnZ2VyQ292ZXJhZ2VEZXBsb3k6IGZ1bmN0aW9uIHRyaWdnZXJDb3ZlcmFnZURlcGxveShwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL2plbmtpbnMvdGFzayIpLAogICAgICBkYXRhOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g6Kem5Y+Rc29uYXLmnoTlu7oKICB0cmlnZ2VyU29uYXJCdWlsZDogZnVuY3Rpb24gdHJpZ2dlclNvbmFyQnVpbGQocGFyYW1zKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybFByZWZpeCwgIi9qZW5raW5zL3Rhc2svc2VydmVyL3NvbmFyIiksCiAgICAgIGRhdGE6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDmn6XnnIvmnI3liqHnq6/lj5HniYjorrDlvZUKICBnZXRTZXJ2ZXJKZW5raW5zRGVwbG95SGlzdG9yeTogZnVuY3Rpb24gZ2V0U2VydmVySmVua2luc0RlcGxveUhpc3RvcnkocGFyYW1zKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL2plbmtpbnMvc2VydmVyL2RlcGxveS9oaXN0b3J5IiksCiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIGdpdGxhYiDliIbmlK/nrqHnkIbnm7jlhbMKICAvLyDojrflj5Zwcm9qZWN0cwogIGdldEdpdGxhYlByb2plY3RzOiBmdW5jdGlvbiBnZXRHaXRsYWJQcm9qZWN0cyhwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxHaXRQcmVmaXgsICIvcHJvamVjdHMiKSwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g6I635Y+W5oyH5a6a5bel56iL55qEYnJhbmNoZXMKICBnZXRHaXRsYWJQcm9qZWN0QnJhbmNoZXM6IGZ1bmN0aW9uIGdldEdpdGxhYlByb2plY3RCcmFuY2hlcyhwaWQsIHBhcmFtcykgewogICAgcmV0dXJuIGluZGV4XzEuZGVmYXVsdCh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogIiIuY29uY2F0KHVybEdpdFByZWZpeCwgIi9wcm9qZWN0LyIpLmNvbmNhdChwaWQsICIvYnJhbmNoIiksCiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOe7meaMh+WumuW3peeoi+WIm+W7uuWIhuaUrwogIGNyZWF0ZUdpdGxhYlByb2plY3RCcmFuY2g6IGZ1bmN0aW9uIGNyZWF0ZUdpdGxhYlByb2plY3RCcmFuY2gocGlkLCBwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsR2l0UHJlZml4LCAiL3Byb2plY3QvIikuY29uY2F0KHBpZCwgIi9icmFuY2giKSwKICAgICAgZGF0YTogcGFyYW1zCiAgICB9KTsKICB9LAogIC8vIOWIoOmZpOaMh+WumuWIhuaUrwogIGRlbGV0ZUdpdGxhYlByb2plY3RCcmFuY2g6IGZ1bmN0aW9uIGRlbGV0ZUdpdGxhYlByb2plY3RCcmFuY2gocGlkLCBwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdkZWxldGUnLAogICAgICB1cmw6ICIiLmNvbmNhdCh1cmxHaXRQcmVmaXgsICIvcHJvamVjdC8iKS5jb25jYXQocGlkLCAiL2JyYW5jaCIpLAogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDmn6XnnIvlhajph4/opobnm5bnjofotovlir8KICBnZXRGdWxsQ292ZXJhZ2VSZXBvcnRUcmVuZDogZnVuY3Rpb24gZ2V0RnVsbENvdmVyYWdlUmVwb3J0VHJlbmQocGFyYW1zKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiAiIi5jb25jYXQodXJsUHJlZml4LCAiL2Z1bGwvcmVwb3J0L3RyZW5kIiksCiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KTsKICB9Cn07Cgp2YXIgY292ZXJhZ2VBcGkgPSBmdW5jdGlvbiBjb3ZlcmFnZUFwaSgpIHsKICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgY292ZXJhZ2VBcGkpOwp9OwoKZXhwb3J0cy5jb3ZlcmFnZUFwaSA9IGNvdmVyYWdlQXBpOw=="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/coverage.ts"],"names":[],"mappings":"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","sourcesContent":["import instance from '@/api/index'\nimport Qs from \"qs\"\nconst urlPrefix = 'v1/coverage'\nconst urlGitPrefix = 'v1/gitlab'\nexport default {\n  // 获取所有git工程\n  getAllGitProjects() {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/git/project`\n    })\n  },\n  // 获取流水线详情\n  getPipelineInfo(id: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/pipeline/${id}`,\n    })\n  },\n  // 创建流水线\n  createPipeline(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/pipeline`,\n      data: params,\n    })\n  },\n  // 编辑流水线\n  updatePipeline(id: any, params: Object) {\n    return instance({\n      method: 'patch',\n      url: `${urlPrefix}/pipeline/${id}`,\n      data: params\n    })\n  },\n  // 删除流水线\n  deletePipeline(id: any) {\n    return instance({\n      method: 'delete',\n      url: `${urlPrefix}/pipeline/${id}`,\n    })\n  },\n  // 获取流水线列表\n  getPipelineList(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/pipeline`,\n      params: params,\n      paramsSerializer(params) {\n        return Qs.stringify(params, {arrayFormat: 'repeat'})\n      }\n    })\n  },\n  // 获取某流水线服务端发版console\n  getPipelineDeployConsole(id: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/pipeline/${id}/deploy/console`\n    })\n  },\n  getPipelineCoverageConsole(id: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/pipeline/${id}/coverage/console`\n    })\n  },\n  // 查看流水线的构建记录\n  getJenkinsTasksHistory(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/jenkins/task`,\n      params: params\n    })\n  },\n  // 触发服务构建\n  triggerServerDeploy(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/jenkins/task/server/deploy`,\n      data: params\n    })\n  },\n  // 触发覆盖率报告构建\n  triggerCoverageDeploy(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/jenkins/task`,\n      data: params\n    })\n  },\n  // 触发sonar构建\n  triggerSonarBuild(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/jenkins/task/server/sonar`,\n      data: params\n    })\n  },\n  // 查看服务端发版记录\n  getServerJenkinsDeployHistory(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/jenkins/server/deploy/history`,\n      params: params\n    })\n  },\n\n  // gitlab 分支管理相关\n  // 获取projects\n  getGitlabProjects(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlGitPrefix}/projects`,\n      params: params\n    })\n  },\n  // 获取指定工程的branches\n  getGitlabProjectBranches(pid: string, params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlGitPrefix}/project/${pid}/branch`,\n      params: params\n    })\n  },\n  // 给指定工程创建分支\n  createGitlabProjectBranch(pid: string, params: any) {\n    return instance({\n      method: 'post',\n      url: `${urlGitPrefix}/project/${pid}/branch`,\n      data: params\n    })\n  },\n  // 删除指定分支\n  deleteGitlabProjectBranch(pid: string, params: any) {\n    return instance({\n      method: 'delete',\n      url: `${urlGitPrefix}/project/${pid}/branch`,\n      params: params\n    })\n  } ,\n  // 查看全量覆盖率趋势\n  getFullCoverageReportTrend(params: any) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/full/report/trend`,\n      params: params\n    })\n  }\n  \n}\n\nexport class coverageApi {\n}\n"],"sourceRoot":""}]}