{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanEdit.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanEdit.vue","mtime":1655949681802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanEdit.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {coverageApi, jiraApi, testPlanApi} from \"@/api\"\nimport {RequestCreateTestCasePlan, RequestGetTestCasePlanList, RequestUpdateTestCasePlan} from \"@/api/types/testPlan\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport {datePickerOptionsStart} from \"@/common/utils\"\nimport {operationEnum} from \"@/constant/TestCase\"\nimport {planStageEnum, planStatusEnum} from \"@/constant/TestPlan\"\nimport TestPlanStatusButton from \"@/pages/track/plan/common/TestPlanStatusButton.vue\"\nimport {planForm, planRules} from \"@/pages/track/plan/forms\"\nimport {cloneDeep} from \"lodash\"\n\n// 计划状态\n// const planStageOptions = Object.entries(planStageType).map(([value, text]) => {\n//   return {text: text, value: value}\n// })\n\n\nexport default {\n  name: \"TestPlanEdit\",\n  components: {TestPlanStatusButton, DialogFooter},\n  data() {\n    return {\n      operationEnum: operationEnum,\n      planStageEnum: planStageEnum,\n      planStageOptions: [],\n      dialogFormVisible: false,\n      form: planForm,\n      rules: planRules,\n      operation: '',\n      ownerOptions: [],\n      projectOptions: [],\n      storyOptions: [],\n      sprintOptions: [],\n      planOptions: [],\n      pipelineOptions: [],\n      pickerOptionsStart: {},\n    }\n  },\n  props: {\n    condition: Object,\n  },\n  computed: {\n    formLabelWidth() {\n      return variables['formLabelWidth']\n    },\n  },\n  watch: {\n    'form.sprintId'() {\n      jiraApi.getStoryBySprint({sprintId: this.form.sprintId}).then(res => {\n        this.storyOptions = res.data\n      })\n    },\n    'form.projIds'() {\n      this.setSprintOptions()\n    }\n  },\n  mounted() {\n    this.$eventBus.$on('testPlanCreateOrUpdate', (testPlan: typePlanData, stage: any) => {\n      this.open(testPlan, stage)\n      console.log('sprintId', this.form.sprintId)\n    })\n    coverageApi.getPipelineList({limit: 1000}).then(res => {\n      this.pipelineOptions = res.data.data\n    })\n  },\n  methods: {\n    initOptions() {\n      this.ownerOptions = this.condition.ownerOptions\n      this.projectOptions = this.condition.projectOptions\n      this.pickerOptionsStart = datePickerOptionsStart()\n      this.setPlanOptions()\n      // this.setSprintOptions()\n    },\n    open(testPlan: typePlanData, stage: any) {\n      this.planStageOptions = stage\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.form = {\n          status: planStatusEnum.INIT,\n          name: '',\n          projIds: [],\n          projNames: [],\n          owner: '',\n          stage: '',\n          description: '',\n          targetStart: '',\n          targetEnd: '',\n          epics: [],\n          parent: ''\n        }\n        this.operation = operationEnum.ADD\n        //修改\n        if (testPlan) {\n          this.operation = operationEnum.EDIT\n          this.form = cloneDeep(testPlan)\n        }\n        this.initOptions()\n      })\n    },\n    savePlan() {\n      this.$refs.planForm.validate((valid: boolean) => {\n        if (valid) {\n          if (!this.validate()) return false\n          if (this.operation === operationEnum.ADD) {\n            const body: RequestCreateTestCasePlan = this.buildParams()\n            testPlanApi.createTestCasePlan(body)\n              .then(() => {\n                this.$emit('refresh')\n              })\n          } else if (this.operation === operationEnum.EDIT) {\n            const body: RequestUpdateTestCasePlan = this.buildParams()\n            testPlanApi.updateTestCasePlan(this.form.id, body)\n              .then(() => {\n                this.$emit('refresh')\n              })\n          }\n          this.dialogFormVisible = false\n        } else {\n          return false\n        }\n      })\n    },\n    validate() {\n      if (this.form.targetStart > this.form.targetEnd) {\n        this.$message.warning('开始日期不能大于结束日期')\n        return false\n      }\n      return true\n    },\n    buildParams() {\n      // console.log(this.form.projIds, this.projectOptions)\n      let body: RequestCreateTestCasePlan | RequestUpdateTestCasePlan = {\n        name: this.form.name,\n        stage: this.form.stage,\n        projIds: this.form.projIds,\n        projNames: this.form.projIds.map((id: any) => {\n          return this.projectOptions.find((obj: { id: any }) => obj.id === id).name\n        }),\n        owner: this.form.owner,\n        targetStart: this.form.targetStart || undefined,\n        targetEnd: this.form.targetEnd || undefined,\n        description: this.form.description,\n        storyIds: this.form.storyIds || undefined,\n        pipelineIds: this.form.pipelineIds || undefined,\n        sprintId: this.form.sprintId,\n        status: this.form.status,\n      }\n      if (body.stage === planStageEnum.SMOKE) {\n        body = Object.assign({parent: this.form.parent}, body)\n      }\n      return body\n    },\n    statusChange(status: any) {\n      this.form.status = status\n      this.$forceUpdate()\n    },\n    setPlanOptions(value?: any) {\n      const params: RequestGetTestCasePlanList = {\n        stage: planStageEnum.SYSTEM,\n        name: value || ''\n      }\n      testPlanApi.getTestCasePlanList(params)\n        .then(({data}) => {\n          this.planOptions = data.data\n        })\n    },\n    setSprintOptions() {\n      this.sprintOptions = []\n      this.form.projIds.forEach((item: any) =>{\n        console.log('proj', item)\n        jiraApi.getSprintByProject({projId: item}).then(res => {\n          this.sprintOptions = this.sprintOptions.concat(res.data.datas)\n        })\n      })\n      // jiraApi.getSprintByProject({search: value || '', epics: this.form.epics})\n      //   .then(({data}) => {\n      //     this.epicOptions = data\n      //   })\n    },\n  }\n}\n"],"sourceRoot":""}]}