{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanList.vue","mtime":1655949681803},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {testCaseApi, testPlanApi} from \"@/api\"\nimport {RequestGetTestCasePlanCaseList, RequestUpdateTestCasePlanCaseList} from \"@/api/types/testPlan\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport {RequestUpdateTestCaseBatch} from \"@/api/types/testTrack\"\nimport {typeCaseStep} from \"@/api/types/testTrackType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {_filter, formatTime} from \"@/common/utils\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport {caseTypeType, caseUpdateTypeEnum, executionType, priorityType, stepStatusEnum} from \"@/constant/TestCase\"\nimport {\n  caseBatchEditEnum,\n  caseBatchEditType,\n  planOperationEnum,\n  planResultType,\n  planStageEnum\n} from \"@/constant/TestPlan\"\nimport BatchEdit from \"@/pages/track/case/components/BatchEdit.vue\"\nimport ShowMoreBtn from \"@/pages/track/case/components/ShowMoreBtn.vue\"\nimport NodeBreadcrumb from \"@/pages/track/common/NodeBreadcrumb.vue\"\nimport CaseTypeTableItem from \"@/pages/track/common/tableItems/CaseTypeTableItem.vue\"\nimport ExecutionTypeTableItem from \"@/pages/track/common/tableItems/ExecutionTypeTableItem.vue\"\nimport PlanCaseStatusTableItem from \"@/pages/track/common/tableItems/PlanCaseStatusTableItem.vue\"\nimport PriorityTableItem from \"@/pages/track/common/tableItems/PriorityTableItem.vue\"\nimport {getModuleByTreeId} from \"@/pages/track/common/utils\"\nimport TestCasePlanRun from \"@/pages/track/plan/view/comonents/TestCasePlanRun.vue\"\nimport TestCaseRelevance from \"@/pages/track/plan/view/comonents/TestCaseRelevance.vue\"\n\n// 执行方式\nconst executionOptions = Object.entries(executionType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 用例优先级\nconst priorityOptions = Object.entries(priorityType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 计划用例状态\nconst planResultOptions = Object.entries(planResultType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 用例类型\nconst caseTypeOptions = Object.entries(caseTypeType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 批量编辑类型\nconst caseBatchEditOptions = Object.entries(caseBatchEditType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"TestCasePlanList\",\n  components: {\n    BatchEdit,\n    TestCasePlanRun,\n    ExecutionTypeTableItem,\n    CaseTypeTableItem,\n    PlanCaseStatusTableItem,\n    PriorityTableItem,\n    ShowMoreBtn,\n    NodeBreadcrumb,\n    TableOperator,\n    TablePagination,\n    TableHeader,\n    TestCaseRelevance,\n  },\n  data() {\n    return {\n      executionOptions: executionOptions,\n      priorityOptions: priorityOptions,\n      planResultOptions: planResultOptions,\n      caseTypeOptions: caseTypeOptions,\n      caseBatchEditOptions: caseBatchEditOptions,\n      planStageEnum: planStageEnum,\n      users: this.users,\n      projects: this.projects,\n      condition: {},\n      buttons: [\n        {name: '批量编辑用例', handleClick: this.handleBatchEdit},\n        {name: '批量取消关联', handleClick: this.handleBatchUnRelate},\n      ],\n      allCase: false,\n      tableData: [],\n      selectRows: new Set(),\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      caseFilter: {},\n      batchEditValueArr: {\n        // 执行方式\n        result: planResultOptions,\n        // 维护人\n        executor: [],\n      },\n      planStage: '',\n      isQa: false,\n    }\n  },\n  props: {\n    treeNodes: Array,\n    selectNode: Object,\n    selectParentNodes: Array,\n  },\n  inject: ['projects', 'users'],\n  computed: {\n    planId() {\n      return this.$route.params.planId\n    },\n    projId() {\n      return this.$route.query.projId\n    },\n    treeId() {\n      return this.$route.query.treeId\n    },\n    caseIds() {\n      return Array.from(this.selectRows).map((row: { caseId: string }) => row.caseId)\n    },\n    table2BtnWidth() {\n      return variables['table2BtnWidth']\n    },\n    tableTimeWidth() {\n      return variables['tableTimeWidth']\n    }\n  },\n  watch: {\n    '$route'() {\n      this.initTableData()\n    },\n    treeNodes() {\n      this.initTableData()\n    },\n  },\n  mounted() {\n    this.getPlanDetail()\n  },\n  methods: {\n    setSelectOptions() {\n      this.setPriorityOptions()\n      this.setProjectOptions()\n      this.setCaseTypeOptions()\n      this.setExecutorOptions()\n    },\n    initTableData() {\n      this.setSelectOptions()\n      this.getData()\n    },\n    async getData(value?: string) {\n      let params: RequestGetTestCasePlanCaseList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        name: value,\n        treeId: this.treeId,\n        projId: this.treeId ? undefined : this.projId\n      }\n\n      this.caseFilter = sessionStorage.getItem(this.$route.path)\n      this.caseFilter = this.caseFilter ? JSON.parse(this.caseFilter) : {}\n      if (JSON.stringify(this.caseFilter) !== \"{}\") {\n        Object.assign(params, this.caseFilter)\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.caseFilter[item.columnKey]\n        })\n      }\n\n      await testPlanApi.getTestCasePlanCaseList(this.planId, params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n          this.tableData.forEach((item: any) => {\n            item.treePath = getModuleByTreeId(this.treeNodes, item.treeId).path\n            item.updatedAt = formatTime(item.updatedAt)\n            item.projName = this.projects.find((obj: any) => obj.id === item.projId).name\n            item.caseDetail.steps.forEach((obj: typeCaseStep) => {\n              obj.actualStatus = stepStatusEnum.PASS\n            })\n            item.stepActualStatus.forEach((obj: stepStatusEnum, index: number) => {\n              item.caseDetail.steps[index].actualStatus = obj || stepStatusEnum.PASS\n            })\n            item.stepActualResults.forEach((obj: string, index: number) => {\n              item.caseDetail.steps[index].actualResult = obj\n            })\n          })\n        })\n    },\n    getPlanDetail() {\n      testPlanApi.getTestCasePlanDetail(this.planId)\n        .then((data: any) => {\n          this.planStage = data.stage\n        })\n    },\n    handleSwitch() {\n      Object.assign(\n        this.caseFilter,\n        {executor: this.allCase ? undefined : this.$store.state.login.username}\n      )\n      this.getData()\n      this.allCase = !this.allCase\n    },\n    handleSearch(value?: string) {\n      this.currentPage = 1\n      this.getData(value)\n    },\n    handleRunTest(testCase?: typePlanData) {\n      if (!testCase) testCase = this.tableData[0]\n      this.$eventBus.$emit(\"testPlanCaseRun\", testCase, this.tableData, this)\n    },\n    handleSelectAll(selection: Object[]) {\n      if (selection.length > 0) {\n        this.tableData.forEach((item: any) => {\n          this.$set(item, \"isDisabled\", false)\n        })\n        this.selectRows = new Set(selection)\n      } else {\n        this.selectRows.clear()\n        this.tableData.forEach((row: any) => {\n          this.$set(row, \"isDisabled\", true)\n        })\n      }\n    },\n    handleSelectionChange(selection: Object[], row: any) {\n      if (selection.indexOf(row) === -1) {\n        this.$set(row, \"isDisabled\", true)\n      } else {\n        this.$set(row, \"isDisabled\", false)\n      }\n      this.selectRows = new Set(selection)\n    },\n    handleRelateCase() {\n      this.$refs.testCaseRelevance.open(this.condition, this.projId)\n    },\n    handleBatchEdit() {\n      this.$refs.batchEdit.open()\n    },\n    handleBatchUnRelate() {\n      this.handleDelete('', true)\n    },\n    batchEdit(editForm: any) {\n      let body: RequestUpdateTestCaseBatch = {\n        caseIds: this.caseIds,\n        planId: this.planId,\n        type: caseUpdateTypeEnum.UPDATE_PLAN_STATUS,\n      }\n      if (editForm.type === caseBatchEditEnum.EXECUTOR) {\n        body = Object.assign(body, {\n          type: caseUpdateTypeEnum.UPDATE_PLAN_EXECUTOR,\n          executor: editForm.value,\n        })\n      } else if (editForm.type === caseBatchEditEnum.RESULT) {\n        if (this.isQa) {\n          body = Object.assign(body, {\n            type: caseUpdateTypeEnum.UPDATE_PLAN_SMOKE_CHECK,\n            smokeCheck: editForm.value,\n          })\n        } else {\n          body = Object.assign(body, {\n            status: editForm.value,\n          })\n        }\n      }\n      testCaseApi.updateTestCaseBatch(body)\n        .then(() => {\n          this.refreshTable()\n        })\n    },\n    refreshTable() {\n      this.$emit('refresh')\n    },\n    handleDelete(row?: any, isBatch?: boolean) {\n      const msg = row || isBatch ? '确认取消关联测试用例?' : '确认取消全部关联测试用例?'\n      this.$alert(msg, '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            let body: RequestUpdateTestCasePlanCaseList = {\n              operation: planOperationEnum.REMOVE,\n              caseIds: isBatch ? this.caseIds : (row ? [row.caseId] : []),\n              projId: this.projId,\n              treeId: this.treeId,\n            }\n            testPlanApi.updateTestCasePlanCaseList(this.planId, body)\n              .then(() => {\n                this.refreshTable()\n              })\n          }\n        }\n      })\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.caseFilter, this.$route.path)\n      this.initTableData()\n    },\n    setReviewerOptions() {\n      this.condition.reviewerOptions = this.users\n    },\n    setProjectOptions() {\n      this.condition.projectOptions = this.treeNodes\n    },\n    setPriorityOptions() {\n      this.condition.priorityOptions = this.priorityOptions\n    },\n    setCaseTypeOptions() {\n      this.condition.caseTypeOptions = this.caseTypeOptions\n    },\n    setExecutorOptions() {\n      this.batchEditValueArr.executor = this.users\n    },\n    handleRowClick(row: any) {\n      this.$router.push({\n        name: PathName.TestTrackCaseReviewView,\n        params: {reviewId: row.id},\n      })\n    }\n  }\n}\n"],"sourceRoot":""}]}