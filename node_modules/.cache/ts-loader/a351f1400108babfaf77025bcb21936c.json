{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipeLine.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipeLine.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipeLine.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {coverageApi} from \"@/api\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport PipelineEdit from \"@/pages/coverage/components/PipelineEdit.vue\"\nimport {businessType, terminalType} from \"@/constant/Coverage\";\nimport {_filter} from \"@/common/utils\"\n// 业务线\nconst businessOptions = Object.entries(businessType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 端\nconst terminalOptions = Object.entries(terminalType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"PipeLine\",\n  components: {TableHeader, TablePagination, TableOperator, PipelineEdit, DialogFooter},\n  props: {},\n  data() {\n    return {\n      businessType: businessType,\n      terminalType: terminalType,\n      terminalOptions: terminalOptions,\n      businessOptions: businessOptions,\n      noPolling: true,\n      sonarFormVisible: false,\n      dialogFormVisible: false,\n      compareFormVisible: false,\n      condition: {},\n      total: 0,\n      pageSize: PAGINATION_SIZE.LARGE,\n      currentPage: 1,\n      searchName: '',\n      tableDatas: [],\n      commitForm: {\n        commitId: '',\n      },\n      compareForm: {\n        compareBranch: ''\n      },\n      commitRules: {commitId: [{required: true, message: '请输入commitId', trigger: 'blur'}]},\n      pipelineFilters: {}\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    table5BtnWidth() {\n      return variables['table5BtnWidth']\n    },\n  },\n\n  destroyed() {\n    clearInterval(this.myInterval)\n  },\n  mounted() {\n    this.pollingDataList()\n  },\n  methods: {\n    filter(filters: any) {\n      this.noPolling = true\n      this.currentPage = 1\n      _filter(filters, this.pipelineFilters, this.$route.path)\n      this.pollingDataList()\n    },\n    pipelineIcon(status?: string) {\n      if (status === 'success') {\n        return 'el-icon-circle-check iconSize success'\n      } else if (status === 'pending') {\n        return 'el-icon-video-pause iconSize pending'\n      } else if (status === 'running') {\n        return 'el-icon-loading iconSize running'\n      } else if (status === 'fail') {\n        return 'el-icon-circle-close iconSize fail'\n      } else if (status === 'skip') {\n        return 'el-icon-warning-outline iconSize skip'\n      }\n    },\n    getPipelineList(value?: string) {\n      const params = {\n        limit: this.pageSize,\n        offset: this.pageSize * (this.currentPage - 1),\n        name: value\n      }\n      this.pipelineFilters = sessionStorage.getItem(this.$route.path) || \"{}\"\n      this.pipelineFilters = JSON.parse(this.pipelineFilters)\n      // console.log('params', typeof this.pipelineFilters)\n      Object.assign(params, this.pipelineFilters)\n      this.$refs.pipelineTable.columns.forEach((item: any) => {\n        item.filteredValue = this.pipelineFilters[item.columnKey]\n      })\n      coverageApi.getPipelineList(params).then(res => {\n        this.tableDatas = res.data.data\n        this.tableDatas.forEach(function (item: any) {\n          item.visible = false\n          item.visible2 = false\n        })\n        this.total = res.data.total\n        this.noPolling = true\n      })\n    },\n    pollingDataList(value?: string) {\n      this.getPipelineList(value)\n      clearInterval(this.myInterval)\n      this.myInterval = window.setInterval(() => {\n        setTimeout(() => {\n          this.noPolling = false\n          this.getPipelineList(value)\n        }, 1)\n      }, 10000)\n    },\n    handlePollingDataList(value?: string) {\n      this.currentPage = 1\n      this.pollingDataList(value)\n    },\n    handleToBuildRecord(row?: any) {\n      this.$router.push({\n        name: PathName.PipelineBuildRecordByPipelineId,\n        params: {\n          pipelineId: row.id\n        }\n      })\n    },\n    handleAddOrEdit(pipeline?: any) {\n      this.$nextTick(function () {\n        // DOM 现在更新了\n        this.$refs.edit.open(pipeline)\n        // this.$eventBus.$emit('createOrUpdatePipeline', pipeline)\n      })\n\n    },\n    // 删除流水线\n    handleDelete(row?: any) {\n      this.$alert('确认删除流水线?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            coverageApi.deletePipeline(row.id).then(() => {\n                this.pollingDataList()\n              }\n            )\n          }\n        }\n      })\n    },\n    // 填写合并报告id\n    openMergeDialog(row?: any) {\n      this.compareForm.compareBranch = row.coverageParams.compareBranch\n      this.compareFormVisible = true\n        this.compareForm.row = row\n    },\n    // 触发覆盖率收集\n    handleTriggerCoverage() {\n      const params = {\n        pipelineId: this.compareForm.row.id,\n        projectGit: this.compareForm.row.coverageParams.projectGit,\n        compareBranch: this.compareForm.compareBranch\n      }\n      coverageApi.triggerCoverageDeploy(params)\n      this.compareFormVisible = false\n    },\n    // 填写发版commit\n    openCommitDialog(row?: any) {\n      this.dialogFormVisible = true\n      this.commitForm.row = row\n    },\n    // 触发服务端发版\n    handleTriggerDeployServe() {\n      this.$refs['commitForm'].validate((valid?: boolean) => {\n        if (valid) {\n          const params = {\n            projectName: this.commitForm.row.projectName,\n            pipelineId: this.commitForm.row.id,\n            commitId: this.commitForm.commitId\n          }\n          coverageApi.triggerServerDeploy(params).finally(() => this.dialogFormVisible = false)\n          coverageApi.triggerSonarBuild(params)\n        }else {\n          return false\n        }\n      })\n    },\n    // 填写sonar commit\n    openSonarDialog(row?: any) {\n      this.sonarFormVisible = true\n      this.commitForm.row = row\n    },\n    //triggerSonar\n    triggerSonar() {\n      this.$refs['sonarForm'].validate((valid?: boolean) => {\n        if (valid) {\n          const params = {\n            commitId: this.commitForm.commitId,\n            pipelineId: this.commitForm.row.id,\n          }\n          coverageApi.triggerSonarBuild(params).finally(() =>this.sonarFormVisible = false)\n        }else {\n          return false\n        }\n      })\n    },\n    handleToBuildConsole(row?: any, step?: string) {\n      this.$router.push({\n        name: PathName.PipelineBuildConsole,\n        params: {\n          pipelineId: row.id,\n          step: step,\n        }\n      })\n    },\n    handleToServerDeployHistory(row?: any) {\n      this.$router.push({\n        name: PathName.PipelineServerBuildRecordByPipelineId,\n        params: {\n          pipelineId: row.id\n        }\n      })\n    }\n  }\n}\n"],"sourceRoot":""}]}