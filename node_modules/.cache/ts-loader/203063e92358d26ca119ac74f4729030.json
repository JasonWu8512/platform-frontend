{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js??ref--14-2!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/auto.ts","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/api/auto.ts","mtime":1655949681742},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9faW1wb3J0RGVmYXVsdCA9IHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQgfHwgZnVuY3Rpb24gKG1vZCkgewogIHJldHVybiBtb2QgJiYgbW9kLl9fZXNNb2R1bGUgPyBtb2QgOiB7CiAgICAiZGVmYXVsdCI6IG1vZAogIH07Cn07CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgaW5kZXhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2FwaS9pbmRleCIpKTsKCnZhciB1cmxQcmVmaXggPSAndjEvYXV0by9jYXNlJzsKZXhwb3J0cy5kZWZhdWx0ID0gewogIC8vIOiOt+WPluagh+etvuWIl+ihqAogIGdldEF1dG9UYWdzOiBmdW5jdGlvbiBnZXRBdXRvVGFncyhwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6IHVybFByZWZpeCArICIvdGFnIiwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g6I635Y+W6Ieq5Yqo5YyW55So5L6L5qCRCiAgZ2V0QXV0b0Nhc2VzOiBmdW5jdGlvbiBnZXRBdXRvQ2FzZXMocGFyYW1zKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiB1cmxQcmVmaXggKyAiL3RyZWUiLAogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDojrflj5bphY3nva7pm4bliJfooagKICBnZXRBdXRvQ2FzZUNvbmZpZ0xpc3Q6IGZ1bmN0aW9uIGdldEF1dG9DYXNlQ29uZmlnTGlzdChwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6IHVybFByZWZpeCArICIvY29uZmlnIiwKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pOwogIH0sCiAgLy8g5Yib5bu65oiW57yW6L6R6Ieq5Yqo5YyW6YWN572uCiAgY3JlYXRlT3JFZGl0QXV0b0NvbmZpZzogZnVuY3Rpb24gY3JlYXRlT3JFZGl0QXV0b0NvbmZpZyhwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiB1cmxQcmVmaXggKyAiL2NvbmZpZyIsCiAgICAgIGRhdGE6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDliKDpmaToh6rliqjljJbphY3nva4KICBkZWxldGVBdXRvQ29uZmlnOiBmdW5jdGlvbiBkZWxldGVBdXRvQ29uZmlnKGlkKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZGVsZXRlJywKICAgICAgdXJsOiB1cmxQcmVmaXggKyAiL2NvbmZpZy8iICsgaWQKICAgIH0pOwogIH0sCiAgLy8g5omn6KGM6Ieq5Yqo5YyWY2FzZQogIHJ1bkF1dG9Db25maWc6IGZ1bmN0aW9uIHJ1bkF1dG9Db25maWcoaWQpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgdXJsOiB1cmxQcmVmaXggKyAiL2NvbmZpZy9ydW4vIiArIGlkCiAgICB9KTsKICB9LAogIC8vIOiOt+WPluaOpeWPo+iHquWKqOWMluaehOW7uuiusOW9lQogIGdldEF1dG9SdW5IaXN0b3J5OiBmdW5jdGlvbiBnZXRBdXRvUnVuSGlzdG9yeShwYXJhbXMpIHsKICAgIHJldHVybiBpbmRleF8xLmRlZmF1bHQoewogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICB1cmw6IHVybFByZWZpeCArICIvcnVuL2hpc3RvcnkiLAogICAgICBwYXJhbXM6IHBhcmFtcwogICAgfSk7CiAgfSwKICAvLyDojrflj5ZhbGx1cmUg5oql5ZGK5qaC6KeICiAgZ2V0QWxsdXJlUmVwb3J0OiBmdW5jdGlvbiBnZXRBbGx1cmVSZXBvcnQoaGlzdG9yeUlkKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiAiL3YxL2F1dG8vY2FzZS9hbGx1cmUvIiArIGhpc3RvcnlJZAogICAgfSk7CiAgfSwKICAvLyDojrflj5bnlKjkvothbGx1cmXor6bmg4UKICBnZXRBbGx1cmVEZXRhaWw6IGZ1bmN0aW9uIGdldEFsbHVyZURldGFpbChjYXNlVWlkKSB7CiAgICByZXR1cm4gaW5kZXhfMS5kZWZhdWx0KHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiB1cmxQcmVmaXggKyAiL2FsbHVyZS9kZXRhaWwvIiArIGNhc2VVaWQKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/api/auto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,IAAM,SAAS,GAAG,cAAlB;AACA,OAAA,CAAA,OAAA,GAAe;AACb;AACA,EAAA,WAAW,EAAX,qBAAY,MAAZ,EAA0B;AACxB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,MAFH;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GARY;AASb;AACA,EAAA,YAAY,EAAZ,sBAAa,MAAb,EAA2B;AACzB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,OAFH;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKH,GAhBc;AAiBb;AACA,EAAA,qBAAqB,EAArB,+BAAsB,MAAtB,EAAoC;AAClC,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,SAFH;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GAxBY;AAyBb;AACA,EAAA,sBAAsB,EAAtB,gCAAuB,MAAvB,EAAqC;AACnC,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,MADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,SAFH;AAGd,MAAA,IAAI,EAAE;AAHQ,KAAT,CAAP;AAKD,GAhCY;AAiCb;AACA,EAAA,gBAAgB,EAAhB,0BAAiB,EAAjB,EAA2B;AACzB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,QADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,UAAT,GAAoB;AAFd,KAAT,CAAP;AAID,GAvCY;AAwCb;AACA,EAAA,aAAa,EAAb,uBAAc,EAAd,EAAwB;AACtB,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,MADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,cAAT,GAAwB;AAFlB,KAAT,CAAP;AAID,GA9CY;AA+Cb;AACA,EAAA,iBAAiB,EAAjB,2BAAkB,MAAlB,EAAgC;AAC9B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,cAFH;AAGd,MAAA,MAAM,EAAE;AAHM,KAAT,CAAP;AAKD,GAtDY;AAuDb;AACA,EAAA,eAAe,EAAf,yBAAgB,SAAhB,EAAiC;AAC/B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAE,0BAAwB;AAFf,KAAT,CAAP;AAID,GA7DY;AA8Db;AACA,EAAA,eAAe,EAAf,yBAAgB,OAAhB,EAA+B;AAC7B,WAAO,OAAA,CAAA,OAAA,CAAS;AACd,MAAA,MAAM,EAAE,KADM;AAEd,MAAA,GAAG,EAAK,SAAS,GAAA,iBAAT,GAA2B;AAFrB,KAAT,CAAP;AAID;AApEY,CAAf","sourcesContent":["import instance from '@/api/index'\n\nconst urlPrefix = 'v1/auto/case'\nexport default {\n  // 获取标签列表\n  getAutoTags(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/tag`,\n      params: params\n    })\n  },\n  // 获取自动化用例树\n  getAutoCases(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/tree`,\n      params: params\n    })\n},\n  // 获取配置集列表\n  getAutoCaseConfigList(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/config`,\n      params: params\n    })\n  },\n  // 创建或编辑自动化配置\n  createOrEditAutoConfig(params: Object) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/config`,\n      data: params\n    })\n  },\n  // 删除自动化配置\n  deleteAutoConfig(id: string) {\n    return instance({\n      method: 'delete',\n      url: `${urlPrefix}/config/${id}`\n    })\n  },\n  // 执行自动化case\n  runAutoConfig(id: string) {\n    return instance({\n      method: 'post',\n      url: `${urlPrefix}/config/run/${id}`\n    })\n  },\n  // 获取接口自动化构建记录\n  getAutoRunHistory(params: Object) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/run/history`,\n      params: params\n    })\n  },\n  // 获取allure 报告概览\n  getAllureReport(historyId: string) {\n    return instance({\n      method: 'get',\n      url: `/v1/auto/case/allure/${historyId}`,\n    })\n  },\n  // 获取用例allure详情\n  getAllureDetail(caseUid: string) {\n    return instance({\n      method: 'get',\n      url: `${urlPrefix}/allure/detail/${caseUid}`\n    })\n  }\n\n\n}\n"],"sourceRoot":""}]}