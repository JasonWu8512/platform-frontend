{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipelineBuildRecord.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipelineBuildRecord.vue","mtime":1660704185802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHtjb3ZlcmFnZUFwaX0gZnJvbSAiQC9hcGkiCmltcG9ydCBUYWJsZVBhZ2luYXRpb24gZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9wYWdpbmF0aW9uL1RhYmxlUGFnaW5hdGlvbi52dWUiCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIKaW1wb3J0IHtQQUdJTkFUSU9OX1NJWkV9IGZyb20gIkAvY29uc3RhbnQiCgpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJQaXBlbGluZUJ1aWxkUmVjb3JkIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZGl0aW9uOiB7fSwKICAgICAgdG90YWw6IDAsCiAgICAgIHBhZ2VTaXplOiBQQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICB1c2VyUGlwZWxpbmVJZDogdHJ1ZSwKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHtUYWJsZVBhZ2luYXRpb24sIFRhYmxlSGVhZGVyfSwKICBjb21wdXRlZDogewogICAgcGlwZWxpbmVJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtcy5waXBlbGluZUlkID8gdGhpcy4kcm91dGUucGFyYW1zLnBpcGVsaW5lSWQgOiAnJwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QnVpbGRSZWNvcmQoKQogIH0sCiAgbWV0aG9kczogewogICAgdGFnVHlwZShyb3c6IGFueSl7CiAgICAgIGlmIChyb3cuYnVpbGRTdGF0dXMgPT09ICdzdWNjZXNzJykgewogICAgICAgIHJldHVybiAnc3VjY2VzcycKICAgICAgfWVsc2UgaWYocm93LmJ1aWxkU3RhdHVzID09PSAncnVubmluZycpIHsKICAgICAgICByZXR1cm4gJ2luZm8nCiAgICAgIH1lbHNlIGlmKHJvdy5idWlsZFN0YXR1cyA9PT0gJ3BlbmRpbmcnKSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH1lbHNlIGlmKHJvdy5idWlsZFN0YXR1cyA9PT0gJ2ZhaWwnKSB7CiAgICAgICAgcmV0dXJuICdkYW5nZXInCiAgICAgIH0KICAgIH0sCiAgICBnZXRCdWlsZFJlY29yZCh2YWx1ZT86IHN0cmluZykgewogICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgb2Zmc2V0OiB0aGlzLnBhZ2VTaXplICogKHRoaXMuY3VycmVudFBhZ2UgLSAxKSwKICAgICAgICBsaW1pdDogdGhpcy5wYWdlU2l6ZSwKICAgICAgICBwaXBlbGluZU5hbWU6IHZhbHVlLAogICAgICAgIHBpcGVsaW5lSWQ6IHRoaXMucGlwZWxpbmVJZAogICAgICB9CiAgICAgIGNvdmVyYWdlQXBpLmdldEplbmtpbnNUYXNrc0hpc3RvcnkocGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLnRvdGFsCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlR2V0QnVpbGRSZWNvcmQodmFsdWU/OiBzdHJpbmcpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDEKICAgICAgdGhpcy5nZXRCdWlsZFJlY29yZCh2YWx1ZSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["PipelineBuildRecord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PipelineBuildRecord.vue","sourceRoot":"src/pages/coverage","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    create-tip=\"创建流水线\"\n                    placeholder=\"根据流水线名称搜索\"\n                    :showCreate=\"false\"\n                    :showSearch=\"pipelineId === ''\"\n                    @search=\"handleGetBuildRecord\"\n      >\n        <template slot=\"title\">\n          <div>覆盖率构建记录</div>\n        </template>\n      </table-header>\n\n    </template>\n<!--    <div slot=\"header\" class=\"title\">-->\n<!--      <span>流水线构建记录</span>-->\n<!--    </div>-->\n    <el-table :data=\"tableData\" size=\"medium\">\n      <el-table-column prop=\"id\" label=\"构建id\"/>\n      <el-table-column prop=\"pipelineName\" label=\"流水线名称\"/>\n      <el-table-column prop=\"username\" label=\"触发者\"/>\n      <el-table-column prop=\"createdAt\" label=\"构建时间\">\n        <template v-slot:default=\"scope\">\n          <span>{{new Date(scope.row.createdAt).format('yyyy-MM-dd hh:mm:ss')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"endCommit\" label=\"构建分支\"/>\n      <el-table-column prop=\"compareBranch\" label=\"对比分支\"/>\n      <el-table-column prop=\"buildStatus\" label=\"构建状态\">\n        <template v-slot:default=\"scope\">\n          <el-tag :type=\"tagType(scope.row)\" effect=\"dark\">{{scope.row.statusChinese}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"增量覆盖率报告\">\n        <template slot-scope=\"scope\">\n          <el-link :href=\"scope.row['diffCoverageReport']\" type=\"danger\" target=\"_blank\">{{scope.row['diffCoverageReport'] ? scope.row['endCommit'] + \"增量报告\": null}}</el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"全量覆盖率报告\">\n        <template slot-scope=\"scope\">\n          <el-link :href=\"scope.row['fullCoverageReport']\" type=\"primary\" target=\"_blank\">{{scope.row['fullCoverageReport'] ? scope.row['endCommit'] + \"全量报告\": null}}</el-link>\n        </template>\n      </el-table-column>\n    </el-table>\n    <table-pagination\n      :change=\"getBuildRecord\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi} from \"@/api\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\n\nexport default {\nname: \"PipelineBuildRecord\",\n  data() {\n    return {\n      condition: {},\n      total: 0,\n      pageSize: PAGINATION_SIZE.LARGE,\n      currentPage: 1,\n      tableData: [],\n      userPipelineId: true,\n    }\n  },\n  components: {TablePagination, TableHeader},\n  computed: {\n    pipelineId() {\n      return this.$route.params.pipelineId ? this.$route.params.pipelineId : ''\n    }\n  },\n  mounted() {\n    this.getBuildRecord()\n  },\n  methods: {\n    tagType(row: any){\n      if (row.buildStatus === 'success') {\n        return 'success'\n      }else if(row.buildStatus === 'running') {\n        return 'info'\n      }else if(row.buildStatus === 'pending') {\n        return ''\n      }else if(row.buildStatus === 'fail') {\n        return 'danger'\n      }\n    },\n    getBuildRecord(value?: string) {\n      const params = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        pipelineName: value,\n        pipelineId: this.pipelineId\n      }\n      coverageApi.getJenkinsTasksHistory(params).then(res => {\n        this.tableData = res.data.data\n        this.total = res.data.total\n      })\n    },\n    handleGetBuildRecord(value?: string) {\n      this.currentPage = 1\n      this.getBuildRecord(value)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}