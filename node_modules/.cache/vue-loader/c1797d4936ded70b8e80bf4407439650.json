{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/components/BuildConsole.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/components/BuildConsole.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Y292ZXJhZ2VBcGl9IGZyb20gIkAvYXBpIjsKCmV4cG9ydCBkZWZhdWx0IHsKbmFtZTogImJ1aWxkQ29uc29sZSIsCiAgY29tcHV0ZWQ6ewogICAgcGlwZWxpbmVJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtcy5waXBlbGluZUlkCiAgICB9LAogICAgc3RlcCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtcy5zdGVwID8gdGhpcy4kcm91dGUucGFyYW1zLnN0ZXAgOiAnJwogICAgfQogIH0sCiAgZGF0YSgpIHsKICByZXR1cm4gewogICAgY29uc29sZVRleHQ6ICcnLAogICAgaXNCdWlsZGluZzogdHJ1ZSwKICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5Qb2xpbmdHZXRDb25zb2xlT3V0cHV0KCkKICB9LAogIGRlc3Ryb3llZCgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5teUludGVydmFsKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEJ1aWxkQ29uc29sZSgpewogICAgICBpZiAodGhpcy5zdGVwID09PSAnZGVwbG95JykgewogICAgICAgIGNvdmVyYWdlQXBpLmdldFBpcGVsaW5lRGVwbG95Q29uc29sZSh0aGlzLnBpcGVsaW5lSWQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIHRoaXMuY29uc29sZVRleHQgPSByZXMuZGF0YS50ZXh0CiAgICAgICAgICB0aGlzLmlzQnVpbGRpbmcgPSByZXMuZGF0YS5pc0J1aWxkaW5nCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICBjb3ZlcmFnZUFwaS5nZXRQaXBlbGluZUNvdmVyYWdlQ29uc29sZSh0aGlzLnBpcGVsaW5lSWQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIHRoaXMuY29uc29sZVRleHQgPSByZXMuZGF0YS50ZXh0CiAgICAgICAgICB0aGlzLmlzQnVpbGRpbmcgPSByZXMuZGF0YS5pc0J1aWxkaW5nCiAgICAgICAgfSkKICAgICAgfQogICAgICBpZiAodGhpcy5pc0J1aWxkaW5nID09PSBmYWxzZSl7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLm15SW50ZXJ2YWwpOwogICAgICB9CiAgICB9LAogICAgUG9saW5nR2V0Q29uc29sZU91dHB1dCgpIHsKICAgICAgdGhpcy5nZXRCdWlsZENvbnNvbGUoKTsKICAgICAgLy8g5q+PM+enkui9ruivouiOt+WPluaXpeW/lwogICAgICB0aGlzLm15SW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgdGhpcy5nZXRCdWlsZENvbnNvbGUoKQogICAgICAgIH0sIDEpCiAgICAgIH0sIDMwMDApCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["BuildConsole.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BuildConsole.vue","sourceRoot":"src/pages/coverage/components","sourcesContent":["<template>\n  <div style=\"background-color: #000000; color: #ffffff\">\n    <div style=\"font-size: 2em; font-weight: bold;\">#{{step}} Console Output</div>\n    <pre class=\"console-text\">\n      <code>{{consoleText}}</code>\n    </pre>\n    <i class=\"el-icon-loading\" style=\"font-size: 18px; margin-top: 4px;\" v-if=\"isBuilding\"></i>\n  </div>\n</template>\n\n<script>\nimport {coverageApi} from \"@/api\";\n\nexport default {\nname: \"buildConsole\",\n  computed:{\n    pipelineId() {\n      return this.$route.params.pipelineId\n    },\n    step() {\n      return this.$route.params.step ? this.$route.params.step : ''\n    }\n  },\n  data() {\n  return {\n    consoleText: '',\n    isBuilding: true,\n  }\n  },\n  mounted() {\n    this.PolingGetConsoleOutput()\n  },\n  destroyed() {\n    clearInterval(this.myInterval);\n  },\n  methods: {\n    getBuildConsole(){\n      if (this.step === 'deploy') {\n        coverageApi.getPipelineDeployConsole(this.pipelineId).then(res => {\n          this.consoleText = res.data.text\n          this.isBuilding = res.data.isBuilding\n        })\n      } else {\n        coverageApi.getPipelineCoverageConsole(this.pipelineId).then(res => {\n          this.consoleText = res.data.text\n          this.isBuilding = res.data.isBuilding\n        })\n      }\n      if (this.isBuilding === false){\n        clearInterval(this.myInterval);\n      }\n    },\n    PolingGetConsoleOutput() {\n      this.getBuildConsole();\n      // 每3秒轮询获取日志\n      this.myInterval = window.setInterval(() => {\n        setTimeout(() => {\n          this.getBuildConsole()\n        }, 1)\n      }, 3000)\n    },\n  },\n}\n</script>\n\n<style scoped>\n.console-text {\n  text-align: left;\n  background-color: #2b2b2b;\n  color: #e9eded;\n  padding: 10px 20px;\n  white-space: pre-wrap;\n}\n\n</style>\n"]}]}