{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/report/components/AllureReportBar.vue?vue&type=style&index=0&id=04e765d7&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/report/components/AllureReportBar.vue","mtime":1655949681804},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgInNyYy9hc3NldHMvY3NzL2NvbG9yIjsKCi5jYXNlLWZhaWxlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1mYWlsZWQ7Cn0KCi5jYXNlLWJyb2tlbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1icm9rZW47Cn0KCi5jYXNlLXBhc3NlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1wYXNzZWQ7Cn0KCi5jYXNlLXNraXBwZWQgewogIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1zdGF0dXMtc2tpcHBlZDsKfQouY2FzZS1zdGF0dXMgewogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIG1hcmdpbjogMCAzcHg7CiAgZm9udC1zaXplOiAxMnB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgaGVpZ2h0OiAxOHB4OwogIC8vZGlzcGxheTogZmxleDsKICAvL2FsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmNhc2UtdW5rbm93biB7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy11bmtub3duOwp9Cg=="},{"version":3,"sources":["AllureReportBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllureReportBar.vue","sourceRoot":"src/pages/track/plan/view/comonents/report/components","sourcesContent":["<template>\n  <div>\n    <div slot=\"bar\" style=\"display: flex; border-radius: 4px; overflow: hidden;\" v-if=\"showBar\">\n      <div v-if=\"statistic.failed\" :style=\"barStyle(statistic.failed)\" class=\"case-failed\">\n        {{ statistic.failed }}\n      </div>\n      <div v-if=\"statistic.broken\" :style=\"barStyle(statistic.broken)\" class=\"case-broken\">\n        {{ statistic.broken }}\n      </div>\n      <div v-if=\"statistic.passed\" :style=\"barStyle(statistic.passed)\" class=\"case-passed\">\n        {{ statistic.passed }}\n      </div>\n      <div v-if=\"statistic.skipped\" :style=\"barStyle(statistic.skipped)\" class=\"case-skipped\">\n        {{ statistic.skipped }}\n      </div>\n      <div v-if=\"statistic.unknown\" :style=\"barStyle(statistic.unknown)\" class=\"case-unknown\">\n        {{ statistic.unknown }}\n      </div>\n    </div>\n    <div v-if=\"showTag\" style=\"display: flex; align-items: center;\">\n      <el-tag class=\"case-failed case-status\" size=\"mini\" v-if=\"statistic.failed\">{{ statistic.failed }}</el-tag>\n      <el-tag class=\"case-broken case-status\" size=\"mini\" v-if=\"statistic.broken\">{{ statistic.broken }}</el-tag>\n      <el-tag class=\"case-passed case-status\" size=\"mini\" v-if=\"statistic.passed\">{{ statistic.passed }}</el-tag>\n      <el-tag class=\"case-skipped case-status\" size=\"mini\" v-if=\"statistic.skipped\">{{ statistic.skipped }}</el-tag>\n      <el-tag class=\"case-unknown case-status\" size=\"mini\" v-if=\"statistic.unknown\">{{ statistic.unknown }}</el-tag>\n    </div>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: \"AllureReportBar\",\n  props: {\n    statistic: Object,\n    showTag: {type: Boolean, default: false},\n    showBar: {type: Boolean, default: true}\n  },\n  computed: {\n    barStyle() {\n      return function (grow) {\n        return `flex-grow: ${grow}; text-align: center; color: white;`\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/color\";\n\n.case-failed {\n  background-color: $color-status-failed;\n}\n\n.case-broken {\n  background-color: $color-status-broken;\n}\n\n.case-passed {\n  background-color: $color-status-passed;\n}\n\n.case-skipped {\n  background-color: $color-status-skipped;\n}\n.case-status {\n  color: white;\n  border: none;\n  border-radius: 3px;\n  margin: 0 3px;\n  font-size: 12px;\n  font-weight: 600;\n  height: 18px;\n  //display: flex;\n  //align-items: center;\n}\n.case-unknown {\n  background-color: $color-status-unknown;\n}\n</style>\n"]}]}