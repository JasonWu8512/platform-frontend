{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/BatchMove.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/BatchMove.vue","mtime":1655949681780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKaW1wb3J0IHt0eXBlTm9kZX0gZnJvbSAiQC9hcGkvdHlwZXMvdGVzdFRyYWNrVHlwZSIKaW1wb3J0IERpYWxvZ0Zvb3RlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL0RpYWxvZ0Zvb3Rlci52dWUiCmltcG9ydCBOb2RlVHJlZSBmcm9tICJAL3BhZ2VzL3RyYWNrL2NvbW1vbi9Ob2RlVHJlZS52dWUiCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkJhdGNoTW92ZSIsCiAgY29tcG9uZW50czogewogICAgTm9kZVRyZWUsCiAgICBEaWFsb2dGb290ZXIKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmVlTm9kZXM6IFtdLAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgY3VycmVudEtleTogIiIsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvcGVuKHRyZWVOb2RlczogdHlwZU5vZGVbXSkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICAgIHRoaXMudHJlZU5vZGVzID0gdHJlZU5vZGVzCiAgICB9LAogICAgc2F2ZSgpIHsKICAgICAgaWYgKCF0aGlzLmN1cnJlbnRLZXkpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+mAieaLqeaooeWdlycpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgiYmF0Y2hNb3ZlIiwgdGhpcy5jdXJyZW50S2V5KTsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgbm9kZUNsaWNrKG5vZGU6IHR5cGVOb2RlKSB7CiAgICAgIHRoaXMuY3VycmVudEtleSA9IG5vZGUuaWQKICAgIH0KICB9Cn0K"},{"version":3,"sources":["BatchMove.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BatchMove.vue","sourceRoot":"src/pages/track/case/components","sourcesContent":["<template>\n  <el-dialog\n    :destroy-on-close=\"true\"\n    :visible.sync=\"dialogVisible\"\n    title=\"请选择用例目录\"\n    width=\"20%\"\n  >\n    <node-tree :disabled=\"true\" :tree-nodes.sync=\"treeNodes\" @nodeSelectEvent=\"nodeClick\"/>\n    <template slot=\"footer\">\n      <dialog-footer @cancel=\"dialogVisible = false\" @confirm=\"save\"/>\n    </template>\n  </el-dialog>\n</template>\n\n<script lang=\"ts\">\nimport {typeNode} from \"@/api/types/testTrackType\"\nimport DialogFooter from \"@/common/components/DialogFooter.vue\"\nimport NodeTree from \"@/pages/track/common/NodeTree.vue\"\n\nexport default {\n  name: \"BatchMove\",\n  components: {\n    NodeTree,\n    DialogFooter\n  },\n  data() {\n    return {\n      treeNodes: [],\n      dialogVisible: false,\n      currentKey: \"\",\n    }\n  },\n  methods: {\n    open(treeNodes: typeNode[]) {\n      this.dialogVisible = true\n      this.treeNodes = treeNodes\n    },\n    save() {\n      if (!this.currentKey) {\n        this.$message.warning('请选择模块')\n        return\n      }\n      this.$emit(\"batchMove\", this.currentKey);\n      this.dialogVisible = false;\n    },\n    nodeClick(node: typeNode) {\n      this.currentKey = node.id\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.node-title {\n  width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1 1 auto;\n  padding: 0 5px;\n  overflow: hidden;\n}\n\n</style>\n"]}]}