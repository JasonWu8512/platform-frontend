{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/common/NodeTree.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/common/NodeTree.vue","mtime":1655949681782},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7dGVzdENhc2VBcGl9IGZyb20gIkAvYXBpIgppbXBvcnQge3R5cGVOb2RlfSBmcm9tICJAL2FwaS90eXBlcy90ZXN0VHJhY2tUeXBlIgppbXBvcnQge1BhdGhOYW1lfSBmcm9tICJAL2NvbnN0YW50L3JvdXRlRGF0YSIKaW1wb3J0IHtvcGVyYXRpb25FbnVtfSBmcm9tICJAL2NvbnN0YW50L1Rlc3RDYXNlIgppbXBvcnQgTm9kZUVkaXQgZnJvbSAiQC9wYWdlcy90cmFjay9jb21tb24vTm9kZUVkaXQudnVlIgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJOb2RlVHJlZSIsCiAgY29tcG9uZW50czoge05vZGVFZGl0fSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlcmF0aW9uRW51bTogb3BlcmF0aW9uRW51bSwKICAgICAgZXhwYW5kZWROb2RlOiBbXSwKICAgICAgZmlsdGVyVGV4dDogIiIsCiAgICB9CiAgfSwKICBwcm9wczogewogICAgdHJlZU5vZGVzOiBBcnJheSwKICAgIGN1cnJlbnROb2RlOiBPYmplY3QsCiAgICBjdXJyZW50UHJvamVjdDogT2JqZWN0LAogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG9wZXJhdGlvbkVudW0uVklFVwogICAgfSwKICAgIGRyYWdnYWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBmaWx0ZXJUZXh0KHZhbDogYW55KSB7CiAgICAgIHRoaXMuJHJlZnMudHJlZS5maWx0ZXIodmFsKQogICAgfSwKICAgIHRyZWVOb2RlcygpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudE5vZGUuaWQpIHsKICAgICAgICAvLyBET03liqDovb3lrozmiJDlho3miafooYzkuIvkuIDmraXmk43kvZwKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICB0aGlzLmhhbmRsZU5vZGVTZWxlY3QodGhpcy4kcmVmcy50cmVlLmdldE5vZGUodGhpcy5jdXJyZW50Tm9kZS5pZCksIHRoaXMuY3VycmVudE5vZGUpCiAgICAgICAgfSkKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVtb3ZlKGRhdGE6IHsgbmFtZTogc3RyaW5nOyBpZDogc3RyaW5nIH0pIHsKICAgICAgdGhpcy4kYWxlcnQoCiAgICAgICAgYOehruiupOWIoOmZpOaooeWdlzogJHtkYXRhLm5hbWV977yM5Lul5Y+K5qih5Z2X5LiL5omA5pyJ5a2Q5qih5Z2X5ZKM5rWL6K+V55So5L6L77yM6K+E5a6h5Y+K5rWL6K+V6K6h5YiS5YWz6IGU55qE55So5L6L77yfYCwKICAgICAgICAiIiwKICAgICAgICB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICBjYWxsYmFjazogKGFjdGlvbjogc3RyaW5nKSA9PiB7CiAgICAgICAgICAgIGlmIChhY3Rpb24gPT09ICJjb25maXJtIikgewogICAgICAgICAgICAgIHRlc3RDYXNlQXBpLmRlbGV0ZVRlc3RDYXNlTW9kdWxlcyhkYXRhLmlkKQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCJyZWZyZXNoTm9kZSIpCiAgICAgICAgICAgICAgICAgIC8vIOa4hemZpOW9k+WJjemAieaLqeiKgueCuQogICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6Y3VycmVudE5vZGUiLCB7fSkKICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICAgIG5hbWU6IFBhdGhOYW1lLlRlc3RUcmFja1Rlc3RjYXNlUHJvamVjdCwKICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtwcm9qZWN0SWQ6IHRoaXMuY3VycmVudFByb2plY3QuaWR9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApCiAgICB9LAogICAgaGFuZGxlTm9kZVNlbGVjdChub2RlOiB0eXBlTm9kZSwgZGF0YTogeyBpZDogc3RyaW5nIH0pIHsKICAgICAgaWYgKG5vZGUpIHsKICAgICAgICBsZXQgcE5vZGVzOiB0eXBlTm9kZVtdID0gW10KICAgICAgICB0aGlzLmdldFBhcmVudE5vZGVzKG5vZGUsIHBOb2RlcykKICAgICAgICB0aGlzLmV4cGFuZGVkTm9kZS5wdXNoKGRhdGEuaWQpCiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldEN1cnJlbnRLZXkoZGF0YS5pZCkKICAgICAgICB0aGlzLiRlbWl0KCJub2RlU2VsZWN0RXZlbnQiLCBkYXRhLCBwTm9kZXMsIG5vZGUpCiAgICAgIH0KICAgIH0sCiAgICBnZXRQYXJlbnROb2RlcyhjdXJyZW50Tm9kZTogdHlwZU5vZGUsIHBOb2RlczogdHlwZU5vZGVbXSkgewogICAgICBpZiAoY3VycmVudE5vZGUubGV2ZWwgJiYgY3VycmVudE5vZGUubGV2ZWwgIT09IDEpIHsKICAgICAgICB0aGlzLmdldFBhcmVudE5vZGVzKGN1cnJlbnROb2RlLnBhcmVudCwgcE5vZGVzKQogICAgICB9CiAgICAgIGlmIChjdXJyZW50Tm9kZS5kYXRhICYmIGN1cnJlbnROb2RlLmRhdGEuaWQgIT09ICIiKSB7CiAgICAgICAgcE5vZGVzLnB1c2goY3VycmVudE5vZGUuZGF0YSkKICAgICAgfQogICAgfSwKICAgIGZpbHRlck5vZGUodmFsdWU6IHN0cmluZywgZGF0YTogeyBuYW1lOiBzdHJpbmcgfSkgewogICAgICBpZiAoIXZhbHVlKSByZXR1cm4gdHJ1ZQogICAgICByZXR1cm4gZGF0YS5uYW1lLmluZGV4T2YodmFsdWUpICE9PSAtMQogICAgfSwKICAgIG9wZW5FZGl0Tm9kZURpYWxvZyh0eXBlOiBvcGVyYXRpb25FbnVtLCBkYXRhPzogdHlwZU5vZGUpIHsKICAgICAgdGhpcy4kcmVmcy5ub2RlRWRpdC5vcGVuKHR5cGUsIGRhdGEpCiAgICB9LAogICAgcmVmcmVzaE5vZGUoKSB7CiAgICAgIHRoaXMuJGVtaXQoInJlZnJlc2hOb2RlIikKICAgICAgdGhpcy4kZW1pdCgicmVmcmVzaFRhYmxlIikKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["NodeTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"NodeTree.vue","sourceRoot":"src/pages/track/common","sourcesContent":["<template>\n  <div>\n    <el-input v-model=\"filterText\" placeholder=\"搜索模块\" size=\"small\">\n      <el-button\n        v-if=\"type === operationEnum.EDIT && !disabled\"\n        slot=\"append\"\n        icon=\"el-icon-folder-add\"\n        @click=\"openEditNodeDialog(operationEnum.ADD)\"\n      />\n    </el-input>\n\n    <el-tree\n      ref=\"tree\"\n      :data=\"treeNodes\"\n      :default-expanded-keys=\"expandedNode\"\n      :draggable=\"draggable\"\n      :expand-on-click-node=\"false\"\n      :filter-node-method=\"filterNode\"\n      class=\"node-tree\"\n      highlight-current\n      node-key=\"id\"\n    >\n      <template slot-scope=\"{node, data}\">\n        <span class=\"custom-tree-node father\" @click=\"handleNodeSelect(node, data)\">\n          <span class=\"node-title\">\n            <i class=\"el-icon-folder node-icon\"/>\n            {{ data.name }}\n          </span>\n          <span v-if=\"type === operationEnum.EDIT && !disabled\" class=\"node-operate child\">\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"重命名\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i\n                class=\"el-icon-edit\"\n                @click.stop=\"openEditNodeDialog(operationEnum.EDIT, data)\"\n              />\n            </el-tooltip>\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"添加子模块\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i\n                class=\"el-icon-circle-plus-outline\"\n                @click.stop=\"openEditNodeDialog(operationEnum.ADD, data)\"\n              />\n            </el-tooltip>\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"删除\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i class=\"el-icon-delete\" @click.stop=\"remove(data)\"/>\n              </el-tooltip>\n          </span>\n        </span>\n      </template>\n    </el-tree>\n    <node-edit\n      ref=\"nodeEdit\"\n      :current-project=\"currentProject\"\n      :tree-nodes=\"treeNodes\"\n      @refreshNode=\"refreshNode\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {testCaseApi} from \"@/api\"\nimport {typeNode} from \"@/api/types/testTrackType\"\nimport {PathName} from \"@/constant/routeData\"\nimport {operationEnum} from \"@/constant/TestCase\"\nimport NodeEdit from \"@/pages/track/common/NodeEdit.vue\"\n\nexport default {\n  name: \"NodeTree\",\n  components: {NodeEdit},\n  data() {\n    return {\n      operationEnum: operationEnum,\n      expandedNode: [],\n      filterText: \"\",\n    }\n  },\n  props: {\n    treeNodes: Array,\n    currentNode: Object,\n    currentProject: Object,\n    type: {\n      type: String,\n      default: operationEnum.VIEW\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    filterText(val: any) {\n      this.$refs.tree.filter(val)\n    },\n    treeNodes() {\n      if (this.currentNode.id) {\n        // DOM加载完成再执行下一步操作\n        this.$nextTick(() => {\n          this.handleNodeSelect(this.$refs.tree.getNode(this.currentNode.id), this.currentNode)\n        })\n      }\n    }\n  },\n  methods: {\n    remove(data: { name: string; id: string }) {\n      this.$alert(\n        `确认删除模块: ${data.name}，以及模块下所有子模块和测试用例，评审及测试计划关联的用例？`,\n        \"\",\n        {\n          confirmButtonText: '确定',\n          showCancelButton: true,\n          cancelButtonText: '取消',\n          callback: (action: string) => {\n            if (action === \"confirm\") {\n              testCaseApi.deleteTestCaseModules(data.id)\n                .then(() => {\n                  this.$emit(\"refreshNode\")\n                  // 清除当前选择节点\n                  this.$emit(\"update:currentNode\", {})\n                  this.$router.push({\n                    name: PathName.TestTrackTestcaseProject,\n                    params: {projectId: this.currentProject.id}\n                  })\n                })\n            }\n          }\n        }\n      )\n    },\n    handleNodeSelect(node: typeNode, data: { id: string }) {\n      if (node) {\n        let pNodes: typeNode[] = []\n        this.getParentNodes(node, pNodes)\n        this.expandedNode.push(data.id)\n        this.$refs.tree.setCurrentKey(data.id)\n        this.$emit(\"nodeSelectEvent\", data, pNodes, node)\n      }\n    },\n    getParentNodes(currentNode: typeNode, pNodes: typeNode[]) {\n      if (currentNode.level && currentNode.level !== 1) {\n        this.getParentNodes(currentNode.parent, pNodes)\n      }\n      if (currentNode.data && currentNode.data.id !== \"\") {\n        pNodes.push(currentNode.data)\n      }\n    },\n    filterNode(value: string, data: { name: string }) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    openEditNodeDialog(type: operationEnum, data?: typeNode) {\n      this.$refs.nodeEdit.open(type, data)\n    },\n    refreshNode() {\n      this.$emit(\"refreshNode\")\n      this.$emit(\"refreshTable\")\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n@import \"src/assets/css/font\";\n\n.el-input {\n  margin-top: 15px;\n}\n\n.node-tree {\n  margin-top: 15px;\n}\n\n.custom-tree-node {\n  @extend %flex-between-center-row;\n  @extend %font-14;\n  padding-right: 8px;\n  width: 100%;\n}\n\n.father .child {\n  display: none;\n}\n\n.father:hover .child {\n  display: block;\n}\n\n.node-icon {\n  margin-right: 5px;\n}\n\n.node-title {\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.node-operate > i {\n  color: #409eff;\n  margin: 0 5px;\n}\n</style>\n"]}]}