{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/report/components/AllureReport.vue?vue&type=style&index=0&id=8a6b3568&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/report/components/AllureReport.vue","mtime":1686123457769},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAic3JjL2Fzc2V0cy9jc3MvY29sb3IiOwpAaW1wb3J0ICJzcmMvYXNzZXRzL2Nzcy9kaXNwbGF5IjsKCi5hbGx1cmUtdGl0bGUgewogIHBhZGRpbmc6IDE1cHggMTVweCAwOwogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBtYXgtaGVpZ2h0OiAyNTBweAp9CgouYWxsdXJlLXRpdGxlLWlubGluZSB7CiAgb3V0bGluZTogMnB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9CgouY2FzZS10b3RhbCB7CiAgZm9udC1zaXplOiA0OXB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzAwOTdhNwp9CgouY2FzZS1zdGF0dXMgewogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIG1hcmdpbjogMCAzcHg7Cn0KCi5jYXNlLWZhaWxlZCB7CiAgQGV4dGVuZCAuY2FzZS1zdGF0dXM7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1mYWlsZWQ7Cn0KCi5jYXNlLWJyb2tlbiB7CiAgQGV4dGVuZCAuY2FzZS1zdGF0dXM7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1icm9rZW47Cn0KCi5jYXNlLXBhc3NlZCB7CiAgQGV4dGVuZCAuY2FzZS1zdGF0dXM7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy1wYXNzZWQ7Cn0KCi5jYXNlLXNraXBwZWQgewogIEBleHRlbmQgLmNhc2Utc3RhdHVzOwogIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1zdGF0dXMtc2tpcHBlZDsKfQoKLmNhc2UtdW5rbm93biB7CiAgQGV4dGVuZCAuY2FzZS1zdGF0dXM7CiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXN0YXR1cy11bmtub3duOwp9CgoudGVzdC1zdWl0IHsKICBoZWlnaHQ6IDQwcHg7CiAgZm9udC1zaXplOiAxNHB4OwogIHBhZGRpbmc6IDAgMjBweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VjZWZmMTsKICAvLyBjdXJzb3I6IHBvaW50ZXI7CiAgQGV4dGVuZCAlZmxleC1sZWZ0LWNlbnRlci1yb3c7Cn0KCi50ZXN0LXN1aXQtbmFtZSB7CiAgQGV4dGVuZCAlZmxleC1sZWZ0LWNlbnRlci1yb3c7Cn0KCi50ZXN0LXN1aXQtc2hvdy1hbGwgewogIGhlaWdodDogNDBweDsKICBmb250LXNpemU6IDE2cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIEBleHRlbmQgJWZsZXgtY2VudGVyLXJvdzsKfQo="},{"version":3,"sources":["AllureReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AllureReport.vue","sourceRoot":"src/pages/track/plan/view/comonents/report/components","sourcesContent":["<template>\n  <div>\n    <common-component v-show=\"showSummary && historyId\" title=\"Allure Report\">\n      <!--构建整体统计数据  -->\n      <div class=\"allure-title\">\n        <div class=\"allure-title-inline\">\n          <div style=\"width: 50%\">\n            <div style=\"font-size: 1.5em;\">ALLURE REPORT {{ allureNowDate }}</div>\n            <div style=\"color: #a09a8e;\">{{ allureStart }} - {{ allureStop }} ({{ allureDuration }})</div>\n            <div style=\"padding: 28px 0; margin: auto;\">\n              <div class=\"case-total\">{{ allureTotalCase }}</div>\n              <div style=\"text-align: center; color: #a09a8e;\">test cases</div>\n            </div>\n          </div>\n          <div style=\"width: 50%; overflow: hidden;\">\n            <div id=\"chartPie\" :options=\"orgOptions\" style=\"height: 400px; width: 600px\"/>\n          </div>\n        </div>\n      </div>\n    </common-component>\n    <common-component v-show=\"showTestSuites && historyId\">\n      <template slot=\"header\">\n        <!--suit总数-->\n        <div style=\"display: flex; justify-content: space-between; background: #fff;\">\n          <div style=\"display: flex; align-items: flex-end;\">\n            <div style=\"margin-right: 5px;\">Test Suites</div>\n            <span style=\"color: #a09a8e;\">{{ allureTotalCase }} items total</span>\n          </div>\n          <div style=\"display: flex; align-items: center;\">\n            <el-tag class=\"case-failed\">{{ allureStatistic.failed }}</el-tag>\n            <el-tag class=\"case-broken\">{{ allureStatistic.broken }}</el-tag>\n            <el-tag class=\"case-passed\">{{ allureStatistic.passed }}</el-tag>\n            <el-tag class=\"case-skipped\">{{ allureStatistic.skipped }}</el-tag>\n            <el-tag class=\"case-unknown\">{{ allureStatistic.unknown }}</el-tag>\n          </div>\n        </div>\n      </template>\n      <div style=\"margin: -20px\">\n        <el-row v-for=\"(item, index) in suitCaseGroups\" :key=\"index\">\n          <div class=\"test-suit\">\n            <el-col :span=\"12\" class=\"test-suit-name\">{{ item.name }}</el-col>\n            <el-col :span=\"12\">\n              <allure-report-bar :statistic=\"item.statistic\"/>\n            </el-col>\n          </div>\n        </el-row>\n        <!-- <el-row class=\"test-suit-show-all\">\n          <div @click=\"getSuitCaseDetail()\">Show all</div>\n        </el-row> -->\n      </div>\n    </common-component>\n    <common-component>\n      <template slot=\"header\">\n        <div style=\"display: flex; justify-content: space-between; background: #fff;\">\n            <div style=\"display: flex; align-items: flex-end;\">\n              <div style=\"margin-right: 5px;\">Report Detail</div>\n            </div>\n        </div>\n      </template>\n      <div style=\"margin: -20px\">\n        <el-row class=\"test-suit-show-all\">\n          <div @click=\"getSuitCaseDetail()\">Show all</div>\n        </el-row>\n      </div>\n    </common-component>\n\n    <allure-report-detail ref=\"allureReportDetail\"/>\n  </div>\n\n</template>\n\n<script>\nimport {autoApi} from \"@/api\"\nimport {formatTime, goodDuration} from \"@/common/utils\"\nimport AllureReportBar from \"@/pages/track/plan/view/comonents/report/components/AllureReportBar\"\nimport AllureReportDetail from \"@/pages/track/plan/view/comonents/report/components/AllureReportDetail\"\nimport * as echarts from 'echarts'\nimport CommonComponent from \"./CommonComponent\"\n\n\nexport default {\n  name: \"AllureReport\",\n  components: {AllureReportDetail, AllureReportBar, CommonComponent},\n  props: {\n    historyId: {\n      type: String,\n      default: '',\n    },\n    showSummary: {\n      type: Boolean,\n      default: true\n    },\n    showTestSuites: {\n      type: Boolean,\n      default: true,\n    }\n  },\n  data() {\n    return {\n      // Allure title\n      allureNowDate: '',\n      allureStart: '',\n      allureStop: '',\n      allureDuration: '',\n      allureStatistic: {},\n      allureTotalCase: '',\n      allureSuccessRate: 0,\n\n      // suites\n      suitCaseGroups: [],\n      suitCaseDetails: [],\n      orgOptions: {},\n    }\n  },\n  created() {\n    this.getSummary()\n  },\n  watch: {\n    historyId() {\n      this.getSummary()\n    }\n  },\n  methods: {\n    initCharPie() {\n      let chartDom = document.getElementById('chartPie') \n      let myChart = echarts.init(chartDom)\n\n      this.orgOptions = {\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{c} tests ({d}%)<br/>{b}\"\n        },\n        graphic: {\n          type: 'text',\n          left: '25%',\n          top: '27%',\n          // z: 2,\n          // zlevel: 100,\n          style: {\n            text: this.allureSuccessRate + '%',\n            fontSize: 25\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            center: ['30%', '30%'],\n            radius: ['35%', '45%'],\n            avoidLabelOverlap: false, \n            hoverAnimation: true, \n            startAngle: 90,\n            label: {\n              normal: {\n                show: true,\n              },\n            },\n            data: [\n              {value: this.allureStatistic.failed, name: 'Failed', itemStyle: {color: '#fd5a3e'}},\n              {value: this.allureStatistic.broken, name: 'Broken', itemStyle: {color: '#ffd050'}},\n              {value: this.allureStatistic.passed, name: 'Passed', itemStyle: {color: '#97cc64'}},\n              {value: this.allureStatistic.skipped, name: 'Skipped', itemStyle: {color: '#aaa'}},\n              {value: this.allureStatistic.unknown, name: 'Unknown', itemStyle: {color: '#d35ebe'}}\n            ]\n          }\n        ]\n      };\n      myChart.setOption(this.orgOptions);\n    },\n    getSummary() {\n      // 获取用例执行一些信息\n      if (this.historyId) {\n        autoApi.getAllureReport(this.historyId)\n          .then((data) => {\n            // eslint-disable-next-line\n            this.allureDuration = goodDuration(data.summary.time.duration)\n            this.allureStart = formatTime(data.summary.time.start, 'hh:mm:ss')\n            this.allureStop = formatTime(data.summary.time.stop, 'hh:mm:ss')\n            this.allureNowDate = formatTime(data.summary.time.start, 'MM/dd/yyyy')\n            this.allureStatistic = data.summary.statistic\n            this.allureTotalCase = this.allureStatistic.total\n            this.suitCaseGroups = data.summary.suites.items\n            this.suitCaseDetails = data.suites.children\n            this.allureSuccessRate = Math.floor(this.allureStatistic.passed / this.allureStatistic.total * 10000) / 100\n            this.initCharPie()\n          })\n      }\n    },\n    getSuitCaseDetail(testSuit) {\n      this.$eventBus.$emit(\"allureReportDetail\", testSuit, this.suitCaseDetails, this)\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/color\";\n@import \"src/assets/css/display\";\n\n.allure-title {\n  padding: 15px 15px 0;\n  margin-bottom: 15px;\n  background: #fff;\n  max-height: 250px\n}\n\n.allure-title-inline {\n  outline: 2px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.case-total {\n  font-size: 49px;\n  text-align: center;\n  color: #0097a7\n}\n\n.case-status {\n  color: white;\n  border: none;\n  border-radius: 3px;\n  margin: 0 3px;\n}\n\n.case-failed {\n  @extend .case-status;\n  background-color: $color-status-failed;\n}\n\n.case-broken {\n  @extend .case-status;\n  background-color: $color-status-broken;\n}\n\n.case-passed {\n  @extend .case-status;\n  background-color: $color-status-passed;\n}\n\n.case-skipped {\n  @extend .case-status;\n  background-color: $color-status-skipped;\n}\n\n.case-unknown {\n  @extend .case-status;\n  background-color: $color-status-unknown;\n}\n\n.test-suit {\n  height: 40px;\n  font-size: 14px;\n  padding: 0 20px;\n  border-bottom: 1px solid #eceff1;\n  // cursor: pointer;\n  @extend %flex-left-center-row;\n}\n\n.test-suit-name {\n  @extend %flex-left-center-row;\n}\n\n.test-suit-show-all {\n  height: 40px;\n  font-size: 16px;\n  cursor: pointer;\n  @extend %flex-center-row;\n}\n</style>\n"]}]}