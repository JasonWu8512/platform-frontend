{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjects.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjects.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHtjb3ZlcmFnZUFwaX0gZnJvbSAiQC9hcGkiCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIKaW1wb3J0IFRhYmxlT3BlcmF0b3IgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSI7CmltcG9ydCB7UGF0aE5hbWV9IGZyb20gIkAvY29uc3RhbnQvcm91dGVEYXRhIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJHaXRMYWJQcm9qZWN0cyIsCiAgY29tcG9uZW50czoge1RhYmxlSGVhZGVyLCBUYWJsZU9wZXJhdG9yfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29uZGl0aW9uOiB7fSwKICAgICAgdGFibGVEYXRhOiBbXQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaGFuZGxlR2V0UHJvamVjdHMoJycpCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVHZXRQcm9qZWN0cyh2YWx1ZT86IHN0cmluZykgewogICAgICBjb3ZlcmFnZUFwaS5nZXRHaXRsYWJQcm9qZWN0cyh7c2VhcmNoOiB2YWx1ZX0pLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlcy5kYXRhCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlVG9CcmFuY2hlcyhyb3c/OiBhbnkpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWU6IFBhdGhOYW1lLkdpdExhYlByb2plY3RCcmFuY2hlcywKICAgICAgICBxdWVyeTogewogICAgICAgICAgcHJvamVjdElkOiByb3cuaWQsCiAgICAgICAgICBwcm9qZWN0TmFtZTogcm93LnBhdGhXaXRoTmFtZXNwYWNlCiAgICAgICAgfQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["GitLabProjects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GitLabProjects.vue","sourceRoot":"src/pages/coverage","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    placeholder=\"(每次搜索只返回20条数据，请输入更精准的project名称搜索)\"\n                    :showCreate=\"false\"\n                    :showSearch=\"true\"\n                    @search=\"handleGetProjects\"\n      >\n        <template slot=\"title\">\n          <div>GitLab Projects</div>\n        </template>\n      </table-header>\n\n    </template>\n    <!--    <div slot=\"header\" class=\"title\">-->\n    <!--      <span>流水线构建记录</span>-->\n    <!--    </div>-->\n    <el-table :data=\"tableData\" size=\"medium\" v-loading=\"loading\">\n      <el-table-column prop=\"pathWithNamespace\" label=\"name with group\"/>\n      <el-table-column prop=\"description\" label=\"描述\"/>\n      <el-table-column prop=\"createdAt\" label=\"创建时间\">\n        <template v-slot:default=\"scope\">\n          <span>{{new Date(scope.row.createdAt).format('yyyy-MM-dd')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            copy-tip=\"查看分支\"\n            show-copy\n            copyIcon=\"el-icon-share\"\n            @copyClick=\"handleToBranches(scope.row)\"\n          >\n          </table-operator>\n        </template>\n      </el-table-column>\n    </el-table>\n  </el-card>\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi} from \"@/api\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\";\nimport {PathName} from \"@/constant/routeData\";\nexport default {\n  name: \"GitLabProjects\",\n  components: {TableHeader, TableOperator},\n  data() {\n    return {\n      condition: {},\n      tableData: []\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  mounted() {\n    this.handleGetProjects('')\n  },\n  methods: {\n    handleGetProjects(value?: string) {\n      coverageApi.getGitlabProjects({search: value}).then(res => {\n        this.tableData = res.data\n      })\n    },\n    handleToBranches(row?: any) {\n      this.$router.push({name: PathName.GitLabProjectBranches,\n        query: {\n          projectId: row.id,\n          projectName: row.pathWithNamespace\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}