{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanRun.vue?vue&type=style&index=0&id=5407c646&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/comonents/TestCasePlanRun.vue","mtime":1655949681804},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhc3Qtcm93IHsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9CgouYm9yZGVyLWhpZGRlbiA+ID4gPiAuZWwtdGV4dGFyZWFfX2lubmVyIHsKICBib3JkZXItc3R5bGU6IGhpZGRlbjsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBjb2xvcjogIzYwNjI2NjsKfQoKLmNhc3QtbGFiZWwgewogIGNvbG9yOiBkaW1ncmF5Owp9Cgouc3RhdHVzLWJ1dHRvbiB7CiAgcGFkZGluZy1sZWZ0OiA0JTsKfQoKLmhlYWQtcmlnaHQgewogIHRleHQtYWxpZ246IHJpZ2h0Owp9CgouZWwtY29sOm5vdCgudGVzdC1kZXRhaWwpIHsKICBsaW5lLWhlaWdodDogNTBweDsKfQoKLmlzc3Vlcy1lZGl0ID4gPiA+IHAgewogIGxpbmUtaGVpZ2h0OiAxNnB4Owp9Cgouc3RhdHVzLWJ1dHRvbiB7CiAgZmxvYXQ6IHJpZ2h0Owp9CgouaGVhZC1yaWdodC10aXAgewogIGNvbG9yOiBkYXJrZ3JleTsKfQoKLmVsLXNjcm9sbGJhciB7CiAgaGVpZ2h0OiAxMDAlOwp9CgouY29udGFpbmVyIHsKICBoZWlnaHQ6IDEwMCU7CiAgbWFyZ2luOiAxNXB4Owp9CgouZWwtc3dpdGNoID4gPiA+IC5lbC1zd2l0Y2hfX2xhYmVsIHsKICBjb2xvcjogZGltZ3JheTsKfQoKLmVsLXN3aXRjaCA+ID4gPiAuZWwtc3dpdGNoX19sYWJlbC5pcy1hY3RpdmUgewogIGNvbG9yOiAjNDA5RUZGOwp9CgouY29udGFpbmVyID4gPiA+IC5lbC1jYXJkX19ib2R5IHsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA3MHB4KTsKfQoKLmVsLWRpdmlkZXJfX3RleHQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsKfQoK"},{"version":3,"sources":["TestCasePlanRun.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6XA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TestCasePlanRun.vue","sourceRoot":"src/pages/track/plan/view/comonents","sourcesContent":["<template>\n  <el-drawer\n    ref=\"drawer\"\n    :modal-append-to-body=\"false\"\n    :visible.sync=\"showDialog\"\n    :with-header=\"false\"\n    close-on-press-escape\n    size=\"100%\"\n  >\n    <el-alert\n      v-if=\"parent.isQa\"\n      :closable=\"false\"\n      center\n      effect=\"dark\"\n      title=\"当前处于测试验证模式\"\n      type=\"success\"\n    />\n\n    <el-card class=\"container\">\n\n      <el-row class=\"cast-row\">\n\n        <!--  返回按钮  -->\n        <el-col :span=\"1\">\n          <el-button icon=\"el-icon-back\" plain size=\"mini\" @click=\"cancel\">返回</el-button>\n        </el-col>\n\n        <!--  评审操作  -->\n        <el-col :span=\"22\" class=\"head-right\">\n\n          <span>上一条用例：</span>\n          <el-button\n            :disabled=\"index + offset+ 1 <= 1\"\n            :loading=\"loading\"\n            icon=\"el-icon-arrow-up\"\n            plain\n            size=\"mini\"\n            @click=\"handlePre\"\n          />\n          <span>{{ `${index + offset + 1}/${total}` }}</span>\n          <el-button\n            :disabled=\"index + offset+ 1 >= total\"\n            :loading=\"loading\"\n            icon=\"el-icon-arrow-down\"\n            plain\n            size=\"mini\"\n            @click=\"handleNext\"\n          />\n\n        </el-col>\n\n      </el-row>\n\n      <el-row>\n        <el-col>\n          <el-divider content-position=\"left\">{{ testCase.caseDetail.name }}</el-divider>\n        </el-col>\n      </el-row>\n\n      <el-row class=\"cast-row\">\n        <el-col :offset=\"1\" :span=\"4\">\n          <span class=\"cast-label\">用例等级：</span>\n          <priority-table-item :value=\"testCase.caseDetail.importance\" text/>\n        </el-col>\n        <el-col :span=\"5\">\n          <span class=\"cast-label\">用例类型：</span>\n          <case-type-table-item :value=\"testCase.caseDetail.caseType\"/>\n        </el-col>\n        <el-col :span=\"10\">\n          <test-plan-case-status-button\n            v-if=\"parent.isQa\"\n            :status=\"testCase.smokeCheck\"\n            @statusChange=\"saveCase\"\n          />\n          <test-plan-case-status-button v-else :status=\"testCase.status\" @statusChange=\"saveCase\"/>\n        </el-col>\n      </el-row>\n\n      <el-row class=\"cast-row\">\n        <el-col :offset=\"1\" :span=\"4\">\n          <span class=\"cast-label\">测试方式：</span>\n          <execution-type-table-item :value=\"testCase.caseDetail.executionType\"/>\n        </el-col>\n        <el-col :span=\"5\">\n          <span class=\"cast-label\">所属模块：</span>\n          <span>{{ testCase.treePath }}</span>\n        </el-col>\n        <el-col :span=\"4\">\n          <span class=\"cast-label\">所属项目：</span>\n          <span>{{ testCase.projName }}</span>\n        </el-col>\n      </el-row>\n\n      <el-row class=\"cast-row\">\n        <el-col :offset=\"1\">\n          <span class=\"cast-label\">前置条件：</span>\n          <span>{{ testCase.caseDetail.preconditions }}</span>\n        </el-col>\n      </el-row>\n\n      <el-row v-if=\"testCase.method === executionEnum.AUTO && testCase.testId\" class=\"cast-row\">\n        <el-col :offset=\"1\" :span=\"20\" class=\"test-detail\">\n          <el-tabs v-model=\"activeTab\" type=\"border-card\">\n            <el-tab-pane label=\"测试详情\" name=\"detail\">\n              <api-test-detail\n                v-if=\"testCase.caseType === caseTypeEnum.API\"\n                :id=\"testCase.testId\"\n                ref=\"apiTestDetail\"\n                :is-read-only=\"true\"\n              />\n              <performance-test-detail\n                v-else-if=\"testCase.caseType === caseTypeEnum.PERFORMANCE\"\n                :id=\"testCase.testId\"\n                ref=\"performanceTestDetail\"\n                :is-read-only=\"true\"\n              />\n            </el-tab-pane>\n          </el-tabs>\n        </el-col>\n      </el-row>\n\n      <el-row v-if=\"testCase.executionType !== executionEnum.AUTO\" class=\"cast-row\">\n        <el-col :offset=\"1\" :span=\"21\">\n          <div class=\"cast-label\">执行步骤：</div>\n          <el-table\n            :border=\"true\"\n            :data=\"testCase.caseDetail.steps\"\n            :default-sort=\"{prop: 'num', order: 'ascending'}\"\n            class=\"tb-edit\"\n            highlight-current-row\n            size=\"mini\"\n          >\n            <el-table-column label=\"编号\" min-width=\"5%\" prop=\"stepNumber\"/>\n\n            <el-table-column label=\"步骤描述\" min-width=\"21%\" prop=\"actions\">\n              <template slot-scope=\"scope\">\n                <el-input\n                  v-model=\"scope.row.actions\"\n                  :autosize=\"{ minRows: 1, maxRows: 4}\"\n                  :disabled=\"true\"\n                  class=\"border-hidden\"\n                  size=\"mini\"\n                  type=\"textarea\"\n                />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"预期结果\" min-width=\"21%\" prop=\"expectedresults\">\n              <template slot-scope=\"scope\">\n                <el-input\n                  v-model=\"scope.row.expectedresults\"\n                  :autosize=\"{ minRows: 1, maxRows: 4}\"\n                  class=\"border-hidden\"\n                  disabled\n                  size=\"mini\"\n                  type=\"textarea\"\n                />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"实际结果\" min-width=\"21%\">\n              <template slot-scope=\"scope\">\n                <el-input\n                  v-model=\"scope.row.actualResult\"\n                  :autosize=\"{ minRows: 2, maxRows: 4}\"\n                  :rows=\"2\"\n                  class=\"table-edit-input\"\n                  clearable\n                  placeholder=\"请输入内容\"\n                  size=\"mini\"\n                  type=\"textarea\"\n                />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"步骤执行结果\" min-width=\"12%\">\n              <template slot-scope=\"scope\">\n                <el-select\n                  v-model=\"scope.row.actualStatus\"\n                  size=\"mini\"\n                  @change=\"stepResultChange()\"\n                >\n                  <el-option\n                    v-for=\"item in stepStatusOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.text\"\n                    :value=\"item.value\"\n                  >\n                    <test-review-case-step-status :value=\"item.value\"/>\n                  </el-option>\n                </el-select>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-col>\n      </el-row>\n\n      <el-row class=\"cast-row\">\n        <el-col :offset=\"1\" :span=\"15\">\n          <div>\n            <span class=\"cast-label\">备注：</span>\n            <span v-if=\"!testCase.description\" style=\"color: darkgrey\">未填写</span>\n          </div>\n          <div>\n            <el-input\n              v-if=\"testCase.description\"\n              v-model=\"testCase.description\"\n              :rows=\"3\"\n              disabled\n              type=\"textarea\"\n            />\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n\n  </el-drawer>\n</template>\n\n<script lang=\"ts\">\nimport {testCaseApi} from \"@/api\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport {RequestUpdateTestCase} from \"@/api/types/testTrack\"\nimport {typeCaseStep} from \"@/api/types/testTrackType\"\nimport {caseTypeEnum, caseUpdateTypeEnum, executionEnum, stepStatusEnum, stepStatusType} from \"@/constant/TestCase\"\nimport {planResultEnum} from \"@/constant/TestPlan\"\nimport CaseTypeTableItem from \"@/pages/track/common/tableItems/CaseTypeTableItem.vue\"\nimport ExecutionTypeTableItem from \"@/pages/track/common/tableItems/ExecutionTypeTableItem.vue\"\nimport PriorityTableItem from \"@/pages/track/common/tableItems/PriorityTableItem.vue\"\nimport TestPlanCaseStatusButton from \"@/pages/track/plan/common/TestPlanCaseStatusButton.vue\"\nimport TestReviewCaseStepStatus from \"@/pages/track/review/commom/TestReviewCaseStepStatus.vue\"\nimport {cloneDeep} from \"lodash\"\n\n// 用例步骤执行结果\nconst stepStatusOptions = Object.entries(stepStatusType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"TestCasePlanRun\",\n  components: {\n    PriorityTableItem,\n    CaseTypeTableItem,\n    ExecutionTypeTableItem,\n    TestPlanCaseStatusButton,\n    TestReviewCaseStepStatus,\n  },\n  data() {\n    return {\n      caseTypeEnum: caseTypeEnum,\n      executionEnum: executionEnum,\n      stepStatusOptions: stepStatusOptions,\n      showDialog: false,\n      testCase: {caseDetail: {}},\n      index: 0,\n      total: 0,\n      parent: '',\n      tableData: [],\n      test: {},\n      activeTab: 'detail',\n      isFailure: true,\n    }\n  },\n  props: {\n    searchParam: Object,\n    planId: [String, Number],\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    offset() {\n      return this.parent.pageSize * (this.parent.currentPage - 1)\n    }\n  },\n  mounted() {\n    this.$eventBus.$on('testPlanCaseRun', (testcase: typePlanData, tableData: typePlanData[], parent: any) => {\n      this.parent = parent\n      this.open(testcase, tableData)\n    })\n  },\n  methods: {\n    cancel() {\n      this.showDialog = false\n      this.$emit('refresh')\n    },\n    saveCase(status: planResultEnum) {\n      let body: RequestUpdateTestCase = {\n        type: caseUpdateTypeEnum.UPDATE_PLAN_STATUS,\n        planId: this.planId,\n        executor: this.$store.state.login.username,\n        stepActualResults: this.testCase.caseDetail.steps.map((step: typeCaseStep) => {\n          return step.actualResult || ''\n        }),\n        stepActualStatus: this.testCase.caseDetail.steps.map((step: typeCaseStep) => {\n          return step.actualStatus || planResultEnum.PASS\n        }),\n        issueIds: [],\n      }\n      if (this.parent.isQa) {\n        this.testCase.smokeCheck = status\n        body = Object.assign(body, {\n          type: caseUpdateTypeEnum.UPDATE_PLAN_SMOKE_CHECK,\n          smokeCheck: status,\n        })\n      } else {\n        this.testCase.status = status\n        body = Object.assign(body, {status: status})\n      }\n      testCaseApi.updateTestCase(this.testCase.caseId, body)\n        .then(() => {\n          this.handleNext()\n        })\n        .catch(() => {\n          this.parent.isQa\n            ? this.testCase.smokeCheck = planResultEnum.INIT\n            : this.testCase.status = planResultEnum.INIT\n        })\n    },\n    async handleNext() {\n      if (this.index + this.offset + 1 === this.total) {\n        return\n      }\n      // 超过当前页总数时，触发翻页\n      if (this.index + 1 !== this.tableData.length) {\n        this.index++\n        this.getTestCase(this.index)\n      } else {\n        try {\n          this.parent.currentPage++\n          // 重置列表索引\n          this.index = -1\n          await this.parent.getData()\n          this.tableData = this.parent.tableData\n          await this.handleNext()\n        } catch {\n          // 恢复列表索引\n          this.index = this.parent.pageSize - 1\n          this.parent.currentPage--\n        }\n      }\n    },\n    async handlePre() {\n      if (this.index !== 0) {\n        this.index--\n        this.getTestCase(this.index)\n      } else {\n        try {\n          this.parent.currentPage--\n          // 重置列表索引\n          this.index = this.parent.pageSize\n          await this.parent.getData()\n          this.tableData = this.parent.tableData\n          await this.handlePre()\n        } catch {\n          // 恢复列表索引\n          this.index = this.parent.pageSize + 1\n          this.parent.currentPage++\n        }\n      }\n    },\n    getTestCase(index: number) {\n      this.testCase = this.tableData[index]\n    },\n    open(testCase: typePlanData, tableData: typePlanData[]) {\n      this.showDialog = true\n      this.total = this.parent.total\n      this.activeTab = 'detail'\n      this.testCase = cloneDeep(testCase)\n      this.tableData = tableData\n      this.index = this.tableData.indexOf(testCase)\n    },\n    stepResultChange() {\n      if (this.testCase.method === executionEnum.MANUAL) {\n        this.isFailure = this.testCase.caseDetail.steps.filter((s: { actualStatus: stepStatusEnum }) => {\n          return s.actualStatus === stepStatusEnum.FAIL || s.actualStatus === stepStatusEnum.BLOCK\n        }).length > 0\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.cast-row {\n  text-align: left;\n}\n\n.border-hidden > > > .el-textarea__inner {\n  border-style: hidden;\n  background-color: white;\n  color: #606266;\n}\n\n.cast-label {\n  color: dimgray;\n}\n\n.status-button {\n  padding-left: 4%;\n}\n\n.head-right {\n  text-align: right;\n}\n\n.el-col:not(.test-detail) {\n  line-height: 50px;\n}\n\n.issues-edit > > > p {\n  line-height: 16px;\n}\n\n.status-button {\n  float: right;\n}\n\n.head-right-tip {\n  color: darkgrey;\n}\n\n.el-scrollbar {\n  height: 100%;\n}\n\n.container {\n  height: 100%;\n  margin: 15px;\n}\n\n.el-switch > > > .el-switch__label {\n  color: dimgray;\n}\n\n.el-switch > > > .el-switch__label.is-active {\n  color: #409EFF;\n}\n\n.container > > > .el-card__body {\n  height: calc(100vh - 70px);\n}\n\n.el-divider__text {\n  text-align: left;\n  line-height: normal;\n}\n\n</style>\n\n<style lang=\"scss\">\n.el-drawer.rtl {\n  overflow: auto;\n}\n</style>\n"]}]}