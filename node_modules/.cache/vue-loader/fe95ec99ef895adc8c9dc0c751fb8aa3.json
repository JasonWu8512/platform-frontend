{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjectBranches.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/GitLabProjectBranches.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge2NvdmVyYWdlQXBpfSBmcm9tICJAL2FwaSIKaW1wb3J0IHZhcmlhYmxlcyBmcm9tICJAL2Fzc2V0cy9jc3MvdXRpbHMuc2NzcyIKaW1wb3J0IERpYWxvZ0Zvb3RlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL0RpYWxvZ0Zvb3Rlci52dWUiCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIKaW1wb3J0IFRhYmxlT3BlcmF0b3IgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSIKCmV4cG9ydCBkZWZhdWx0IHsKbmFtZTogIkdpdExhYlByb2plY3RCcmFuY2hlcyIsCiAgY29tcG9uZW50czoge1RhYmxlSGVhZGVyLCBUYWJsZU9wZXJhdG9yLCBEaWFsb2dGb290ZXJ9LAogIGNvbXB1dGVkOiB7CiAgICBwcm9qZWN0SWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5xdWVyeS5wcm9qZWN0SWQKICAgIH0sCiAgICBwcm9qZWN0TmFtZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnF1ZXJ5LnByb2plY3ROYW1lCiAgICB9LAogICAgZm9ybUxhYmVsV2lkdGgoKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXNbJ2Zvcm1MYWJlbFdpZHRoJ10KICAgIH0sCiAgICB0YWJsZUxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICByZXR1cm4gewogICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgY29uZGl0aW9uOiB7fSwKICAgIHRhYmxlRGF0YTogW10sCiAgICBvcHRpb25zOiBbXSwKICAgIGxvYWRpbmc6IGZhbHNlLAogICAgYnJhbmNoRm9ybTogewogICAgICByZWY6ICcnLAogICAgICBicmFuY2g6ICcnCiAgICB9LAogICAgYnJhbmNoUnVsZXM6IHsKICAgICAgcmVmOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5Z+656GA5YiG5pSvJywgdHJpZ2dlcjogJ2JsdXInfV0sCiAgICAgIGJyYW5jaDogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaWsOWIhuaUr+WQjScsIHRyaWdnZXI6ICdibHVyJ31dCiAgICB9CiAgfQogIH0sCiAgbW91bnRlZCgpIHsKICB0aGlzLmhhbmRsZUdldFByb2plY3RCcmFuY2hlcygnJykKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbW90ZU1ldGhvZChxdWVyeT86IHN0cmluZykgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICBjb3ZlcmFnZUFwaS5nZXRHaXRsYWJQcm9qZWN0QnJhbmNoZXModGhpcy5wcm9qZWN0SWQsIHtzZWFyY2g6IHF1ZXJ5fSkudGhlbihyZXMgPT4gewogICAgICAgICAgdGhpcy5vcHRpb25zID0gcmVzLmRhdGEKICAgICAgICB9KQogICAgICB9LCAzMDApOwoKICAgIH0sCiAgICBoYW5kbGVHZXRQcm9qZWN0QnJhbmNoZXModmFsdWU/OiBzdHJpbmcpIHsKICAgICAgY292ZXJhZ2VBcGkuZ2V0R2l0bGFiUHJvamVjdEJyYW5jaGVzKHRoaXMucHJvamVjdElkLCB7c2VhcmNoOiB2YWx1ZX0pLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlcy5kYXRhCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlQ3JlYXRlR2l0QnJhbmNoKCl7CiAgICAgIGNvdmVyYWdlQXBpLmNyZWF0ZUdpdGxhYlByb2plY3RCcmFuY2godGhpcy5wcm9qZWN0SWQsIHRoaXMuYnJhbmNoRm9ybSkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgdGhpcy5oYW5kbGVHZXRQcm9qZWN0QnJhbmNoZXMoKQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZURlbGV0ZUJyYW5jaChyb3c/OiBhbnkpIHsKICAgICAgdGhpcy4kYWxlcnQoJ+ehruiupOWIoOmZpOivpeWIhuaUrz8nLCAnJywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIGNhbGxiYWNrOiAoYWN0aW9uOiBzdHJpbmcpID0+IHsKICAgICAgICAgIGlmIChhY3Rpb24gPT09ICdjb25maXJtJykgewogICAgICAgICAgICBjb3ZlcmFnZUFwaS5kZWxldGVHaXRsYWJQcm9qZWN0QnJhbmNoKHRoaXMucHJvamVjdElkLCB7YnJhbmNoOiByb3cubmFtZX0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVHZXRQcm9qZWN0QnJhbmNoZXMoKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["GitLabProjectBranches.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GitLabProjectBranches.vue","sourceRoot":"src/pages/coverage","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    create-tip=\"创建分支\"\n                    placeholder=\"(每次搜索只返回20条数据，请输入更精准的分支名称搜索)\"\n                    :showCreate=\"true\"\n                    :showSearch=\"true\"\n                    @create=\"dialogFormVisible = true\"\n                    @search=\"handleGetProjectBranches\"\n      >\n        <template slot=\"title\">\n          <div>{{projectName}}的分支</div>\n        </template>\n      </table-header>\n\n    </template>\n    <el-table :data=\"tableData\" size=\"medium\" v-loading=\"tableLoading\">\n      <el-table-column prop=\"name\" label=\"分支名\"/>\n      <el-table-column prop=\"commit.id\" label=\"最新commit id\"/>\n      <el-table-column label=\"操作\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            :show-delete=\"!scope.row.protected\"\n            @deleteClick=\"handleDeleteBranch(scope.row)\"\n          >\n          </table-operator>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialogFormVisible\"\n               title=\"创建分支\"\n               width=\"50%\"\n               :close-on-click-modal=\"false\">\n      <el-form ref=\"branchForm\" :model=\"branchForm\" :rules=\"branchRules\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item :label-width=\"formLabelWidth\" label=\"分支名\" prop=\"branch\">\n              <el-input v-model=\"branchForm.branch\" placeholder=\"请输入要创建的的分支名\"/>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item label=\"ref分支\" :label-width=\"formLabelWidth\" prop=\"ref\">\n              <el-select\n                v-model=\"branchForm.ref\"\n                filterable\n                remote\n                placeholder=\"请选择基于哪只分支创建新分支\"\n                :remote-method=\"remoteMethod\"\n                :loading=\"loading\"\n              >\n                <el-option\n                  v-for=\"item in options\"\n                  :key=\"item.name\"\n                  :label=\"item.name\"\n                  :value=\"item.name\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <template slot=\"footer\">\n        <dialog-footer @cancel=\"dialogFormVisible = false\" @confirm=\"handleCreateGitBranch\"/>\n      </template>\n    </el-dialog>\n  </el-card>\n\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi} from \"@/api\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from \"@/common/components/DialogFooter.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\n\nexport default {\nname: \"GitLabProjectBranches\",\n  components: {TableHeader, TableOperator, DialogFooter},\n  computed: {\n    projectId() {\n      return this.$route.query.projectId\n    },\n    projectName() {\n      return this.$route.query.projectName\n    },\n    formLabelWidth() {\n      return variables['formLabelWidth']\n    },\n    tableLoading() {\n      return this.$store.state.loading\n    },\n  },\n  data() {\n  return {\n    dialogFormVisible: false,\n    condition: {},\n    tableData: [],\n    options: [],\n    loading: false,\n    branchForm: {\n      ref: '',\n      branch: ''\n    },\n    branchRules: {\n      ref: [{required: true, message: '请选择基础分支', trigger: 'blur'}],\n      branch: [{required: true, message: '请输入新分支名', trigger: 'blur'}]\n    }\n  }\n  },\n  mounted() {\n  this.handleGetProjectBranches('')\n  },\n  methods: {\n    remoteMethod(query?: string) {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        coverageApi.getGitlabProjectBranches(this.projectId, {search: query}).then(res => {\n          this.options = res.data\n        })\n      }, 300);\n\n    },\n    handleGetProjectBranches(value?: string) {\n      coverageApi.getGitlabProjectBranches(this.projectId, {search: value}).then(res => {\n        this.tableData = res.data\n      })\n    },\n    handleCreateGitBranch(){\n      coverageApi.createGitlabProjectBranch(this.projectId, this.branchForm).then(() => {\n        this.dialogFormVisible = false\n        this.handleGetProjectBranches()\n      })\n    },\n    handleDeleteBranch(row?: any) {\n      this.$alert('确认删除该分支?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            coverageApi.deleteGitlabProjectBranch(this.projectId, {branch: row.name}).then(() => {\n                this.handleGetProjectBranches()\n              }\n            )\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}