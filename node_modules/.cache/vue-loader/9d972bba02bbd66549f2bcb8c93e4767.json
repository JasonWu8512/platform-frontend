{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/components/PipelineEdit.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/components/PipelineEdit.vue","mtime":1667465519396},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge2NvdmVyYWdlQXBpfSBmcm9tICJAL2FwaSIKaW1wb3J0IHZhcmlhYmxlcyBmcm9tICJAL2Fzc2V0cy9jc3MvdXRpbHMuc2NzcyIKaW1wb3J0IERpYWxvZ0Zvb3RlciBmcm9tICdAL2NvbW1vbi9jb21wb25lbnRzL0RpYWxvZ0Zvb3Rlci52dWUnCmltcG9ydCB7b3BlcmF0aW9uRW51bX0gZnJvbSAiQC9jb25zdGFudC9UZXN0Q2FzZSIKaW1wb3J0IHtidXNpbmVzc1R5cGUsIHRlcm1pbmFsVHlwZX0gZnJvbSAiQC9jb25zdGFudC9Db3ZlcmFnZSI7Ci8vIOS4muWKoee6vwpjb25zdCBidXNpbmVzc09wdGlvbnMgPSBPYmplY3QuZW50cmllcyhidXNpbmVzc1R5cGUpLm1hcCgoW3ZhbHVlLCB0ZXh0XSkgPT4gewogIHJldHVybiB7bGFiZWw6IHRleHQsIHZhbHVlOiB2YWx1ZX0KfSkKLy8g56uvCmNvbnN0IHRlcm1pbmFsT3B0aW9ucyA9IE9iamVjdC5lbnRyaWVzKHRlcm1pbmFsVHlwZSkubWFwKChbdmFsdWUsIHRleHRdKSA9PiB7CiAgcmV0dXJuIHtsYWJlbDogdGV4dCwgdmFsdWU6IHZhbHVlfQp9KQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQaXBlbGluZUVkaXQiLAogIGNvbXBvbmVudHM6IHtEaWFsb2dGb290ZXIsfSwKICBjb21wdXRlZDogewogICAgb3duZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnVzZXJOYW1lOwogICAgfSwKICAgIGZvcm1MYWJlbFdpZHRoKCkgewogICAgICByZXR1cm4gdmFyaWFibGVzWydmb3JtTGFiZWxXaWR0aCddCiAgICB9LAogICAgcHJvamVjdE9wdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jb3ZlcmFnZS5naXRQcm9qZWN0cwogICAgfSwKICAgIGNoYXRPcHRpb25zKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY292ZXJhZ2UubGFya0NoYXRzCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ2Zvcm0ucHJvamVjdElkJygpIHsKICAgICAgdGhpcy5wcm9qZWN0T3B0aW9ucy5mb3JFYWNoKChpdGVtOiBhbnkpID0+IHsKICAgICAgICBpZiAoaXRlbS5pZCA9PT0gdGhpcy5mb3JtLnByb2plY3RJZCkgewogICAgICAgICAgdGhpcy5mb3JtLnByb2plY3RHaXQgPSBpdGVtLnNzaFVybAogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGVja2VkMTogdHJ1ZSwKICAgICAgY2hlY2tlZDI6IHRydWUsCiAgICAgIHRlcm1pbmFsT3B0aW9uczogdGVybWluYWxPcHRpb25zLAogICAgICBidXNpbmVzc09wdGlvbnM6IGJ1c2luZXNzT3B0aW9ucywKICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBvcGVyYXRpb25FbnVtOiBvcGVyYXRpb25FbnVtLAogICAgICBvcGVyYXRpb246ICcnLAogICAgICAvLyBwcm9qZWN0T3B0aW9uczogW10sCiAgICAgIGZvcm06IHsKICAgICAgICBwcm9qZWN0R2l0OiAnJywKICAgICAgICBjb21wYXJlQnJhbmNoOiAnb3JpZ2luL21hc3RlcicsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcHJvamVjdElkOiAnJywKICAgICAgICBub3RpZnlDaGF0SWRzOiAnJywKICAgICAgICB0ZXJtaW5hbDogJ0JFJywKICAgICAgICBidXNpbmVzczogJycsCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpea1geawtOe6v+WQjeensCcsIHRyaWdnZXI6ICdibHVyJ31dLAogICAgICAgIGNvbXBhcmVCcmFuY2g6IFt7cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlr7nmr5TliIbmlK8nLCB0cmlnZ2VyOiAnYmx1cid9XSwKICAgICAgICB0ZXJtaW5hbDogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeerrycsIHRyaWdnZXI6ICdibHVyJ31dLAogICAgICAgIGJ1c2luZXNzOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5Lia5Yqh57q/JywgdHJpZ2dlcjogJ2JsdXInfV0sCiAgICAgICAgcHJvamVjdElkOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5pyN5YqhJywgdHJpZ2dlcjogJ2NoYW5nZSd9XSwKICAgICAgICBwcm9qZWN0R2l0OiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5pyN5Yqh566A5YaZZ2l05Zyw5Z2AJywgdHJpZ2dlcjogJ2JsdXInfV0KICAgICAgfQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNoYW5nZVRlcm1pbmFsKCkgewogICAgICB0aGlzLmNoZWNrZWQxID0gISh0aGlzLmZvcm0udGVybWluYWwgPT09ICdGRScpCiAgICB9LAogICAgb3BlbihwaXBlbGluZT86IGFueSkgewogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuJHJlZnMucGlwZWxpbmVGb3JtKSB7CiAgICAgICAgICB0aGlzLiRyZWZzWydwaXBlbGluZUZvcm0nXS5yZXNldEZpZWxkcygpCiAgICAgICAgICB0aGlzLmNoZWNrZWQxID0gdHJ1ZQogICAgICAgICAgdGhpcy5jaGVja2VkMiA9IHRydWUKICAgICAgICB9CiAgICAgICAgdGhpcy5vcGVyYXRpb24gPSBvcGVyYXRpb25FbnVtLkFERAogICAgICAgIC8v5L+u5pS5CiAgICAgICAgaWYgKHBpcGVsaW5lKSB7CiAgICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IG9wZXJhdGlvbkVudW0uRURJVAogICAgICAgICAgdGhpcy5mb3JtLmlkID0gcGlwZWxpbmUuaWQKICAgICAgICAgIHRoaXMuZm9ybS5uYW1lID0gcGlwZWxpbmUubmFtZQogICAgICAgICAgdGhpcy5mb3JtLnRlcm1pbmFsID0gcGlwZWxpbmUudGVybWluYWwKICAgICAgICAgIHRoaXMuZm9ybS5idXNpbmVzcyA9IHBpcGVsaW5lLmJ1c2luZXNzCiAgICAgICAgICB0aGlzLmZvcm0ucHJvamVjdElkID0gcGlwZWxpbmUucHJvamVjdElkCiAgICAgICAgICB0aGlzLmZvcm0ucHJvamVjdEdpdCA9IHBpcGVsaW5lLmNvdmVyYWdlUGFyYW1zLnByb2plY3RHaXQKICAgICAgICAgIHRoaXMuZm9ybS5jb21wYXJlQnJhbmNoID0gcGlwZWxpbmUuY292ZXJhZ2VQYXJhbXMuY29tcGFyZUJyYW5jaCB8fCAnb3JpZ2luL21hc3RlcicKICAgICAgICAgIHRoaXMuZm9ybS5ub3RpZnlDaGF0SWRzID0gcGlwZWxpbmUubm90aWZ5Q2hhdElkcwogICAgICAgICAgdGhpcy5jaGVja2VkMSA9IEJvb2xlYW4ocGlwZWxpbmUuc3RlcDEpCiAgICAgICAgICB0aGlzLmNoZWNrZWQyID0gQm9vbGVhbihwaXBlbGluZS5zdGVwMikKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgc2F2ZVBpcGVsaW5lKCkgewogICAgICB0aGlzLiRyZWZzWydwaXBlbGluZUZvcm0nXS52YWxpZGF0ZSgodmFsaWQ/OiBib29sZWFuKSA9PiB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICAgIG5hbWU6IHRoaXMuZm9ybS5uYW1lLAogICAgICAgICAgICBwcm9qZWN0SWQ6IHRoaXMuZm9ybS5wcm9qZWN0SWQsCiAgICAgICAgICAgIGNvdmVyYWdlUGFyYW1zOiB7CiAgICAgICAgICAgICAgY29tcGFyZUJyYW5jaDogdGhpcy5mb3JtLmNvbXBhcmVCcmFuY2gsCiAgICAgICAgICAgICAgcHJvamVjdEdpdDogdGhpcy5mb3JtLnByb2plY3RHaXQsCiAgICAgICAgICAgICAgaWZDb3ZlcmFnZTogdGhpcy5jaGVja2VkMgogICAgICAgICAgICB9LAogICAgICAgICAgICBub3RpZnlDaGF0SWRzOiB0aGlzLmZvcm0ubm90aWZ5Q2hhdElkcywKICAgICAgICAgICAgc3RlcDE6IHRoaXMuY2hlY2tlZDEgPyAn5pyN5Yqh56uv5Y+R54mIJyA6ICcnLAogICAgICAgICAgICBzdGVwMjogdGhpcy5jaGVja2VkMiA/ICfopobnm5bnjofmlLbpm4YnIDogJycsCiAgICAgICAgICAgIGJ1c2luZXNzOiB0aGlzLmZvcm0uYnVzaW5lc3MsCiAgICAgICAgICAgIHRlcm1pbmFsOiB0aGlzLmZvcm0udGVybWluYWwsCiAgICAgICAgICB9CiAgICAgICAgICBpZiAodGhpcy5vcGVyYXRpb24gPT09IG9wZXJhdGlvbkVudW0uQUREKSB7CiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgICAgICAgcGFyYW1zLm93bmVyID0gdGhpcy5vd25lcgogICAgICAgICAgICBjb3ZlcmFnZUFwaS5jcmVhdGVQaXBlbGluZShwYXJhbXMpCiAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnZmF0aGVyTWV0aG9kJykKICAgICAgICAgICAgICB9KQogICAgICAgICAgfSBlbHNlIGlmICh0aGlzLm9wZXJhdGlvbiA9PT0gb3BlcmF0aW9uRW51bS5FRElUKSB7CiAgICAgICAgICAgIGNvdmVyYWdlQXBpLnVwZGF0ZVBpcGVsaW5lKHRoaXMuZm9ybS5pZCwgcGFyYW1zKQogICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZhdGhlck1ldGhvZCcpCiAgICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogIH0KfQo="},{"version":3,"sources":["PipelineEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"PipelineEdit.vue","sourceRoot":"src/pages/coverage/components","sourcesContent":["<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :title=\"operation === operationEnum.EDIT? '编辑流水线' : '创建流水线'\"\n    :visible.sync=\"dialogFormVisible\"\n    class=\"dialog-title\"\n    width=\"65%\"\n  >\n    <el-form ref=\"pipelineForm\" :model=\"form\" :rules=\"rules\" :label-width=\"formLabelWidth\">\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item label=\"流水线名称\" prop=\"name\">\n            <el-input v-model=\"form.name\" placeholder=\"请输入流水线名称\"/>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"10\">\n          <el-form-item label=\"服务名称\" prop=\"projectId\">\n            <el-select\n              v-model=\"form.projectId\"\n              filterable\n              placeholder=\"请选择服务\"\n            >\n              <el-option\n                v-for=\"item in projectOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item label=\"业务线\" prop=\"business\">\n            <el-select v-model=\"form.business\" filterable placeholder=\"请选择端\">\n              <el-option v-for=\"item in businessOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n          <el-col :span=\"10\">\n            <el-form-item label=\"端\" prop=\"terminal\">\n              <el-select v-model=\"form.terminal\" filterable placeholder=\"请选择端\" @change=\"handleChangeTerminal\">\n                <el-option v-for=\"item in terminalOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n      </el-row>\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item  label=\"对比分支\" prop=\"compareBranch\">\n            <el-input v-model=\"form.compareBranch\" placeholder=\"请输入测试对比分支\"/>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"10\">\n          <el-form-item label=\"git地址\" prop=\"projectGit\">\n            <el-input v-model=\"form.projectGit\" placeholder=\"请输入git地址\"/>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :offset=\"1\">\n          <el-form-item label=\"流水线步骤\">\n            <template>\n              <el-checkbox v-model=\"checked1\" disabled>服务端发版</el-checkbox>\n              <el-checkbox v-model=\"checked2\">覆盖率收集</el-checkbox>\n            </template>\n          </el-form-item>\n\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :offset=\"1\" :span=\"20\">\n          <el-form-item label=\"通知群\" prop=\"notifyChatIds\">\n            <el-select v-model=\"form.notifyChatIds\"\n                       filterable\n                       multiple\n                       placeholder=\"请选择需要通知的群\"\n                       style=\"width: 100%;\"\n            >\n              <el-option\n                v-for=\"item in chatOptions\"\n                :key=\"item.chatId\"\n                :label=\"item.name\"\n                :value=\"item.chatId\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <template slot=\"footer\">\n      <dialog-footer @cancel=\"dialogFormVisible = false\" @confirm=\"savePipeline\"/>\n    </template>\n  </el-dialog>\n\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi} from \"@/api\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport {operationEnum} from \"@/constant/TestCase\"\nimport {businessType, terminalType} from \"@/constant/Coverage\";\n// 业务线\nconst businessOptions = Object.entries(businessType).map(([value, text]) => {\n  return {label: text, value: value}\n})\n// 端\nconst terminalOptions = Object.entries(terminalType).map(([value, text]) => {\n  return {label: text, value: value}\n})\n\nexport default {\n  name: \"PipelineEdit\",\n  components: {DialogFooter,},\n  computed: {\n    owner() {\n      return this.$store.getters.userName;\n    },\n    formLabelWidth() {\n      return variables['formLabelWidth']\n    },\n    projectOptions() {\n      return this.$store.state.coverage.gitProjects\n    },\n    chatOptions() {\n      return this.$store.state.coverage.larkChats\n    }\n  },\n  watch: {\n    'form.projectId'() {\n      this.projectOptions.forEach((item: any) => {\n        if (item.id === this.form.projectId) {\n          this.form.projectGit = item.sshUrl\n        }\n      })\n    }\n  },\n  data() {\n    return {\n      checked1: true,\n      checked2: true,\n      terminalOptions: terminalOptions,\n      businessOptions: businessOptions,\n      dialogFormVisible: false,\n      operationEnum: operationEnum,\n      operation: '',\n      // projectOptions: [],\n      form: {\n        projectGit: '',\n        compareBranch: 'origin/master',\n        name: '',\n        projectId: '',\n        notifyChatIds: '',\n        terminal: 'BE',\n        business: '',\n      },\n      rules: {\n        name: [{required: true, message: '请输入流水线名称', trigger: 'blur'}],\n        compareBranch: [{required: true, message: '请输入对比分支', trigger: 'blur'}],\n        terminal: [{required: true, message: '请选择端', trigger: 'blur'}],\n        business: [{required: true, message: '请选择业务线', trigger: 'blur'}],\n        projectId: [{required: true, message: '请选择服务', trigger: 'change'}],\n        projectGit: [{required: true, message: '请输入服务简写git地址', trigger: 'blur'}]\n      }\n    }\n  },\n\n  methods: {\n    handleChangeTerminal() {\n      this.checked1 = !(this.form.terminal === 'FE')\n    },\n    open(pipeline?: any) {\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        if (this.$refs.pipelineForm) {\n          this.$refs['pipelineForm'].resetFields()\n          this.checked1 = true\n          this.checked2 = true\n        }\n        this.operation = operationEnum.ADD\n        //修改\n        if (pipeline) {\n          this.operation = operationEnum.EDIT\n          this.form.id = pipeline.id\n          this.form.name = pipeline.name\n          this.form.terminal = pipeline.terminal\n          this.form.business = pipeline.business\n          this.form.projectId = pipeline.projectId\n          this.form.projectGit = pipeline.coverageParams.projectGit\n          this.form.compareBranch = pipeline.coverageParams.compareBranch || 'origin/master'\n          this.form.notifyChatIds = pipeline.notifyChatIds\n          this.checked1 = Boolean(pipeline.step1)\n          this.checked2 = Boolean(pipeline.step2)\n        }\n      })\n    },\n    savePipeline() {\n      this.$refs['pipelineForm'].validate((valid?: boolean) => {\n        if (valid) {\n          const params = {\n            name: this.form.name,\n            projectId: this.form.projectId,\n            coverageParams: {\n              compareBranch: this.form.compareBranch,\n              projectGit: this.form.projectGit,\n              ifCoverage: this.checked2\n            },\n            notifyChatIds: this.form.notifyChatIds,\n            step1: this.checked1 ? '服务端发版' : '',\n            step2: this.checked2 ? '覆盖率收集' : '',\n            business: this.form.business,\n            terminal: this.form.terminal,\n          }\n          if (this.operation === operationEnum.ADD) {\n            // @ts-ignore\n            params.owner = this.owner\n            coverageApi.createPipeline(params)\n              .then(() => {\n                this.$emit('fatherMethod')\n              })\n          } else if (this.operation === operationEnum.EDIT) {\n            coverageApi.updatePipeline(this.form.id, params)\n              .then(() => {\n                this.$emit('fatherMethod')\n              })\n          }\n          this.dialogFormVisible = false\n        } else {\n          return false\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}