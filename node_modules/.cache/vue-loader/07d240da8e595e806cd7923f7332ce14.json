{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/jira/MonthReport.vue?vue&type=style&index=0&id=3edd113f&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/jira/MonthReport.vue","mtime":1655949681776},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgInNyYy9hc3NldHMvY3NzL3V0aWxzIjsKCi5kYXNoYm9hcmQtaGVhZGVyIHsKICB3aWR0aDogMTAwJTsKICBtYXJnaW46IDAgYXV0bzsKICAvL3Bvc2l0aW9uOiBmaXhlZDsKICAvL3Bvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDVweDsKICB6LWluZGV4OiAkaGVhZGVyLXotaW5kZXggLSAxOwp9CgouY2FyZC10aXRsZSB7CiAgICBmb250LXNpemU6IDE2cHg7CiAgICBmb250LXdlaWdodDogNzAwOwogICAgdGV4dC1hbGlnbjogbGVmdDsKfQoK"},{"version":3,"sources":["MonthReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoVA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MonthReport.vue","sourceRoot":"src/pages/jira","sourcesContent":["<template>\n  <div>\n    <el-container>\n      <el-header class=\"dashboard-header\" height=\"40px\">\n        <el-row>\n          <el-col>\n            <el-date-picker\n                v-model=\"month\"\n                :clearable=\"false\"\n                placeholder=\"选择月\"\n                type=\"month\"\n                value-format=\"yyyy-MM\"\n            />\n          </el-col>\n        </el-row>\n      </el-header>\n      <el-container style=\"height: calc(100vh - 120px)\">\n        <el-main style=\"margin-top: 15px; padding: 0\">\n          <el-card v-loading=\"loading\">\n            <div slot=\"header\" class=\"card-title\">\n              <el-tooltip class=\"item\" effect=\"dark\" placement=\"bottom\">\n                <div slot=\"content\" style=\"line-height: 20px\">\n                  bug指数 = 线下bug分 / 总人天数; <br/>\n                  线下bug分 = S0_count * 20 + S1_count * 5 + S2_count * 3 + S3_count * 1; <br/>\n                </div>\n\n                <i class=\"el-icon-question\"></i>\n              </el-tooltip>\n              <span>线下bug指数月度走势</span>\n            </div>\n            <month-trend-report :month=\"month\"></month-trend-report>\n          </el-card>\n<!--          <bug-time :month=\"month\"></bug-time>-->\n          <el-card style=\"margin-top: 20px\" v-loading=\"loading\">\n            <div slot=\"header\" class=\"card-title\">\n              <span>缺陷总览</span>\n            </div>\n            <el-table :data=\"tableData\"\n                      :row-class-name=\"tableRowClassName\"\n                      :cell-style=\"cellStyle\"\n                      size=\"medium\"\n                      row-key=\"id\">\n              <template v-for=\"col in columns\">\n                <el-table-column :key=\"col.props\" :label=\"col.label\" :prop=\"col.props\" :sortable=\"col.sortable\">\n                  <template slot-scope=\"scope\" style=\" vertical-align: text-bottom\">\n                    <div v-if=\"levels.indexOf(col.props) > -1 && scope.row[col.props]\">\n                      <el-tag :type=\"tagType(col.props)\"\n                              effect=\"dark\">\n                        {{scope.row[col.props]}}\n                      </el-tag>\n                    </div>\n                    <div v-else>\n                      <span>{{ scope.row[col.props]}}</span>\n                    </div>\n                  </template>\n                </el-table-column>\n              </template>\n            </el-table>\n            <!--        <div>-->\n            <!--          <el-row>-->\n            <!--            <el-col :span=\"8\">-->\n            <!--              <bug-items :item=\"summaryData\"></bug-items>-->\n            <!--            </el-col>-->\n            <!--            <el-col :span=\"14\">-->\n            <!--              <my-pie-chart :data=\"summaryBugs\" height=\"400px%\"-->\n            <!--                            name=\"bug等级\"-->\n            <!--                            text=\"缺陷分布图\"-->\n            <!--                            width=\"100%\"></my-pie-chart>-->\n            <!--            </el-col>-->\n            <!--          </el-row>-->\n            <!--        </div>-->\n          </el-card>\n          <el-card style=\"margin-top: 20px\" v-loading=\"loading\">\n            <div slot=\"header\" class=\"card-title\">\n              <span>缺陷总览/组织架构</span>\n            </div>\n            <department-month-report :month=\"month\"></department-month-report>\n          </el-card>\n          <!--      <el-row>-->\n          <!--        <div-->\n          <!--            v-for=\"(item, index) in details\"-->\n          <!--            :key=\"index\"-->\n          <!--            style=\"margin: 10px 0\"-->\n          <!--        >-->\n          <!--          <el-col :span=\"12\" :style=\"margin(index)\">-->\n          <!--            <el-card body-style=\"height: 350px\" v-loading=\"loading\">-->\n          <!--              <div slot=\"header\" class=\"card-title\">-->\n          <!--                <span>{{ item.projName }}</span>-->\n          <!--              </div>-->\n          <!--              <div>-->\n          <!--                <el-row>-->\n          <!--                  <el-col :span=\"10\">-->\n          <!--                    <bug-items :item=\"item\"></bug-items>-->\n          <!--                  </el-col>-->\n          <!--                  <el-col :span=\"14\">-->\n          <!--                    <my-pie-chart :data=\"item.bugs\" name=\"bug等级\" text=\"缺陷分布图\" width=\"100%\"/>-->\n          <!--                  </el-col>-->\n          <!--                </el-row>-->\n          <!--              </div>-->\n          <!--            </el-card>-->\n          <!--          </el-col>-->\n          <!--        </div>-->\n          <!--      </el-row>-->\n        </el-main>\n      </el-container>\n    </el-container>\n\n  </div>\n</template>\n\n<script>\nimport jiraApi from '@/api/jira'\n// import bugItems from \"@/common/components/bugItems.vue\"\n// import myPieChart from \"@/common/components/myPieChart.vue\"\nimport {PathName} from '@/constant/routeData'\n// import bugTime from \"@/pages/jira/components/bugTime\"\nimport DepartmentMonthReport from \"@/pages/jira/DepartmentMonthReport\"\nimport MonthTrendReport from \"@/pages/jira/MonthTrendReport\"\n\nexport default {\n  name: \"MonthReport\",\n  components: {MonthTrendReport, DepartmentMonthReport},\n  data() {\n    return {\n      chartSettings: {\n        roseType: 'radius'\n      },\n      month: '',\n      summaryData: {},\n      levels: ['P0', 'P1', 'P2', 'P3', 'S0', 'S1', 'S2', 'S3'],\n      tableData: [],\n      columns: [{\n        label: '项目',\n        props: 'projName',\n        sortable: false,\n      },\n        {\n          label: '开发人数',\n          props: 'peopleCount'\n        },\n        {\n          label: '开发人天',\n          props: 'day',\n        },{\n          label: '总bug数',\n          props: 'count',\n        },\n        {\n          label: '线上P0',\n          props: 'P0',\n        },{\n          label: '线上P1',\n          props: 'P1',\n        },{\n          label: '线上P2',\n          props: 'P2',\n        },{\n          label: '线上P3',\n          props: 'P3',\n        },{\n          label: '线下S0',\n          props: 'S0',\n        },{\n          label: '线下S1',\n          props: 'S1',\n        },{\n          label: '线下S2',\n          props: 'S2',\n        },{\n          label: '线下S3',\n          props: 'S3',\n        },\n        {\n          label: '线下bug指数',\n          props: 'offlineBugRate',\n          sortable: true,\n        },\n        {\n          label: 'P0~S1 平均解决时长(小时)',\n          props: 'avgFixTime',\n          sortable: true,\n        },\n        {\n          label: 'P0~S1 fix->close时间(小时)',\n          props: 'avgCloseTime',\n          sortable:true\n        }\n      ],\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    }\n  },\n  watch: {\n    month() {\n      this.$router.push({name: PathName.MonthReport, query: {month: this.month}})\n      this.getMonthReport();\n\n    }\n  },\n  methods: {\n    cellStyle(){\n      return 'font: 13px Arial;font-weight: 500; color: #606266;'\n    },\n    tagType(value){\n      // let tag = {\n      //   \"background-color\": \"#fde2e2\",\n      //   \"border\": 0,\n      //   \"width\": \"25px\",\n      //   \"text-align\": \"center\"\n      // }\n      if(['P0', 'P1', 'P2', 'P3'].indexOf(value) > -1) {\n        return \"danger\"\n      }\n      else {\n        return \"warning\"\n      }\n\n      // if (value === 'Done') {\n      //   return 'success'\n      // }else if(value === 'ToDo') {\n      //   return 'info'\n      // }else if(value === 'Fixed') {\n      //   return ''\n      // }else if(value === 'Closed') {\n      //   return 'success'\n      // }else if(value === 'Reopened') {\n      //   return 'danger'\n      // }else {\n      //   return 'warning'\n      // }\n      // return tag\n    },\n    margin(index) {\n      let mr = {\n        \"padding\": \"10px 0 10px 10px\"\n      }\n      if (index % 2 === 0) {\n        mr[\"padding\"] = \"10px 10px 10px 0\"\n      }\n      return mr\n    },\n    tableRowClassName(row) {\n      // console.log('row', row)\n      if (row.row.bugLevel === '线上') {\n        return 'bug-row';\n      } else if (row.row.bugLevel === '线下') {\n        return 'task-row';\n      }\n      return '';\n    },\n    getMonthReport() {\n      this.tableData = []\n      jiraApi.getTestMonthReport({month: this.month}).then(res => {\n        this.summaryData = res.data.summary;\n        // this.summaryBugs = res.data.summary.bugs.map(item => {\n        //   return {\n        //     name: item.bugLevel + '-' + item.subBugLevel,\n        //     value: item.count,\n        //   }\n        // })\n        this.summaryData.projName = '全部'\n        // this.summaryData.bugLevel = '全部'\n        // // this.summaryData.combineBugLevel = '全部'\n        // this.summaryData.id = '0'\n        res.data.summary.bugs.forEach(item => {\n          let key = item.subBugLevel\n          console.log('ppp', key)\n          this.summaryData[key] = item.count\n        })\n        // this.summaryData.bugs = res.data.summary.bugs.map(item => {\n        //     return {\n        //       id: '0' + item.subBugLevel,\n        //       bugLevel: item.bugLevel,\n        //       combineBugLevel: item.bugLevel + '-' + item.subBugLevel,\n        //       count: item.count,\n        //       projName: '全部'\n        //     }\n        //   })\n        this.tableData.push(this.summaryData)\n        res.data.details.forEach(item => {\n          var data = {\n            id: item.projId,\n            projName: item.projName,\n            count: item.count === null ? 0 : item.count,\n            peopleCount: item.peopleCount === null ? 0 : item.peopleCount,\n            day: item.day,\n            point: item.point === null ? 0 : item.point,\n            onlinePoint: item.onlinePoint === null ? 0 : item.onlinePoint,\n            offlinePoint: item.offlinePoint === null ? 0 : item.offlinePoint,\n            offlineBugRate: item.offlineBugRate,\n            avgFixTime: item.avgFixTime,\n            avgCloseTime: item.avgCloseTime,\n            // bugLevel: '全部',\n            // combineBugLevel: '全部',\n          };\n          if (item.bugs != null) {\n            item.bugs.forEach(value => {\n              let key = value.subBugLevel\n              data[key] = value.count\n            })\n          }\n\n          this.tableData.push(data);\n        // this.details = res.data.details.map(item => {\n        //   let bugs = []\n        //   if (item.bugs != null) {\n        //     bugs = item.bugs.map(value => {\n        //       return {\n        //         name: value.bugLevel + '-' + value.subBugLevel,\n        //         value: value.count,\n        //       }\n        //     })\n        //   }\n        //   return {\n        //     projName: item.projName,\n        //     count: item.count === null ? 0 : item.count,\n        //     day: item.day,\n        //     point: item.point === null ? 0 : item.point,\n        //     onlinePoint: item.onlinePoint === null ? 0 : item.onlinePoint,\n        //     offlinePoint: item.offlinePoint === null ? 0 : item.offlinePoint,\n        //     offlineBugRate: item.offlineBugRate,\n        //     bugs: bugs\n        //   }\n        })\n        // console.log('ddddd', this.tableData)\n      })\n    },\n  },\n  mounted() {\n    this.month = this.$route.query.month ? this.$route.query.month : this.$store.state.jira.defaultMonth\n      //this.$store.state.jira.defaultMonth\n    // this.getMonthReport()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/utils\";\n\n.dashboard-header {\n  width: 100%;\n  margin: 0 auto;\n  //position: fixed;\n  //position: absolute;\n  top: 50px;\n  background-color: #fff;\n  text-align: left;\n  padding: 5px;\n  z-index: $header-z-index - 1;\n}\n\n.card-title {\n    font-size: 16px;\n    font-weight: 700;\n    text-align: left;\n}\n\n</style>\n"]}]}