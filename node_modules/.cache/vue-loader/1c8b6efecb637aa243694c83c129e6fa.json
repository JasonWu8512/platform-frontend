{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipeLine.vue?vue&type=style&index=0&id=b1f3b840&scoped=true&lang=css&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/PipeLine.vue","mtime":1655949681773},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaWNvblNpemUgewogIGZvbnQtc2l6ZTogMjRweDsKICBib3JkZXItcmFkaXVzOiAxMnB4Owp9CgoudG9vbHRpcFNpemUgewogIHdpZHRoOiAyNHB4OwogIGhlaWdodDogMjRweDsKfQoKLnN1Y2Nlc3MgewogIGNvbG9yOiAjMWFhYTU1Owp9CgppLnN1Y2Nlc3M6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNkY2Y1ZTc7Cn0KCi5mYWlsIHsKICBjb2xvcjogI2RiM2IyMTsKICBmb250LXNpemU6IDI0cHg7CiAgYm9yZGVyLXJhZGl1czogMTJweDsKfQoKaS5mYWlsOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhlMmRkOwp9CgoucGVuZGluZyB7CiAgY29sb3I6ICNhN2E3YTc7CiAgZm9udC1zaXplOiAyNHB4OwogIGJvcmRlci1yYWRpdXM6IDEycHg7Cn0KCmkucGVuZGluZzpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNTsKfQoKLnNraXAgewogIGNvbG9yOiAjMmUyZTJlOwogIGZvbnQtc2l6ZTogMjRweDsKICBib3JkZXItcmFkaXVzOiAxMnB4Owp9CgoucnVubmluZyB7CiAgY29sb3I6ICMxZjc4ZDE7CiAgZm9udC1zaXplOiAyNHB4OwogIGJvcmRlci1yYWRpdXM6IDEycHg7Cn0KCmkucnVubmluZzpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjsKfQoKLmxpbmUgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDUwcHg7CiAgaGVpZ2h0OiAycHg7CiAgdG9wOiAxMXB4OwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7Cn0KCg=="},{"version":3,"sources":["PipeLine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PipeLine.vue","sourceRoot":"src/pages/coverage","sourcesContent":["<template>\n  <el-card class=\"card-content\">\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    create-tip=\"创建流水线\"\n                    @create=\"handleAddOrEdit\"\n                    @search=\"handlePollingDataList\"\n      >\n        <template slot=\"title\">\n          <div>覆盖率流水线</div>\n        </template>\n      </table-header>\n\n    </template>\n\n    <el-table :data=\"tableDatas\" size=\"medium\" v-loading=\"loading && noPolling\" @filter-change=\"filter\" ref=\"pipelineTable\">\n      <el-table-column label=\"名称\" prop=\"name\"/>\n      <el-table-column label=\"服务名\" prop=\"projectName\"/>\n      <el-table-column label=\"业务线\" prop=\"business\" :filters=\"businessOptions\" column-key=\"business\">\n        <template slot-scope=\"scope\"><span>{{ businessType[scope.row.business] }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"技术端\" prop=\"terminal\" :filters=\"terminalOptions\" column-key=\"terminal\">\n        <template slot-scope=\"scope\"><span>{{ terminalType[scope.row.terminal] }}</span></template>\n      </el-table-column>\n      <el-table-column label=\"最近构建commitId\" prop=\"endCommit\"/>\n      <el-table-column label=\"流水线\">\n        <template slot-scope=\"scope\">\n          <div style=\"display: flex; align-items: center\">\n          <el-tooltip effect=\"dark\" placement=\"bottom\" class=\"tooltipSize\">\n            <div v-if=\"scope.row['deployStatus'] === 'fail'\" slot=\"content\" style=\"line-height: 20px\">\n              {{ scope.row['step1'] }} : {{ scope.row['deployStatus'] }} <br/>\n              失败原因: {{ scope.row['reason']['deploy'] }} <br/>\n            </div>\n            <div v-else slot=\"content\" style=\"line-height: 20px\">\n              {{ scope.row['step1'] }} : {{ scope.row['deployStatus'] }} <br/>\n            </div>\n            <el-popover v-model=\"scope.row.visible\"\n                        placement=\"bottom\"\n                        trigger=\"click\"\n                        width=\"160\"\n                        >\n\n                <a @click=\"handleToBuildConsole(scope.row, 'deploy')\">\n                  <i :class=\"pipelineIcon(scope.row['deployStatus'])\" style=\"font-size: 20px\"></i>\n                </a>\n                  <el-tooltip content=\"run/retry\" effect=\"dark\" placement=\"top\">\n                    <el-button :disabled=\"scope.row['deployStatus'] === 'running' || scope.row['coverageStatus'] === 'running'\" circle\n                               icon=\"el-icon-refresh\"\n                               style=\"float: right; height: 20px; width: 20px; padding: 2px\"\n                               @click=\"openCommitDialog(scope.row)\"></el-button>\n                  </el-tooltip>\n              <i slot=\"reference\" :class=\"pipelineIcon(scope.row['deployStatus'])\" v-if=\"Boolean(scope.row['step1'])\"></i>\n            </el-popover>\n          </el-tooltip>\n          <div style=\"height: 2px;background: #c0c4cc; width: 10px; position: center\" v-if=\"Boolean(scope.row['step1']) && Boolean(scope.row['step2'])\"/>\n          <el-tooltip effect=\"dark\" placement=\"bottom\" class=\"tooltipSize\">\n            <div v-if=\"scope.row['coverageStatus'] === 'fail'\" slot=\"content\" style=\"line-height: 20px\">\n              {{ scope.row['step2'] }} : {{ scope.row['coverageStatus'] }} <br/>\n              失败原因: + {{ scope.row['reason']['coverage'] }} <br/>\n            </div>\n            <div v-else slot=\"content\" style=\"line-height: 20px\">\n              {{ scope.row['step2'] }} : {{ scope.row['coverageStatus'] }} <br/>\n            </div>\n            <el-popover v-model=\"scope.row.visible2\"\n                        placement=\"bottom\"\n                        width=\"160\">\n              <a @click=\"handleToBuildConsole(scope.row, 'coverage')\">\n                <i :class=\"pipelineIcon(scope.row['coverageStatus'])\" style=\"font-size: 20px\"></i>\n              </a>\n                <el-tooltip content=\"run/retry\" effect=\"dark\" placement=\"top\">\n                  <el-button :disabled=\"scope.row['deployStatus'] === 'running' || scope.row['coverageStatus'] === 'running'\" circle\n                             icon=\"el-icon-refresh\"\n                             style=\"float: right; height: 20px; width: 20px; padding: 2px;\"\n                             @click=\"openMergeDialog(scope.row)\"></el-button>\n                </el-tooltip>\n              <i slot=\"reference\" :class=\"pipelineIcon(scope.row['coverageStatus'])\" v-if=\"Boolean(scope.row['step2'])\"></i>\n            </el-popover>\n          </el-tooltip>\n          </div>\n        </template>\n\n      </el-table-column>\n      <el-table-column prop=\"projectName\" label=\"代码检查结果\">\n        <template slot-scope=\"scope\">\n          <div v-if=\"scope.row.sonarStatus === 'running'\">\n            <i class=\"el-icon-loading\" style=\"font-size: 25px\"></i>\n          </div>\n          <div v-else-if=\"scope.row.sonarStatus === 'fail'\" style=\"color: red\">\n            sonar执行失败请重试\n          </div>\n          <div v-else>\n            <a :href=\"'http://sonar.jlgltech.com/dashboard?id='+scope.row.projectName\" target=\"_blank\">\n              {{scope.row.name}}</a>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"操作\" :width=\"table5BtnWidth\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            copy-tip=\"覆盖率构建记录\"\n            show-sonar\n            show-copy\n            show-delete\n            show-edit\n            show-run\n            runIcon=\"el-icon-more\"\n            run-tip=\"查看服务构建记录\"\n            :sonar-disable=\"scope.row.sonarStatus === 'running'\"\n            @copyClick=\"handleToBuildRecord(scope.row)\"\n            @deleteClick=\"handleDelete(scope.row)\"\n            @editClick=\"handleAddOrEdit(scope.row)\"\n            @runClick=\"handleToServerDeployHistory(scope.row)\"\n            @sonarClick=\"openSonarDialog(scope.row)\"\n          >\n          </table-operator>\n\n\n        </template>\n      </el-table-column>\n\n    </el-table>\n    <table-pagination\n      :change=\"pollingDataList\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n    <pipeline-edit ref=\"edit\" @fatherMethod=\"pollingDataList\"></pipeline-edit>\n    <el-dialog :visible.sync=\"dialogFormVisible\"\n               title=\"发版参数\"\n               width=\"50%\"\n               :close-on-click-modal=\"false\">\n      <el-form ref=\"commitForm\" :model=\"commitForm\" :rules=\"commitRules\">\n        <el-form-item label-width=\"160px\" label=\"branch or commitId\" prop=\"commitId\">\n          <el-input v-model=\"commitForm.commitId\" placeholder=\"请输入要构建的分支/commitId\"/>\n        </el-form-item>\n      </el-form>\n      <template slot=\"footer\">\n        <dialog-footer @cancel=\"dialogFormVisible = false\" @confirm=\"handleTriggerDeployServe\"/>\n      </template>\n    </el-dialog>\n    <el-dialog :visible.sync=\"sonarFormVisible\"\n               title=\"sonar参数\"\n               width=\"50%\"\n               :close-on-click-modal=\"false\">\n      <el-form ref=\"sonarForm\" :model=\"commitForm\" :rules=\"commitRules\">\n        <el-form-item label-width=\"160px\" label=\"branch or commitId\" prop=\"commitId\">\n          <el-input v-model=\"commitForm.commitId\" placeholder=\"请输入要构建的分支/commitId\"/>\n        </el-form-item>\n      </el-form>\n      <template slot=\"footer\">\n        <dialog-footer @cancel=\"sonarFormVisible = false\" @confirm=\"triggerSonar\"/>\n      </template>\n    </el-dialog>\n    <el-dialog :visible.sync=\"compareFormVisible\" title=\"增量覆盖率参数\" width=\"50%\" :close-on-click-modal=\"false\">\n      <el-form ref=\"mergeForm\" :model=\"compareForm\">\n        <el-form-item label-width=\"80px\" label=\"对比分支\" prop=\"compareBranch\">\n          <el-input v-model=\"compareForm.compareBranch\" placeholder=\"请输入对比分支，不输入默认origin/master\"/>\n        </el-form-item>\n      </el-form>\n      <template slot=\"footer\">\n        <dialog-footer @cancel=\"compareFormVisible = false\" @confirm=\"handleTriggerCoverage\"/>\n      </template>\n\n    </el-dialog>\n\n  </el-card>\n\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi} from \"@/api\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport PipelineEdit from \"@/pages/coverage/components/PipelineEdit.vue\"\nimport {businessType, terminalType} from \"@/constant/Coverage\";\nimport {_filter} from \"@/common/utils\"\n// 业务线\nconst businessOptions = Object.entries(businessType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n// 端\nconst terminalOptions = Object.entries(terminalType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\nexport default {\n  name: \"PipeLine\",\n  components: {TableHeader, TablePagination, TableOperator, PipelineEdit, DialogFooter},\n  props: {},\n  data() {\n    return {\n      businessType: businessType,\n      terminalType: terminalType,\n      terminalOptions: terminalOptions,\n      businessOptions: businessOptions,\n      noPolling: true,\n      sonarFormVisible: false,\n      dialogFormVisible: false,\n      compareFormVisible: false,\n      condition: {},\n      total: 0,\n      pageSize: PAGINATION_SIZE.LARGE,\n      currentPage: 1,\n      searchName: '',\n      tableDatas: [],\n      commitForm: {\n        commitId: '',\n      },\n      compareForm: {\n        compareBranch: ''\n      },\n      commitRules: {commitId: [{required: true, message: '请输入commitId', trigger: 'blur'}]},\n      pipelineFilters: {}\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    table5BtnWidth() {\n      return variables['table5BtnWidth']\n    },\n  },\n\n  destroyed() {\n    clearInterval(this.myInterval)\n  },\n  mounted() {\n    this.pollingDataList()\n  },\n  methods: {\n    filter(filters: any) {\n      this.noPolling = true\n      this.currentPage = 1\n      _filter(filters, this.pipelineFilters, this.$route.path)\n      this.pollingDataList()\n    },\n    pipelineIcon(status?: string) {\n      if (status === 'success') {\n        return 'el-icon-circle-check iconSize success'\n      } else if (status === 'pending') {\n        return 'el-icon-video-pause iconSize pending'\n      } else if (status === 'running') {\n        return 'el-icon-loading iconSize running'\n      } else if (status === 'fail') {\n        return 'el-icon-circle-close iconSize fail'\n      } else if (status === 'skip') {\n        return 'el-icon-warning-outline iconSize skip'\n      }\n    },\n    getPipelineList(value?: string) {\n      const params = {\n        limit: this.pageSize,\n        offset: this.pageSize * (this.currentPage - 1),\n        name: value\n      }\n      this.pipelineFilters = sessionStorage.getItem(this.$route.path) || \"{}\"\n      this.pipelineFilters = JSON.parse(this.pipelineFilters)\n      // console.log('params', typeof this.pipelineFilters)\n      Object.assign(params, this.pipelineFilters)\n      this.$refs.pipelineTable.columns.forEach((item: any) => {\n        item.filteredValue = this.pipelineFilters[item.columnKey]\n      })\n      coverageApi.getPipelineList(params).then(res => {\n        this.tableDatas = res.data.data\n        this.tableDatas.forEach(function (item: any) {\n          item.visible = false\n          item.visible2 = false\n        })\n        this.total = res.data.total\n        this.noPolling = true\n      })\n    },\n    pollingDataList(value?: string) {\n      this.getPipelineList(value)\n      clearInterval(this.myInterval)\n      this.myInterval = window.setInterval(() => {\n        setTimeout(() => {\n          this.noPolling = false\n          this.getPipelineList(value)\n        }, 1)\n      }, 10000)\n    },\n    handlePollingDataList(value?: string) {\n      this.currentPage = 1\n      this.pollingDataList(value)\n    },\n    handleToBuildRecord(row?: any) {\n      this.$router.push({\n        name: PathName.PipelineBuildRecordByPipelineId,\n        params: {\n          pipelineId: row.id\n        }\n      })\n    },\n    handleAddOrEdit(pipeline?: any) {\n      this.$nextTick(function () {\n        // DOM 现在更新了\n        this.$refs.edit.open(pipeline)\n        // this.$eventBus.$emit('createOrUpdatePipeline', pipeline)\n      })\n\n    },\n    // 删除流水线\n    handleDelete(row?: any) {\n      this.$alert('确认删除流水线?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            coverageApi.deletePipeline(row.id).then(() => {\n                this.pollingDataList()\n              }\n            )\n          }\n        }\n      })\n    },\n    // 填写合并报告id\n    openMergeDialog(row?: any) {\n      this.compareForm.compareBranch = row.coverageParams.compareBranch\n      this.compareFormVisible = true\n        this.compareForm.row = row\n    },\n    // 触发覆盖率收集\n    handleTriggerCoverage() {\n      const params = {\n        pipelineId: this.compareForm.row.id,\n        projectGit: this.compareForm.row.coverageParams.projectGit,\n        compareBranch: this.compareForm.compareBranch\n      }\n      coverageApi.triggerCoverageDeploy(params)\n      this.compareFormVisible = false\n    },\n    // 填写发版commit\n    openCommitDialog(row?: any) {\n      this.dialogFormVisible = true\n      this.commitForm.row = row\n    },\n    // 触发服务端发版\n    handleTriggerDeployServe() {\n      this.$refs['commitForm'].validate((valid?: boolean) => {\n        if (valid) {\n          const params = {\n            projectName: this.commitForm.row.projectName,\n            pipelineId: this.commitForm.row.id,\n            commitId: this.commitForm.commitId\n          }\n          coverageApi.triggerServerDeploy(params).finally(() => this.dialogFormVisible = false)\n          coverageApi.triggerSonarBuild(params)\n        }else {\n          return false\n        }\n      })\n    },\n    // 填写sonar commit\n    openSonarDialog(row?: any) {\n      this.sonarFormVisible = true\n      this.commitForm.row = row\n    },\n    //triggerSonar\n    triggerSonar() {\n      this.$refs['sonarForm'].validate((valid?: boolean) => {\n        if (valid) {\n          const params = {\n            commitId: this.commitForm.commitId,\n            pipelineId: this.commitForm.row.id,\n          }\n          coverageApi.triggerSonarBuild(params).finally(() =>this.sonarFormVisible = false)\n        }else {\n          return false\n        }\n      })\n    },\n    handleToBuildConsole(row?: any, step?: string) {\n      this.$router.push({\n        name: PathName.PipelineBuildConsole,\n        params: {\n          pipelineId: row.id,\n          step: step,\n        }\n      })\n    },\n    handleToServerDeployHistory(row?: any) {\n      this.$router.push({\n        name: PathName.PipelineServerBuildRecordByPipelineId,\n        params: {\n          pipelineId: row.id\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.iconSize {\n  font-size: 24px;\n  border-radius: 12px;\n}\n\n.tooltipSize {\n  width: 24px;\n  height: 24px;\n}\n\n.success {\n  color: #1aaa55;\n}\n\ni.success:hover {\n  background-color: #dcf5e7;\n}\n\n.fail {\n  color: #db3b21;\n  font-size: 24px;\n  border-radius: 12px;\n}\n\ni.fail:hover {\n  background-color: #f8e2dd;\n}\n\n.pending {\n  color: #a7a7a7;\n  font-size: 24px;\n  border-radius: 12px;\n}\n\ni.pending:hover {\n  background-color: #f4f4f5;\n}\n\n.skip {\n  color: #2e2e2e;\n  font-size: 24px;\n  border-radius: 12px;\n}\n\n.running {\n  color: #1f78d1;\n  font-size: 24px;\n  border-radius: 12px;\n}\n\ni.running:hover {\n  background-color: #ecf5ff;\n}\n\n.line {\n  position: absolute;\n  display: inline-block;\n  width: 50px;\n  height: 2px;\n  top: 11px;\n  left: 0;\n  right: 0;\n}\n\n</style>\n"]}]}