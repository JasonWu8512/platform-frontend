{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/testTools/prMergedNotify.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/testTools/prMergedNotify.vue","mtime":1655949681779},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Z2l0bGFiQ2hhdEFwaX0gZnJvbSAiQC9hcGkiCmltcG9ydCB7CiAgUmVxdWVzdENyZWF0ZUdpdGxhYkNoYXRDb25maWcsCiAgUmVxdWVzdEdldEdpdGxhYkNoYXRDb25maWdMaXN0LAogIFJlcXVlc3RVcGRhdGVHaXRsYWJDaGF0Q29uZmlnCn0gZnJvbSAiQC9hcGkvdHlwZXMvZ2l0bGFiIgppbXBvcnQge3R5cGVHaXRsYWJDaGF0RGF0YX0gZnJvbSAiQC9hcGkvdHlwZXMvZ2l0bGFiVHlwZSIKaW1wb3J0IHZhcmlhYmxlcyBmcm9tICJAL2Fzc2V0cy9jc3MvdXRpbHMuc2NzcyIKaW1wb3J0IERpYWxvZ0Zvb3RlciBmcm9tICdAL2NvbW1vbi9jb21wb25lbnRzL0RpYWxvZ0Zvb3Rlci52dWUnCmltcG9ydCBUYWJsZVBhZ2luYXRpb24gZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9wYWdpbmF0aW9uL1RhYmxlUGFnaW5hdGlvbi52dWUiCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIKaW1wb3J0IFRhYmxlT3BlcmF0b3IgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSIKaW1wb3J0IHtfZmlsdGVyfSBmcm9tICJAL2NvbW1vbi91dGlscyIKaW1wb3J0IHtQQUdJTkFUSU9OX1NJWkV9IGZyb20gIkAvY29uc3RhbnQiCmltcG9ydCB7b3BlcmF0aW9uRW51bX0gZnJvbSAiQC9jb25zdGFudC9HaXRsYWIiCmltcG9ydCB7cGxhblN0YWdlRW51bX0gZnJvbSAiQC9jb25zdGFudC9UZXN0UGxhbiIKaW1wb3J0IHtwck1lcmdlZE5vdGlmeUZvcm0sIHByTWVyZ2VkTm90aWZ5UnVsZXN9IGZyb20gIkAvcGFnZXMvdGVzdFRvb2xzL2Zvcm0iCmltcG9ydCB7Y2xvbmVEZWVwfSBmcm9tICJsb2Rhc2giCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInByTWVyZ2VkTm90aWZ5IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlcmF0aW9uRW51bTogb3BlcmF0aW9uRW51bSwKICAgICAgcGxhblN0YWdlRW51bTogcGxhblN0YWdlRW51bSwKICAgICAgbGFya0NoYXRPcHRpb25zOiBbXSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHBhZ2VTaXplOiBQQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICAgIHRvdGFsOiAwLAogICAgICBmb3JtOiBwck1lcmdlZE5vdGlmeUZvcm0sCiAgICAgIHJ1bGVzOiBwck1lcmdlZE5vdGlmeVJ1bGVzLAogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIG9wZXJhdGlvbjogJycsCiAgICAgIHByb2plY3RQYXRoT3B0aW9uczogW10sCiAgICAgIGNvbmRpdGlvbjoge30sCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBUYWJsZU9wZXJhdG9yLAogICAgVGFibGVIZWFkZXIsCiAgICBUYWJsZVBhZ2luYXRpb24sCiAgICBEaWFsb2dGb290ZXIsCiAgfSwKICBjb21wdXRlZDogewogICAgZm9ybUxhYmVsV2lkdGgoKSB7CiAgICAgIHJldHVybiAnODBweCcKICAgIH0sCiAgICBjaGF0T3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmNvdmVyYWdlLmxhcmtDaGF0cwogICAgfSwKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9LAogICAgdGFibGUyQnRuV2lkdGgoKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXNbJ3RhYmxlMkJ0bldpZHRoJ10KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXRUYWJsZURhdGEoKQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdE9wdGlvbnMoKSB7CiAgICAgIHRoaXMuc2V0UHJvamVjdFBhdGhPcHRpb25zKCkKICAgICAgdGhpcy5zZXRMYXJrQ2hhdE9wdGlvbnMoKQogICAgfSwKICAgIGluaXRUYWJsZURhdGEoKSB7CiAgICAgIHRoaXMuaW5pdE9wdGlvbnMoKQogICAgICB0aGlzLmdldERhdGEoKQogICAgfSwKICAgIHNhdmVDb25maWcoKSB7CiAgICAgIHRoaXMuJHJlZnMucHJNZXJnZWROb3RpZnlGb3JtLnZhbGlkYXRlKCh2YWxpZDogYm9vbGVhbikgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMub3BlcmF0aW9uID09PSBvcGVyYXRpb25FbnVtLkFERCkgewogICAgICAgICAgICBjb25zdCBib2R5OiBSZXF1ZXN0Q3JlYXRlR2l0bGFiQ2hhdENvbmZpZyA9IHRoaXMuYnVpbGRQYXJhbXMoKQogICAgICAgICAgICBnaXRsYWJDaGF0QXBpLmNyZWF0ZUdpdGxhYkNoYXRDb25maWcoYm9keSkKICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2goKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3BlcmF0aW9uID09PSBvcGVyYXRpb25FbnVtLkVESVQpIHsKICAgICAgICAgICAgY29uc3QgYm9keTogUmVxdWVzdFVwZGF0ZUdpdGxhYkNoYXRDb25maWcgPSB0aGlzLmJ1aWxkUGFyYW1zKCkKICAgICAgICAgICAgZ2l0bGFiQ2hhdEFwaS51cGRhdGVHaXRsYWJDaGF0Q29uZmlnKHRoaXMuZm9ybS5pZCwgYm9keSkKICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2goKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGJ1aWxkUGFyYW1zKCkgewogICAgICBsZXQgYm9keTogUmVxdWVzdENyZWF0ZUdpdGxhYkNoYXRDb25maWcgfCBSZXF1ZXN0VXBkYXRlR2l0bGFiQ2hhdENvbmZpZyA9IHsKICAgICAgICBwcm9qZWN0OiB0aGlzLmZvcm0ucHJvamVjdCwKICAgICAgICBzb3VyY2VCcmFuY2g6IHRoaXMuZm9ybS5zb3VyY2VCcmFuY2gsCiAgICAgICAgdGFyZ2V0QnJhbmNoOiB0aGlzLmZvcm0udGFyZ2V0QnJhbmNoLAogICAgICAgIGNoYXRJZDogdGhpcy5mb3JtLmNoYXRJZCwKICAgICAgfQogICAgICByZXR1cm4gYm9keQogICAgfSwKICAgIHNldFByb2plY3RQYXRoT3B0aW9ucygpIHsKICAgICAgZ2l0bGFiQ2hhdEFwaS5nZXRBbGxHaXRsYWJQcm9qZWN0cygpCiAgICAgICAgLnRoZW4oKHtkYXRhfSkgPT4gewogICAgICAgICAgdGhpcy5wcm9qZWN0UGF0aE9wdGlvbnMgPSBkYXRhLmRhdGEKICAgICAgICB9KQogICAgfSwKICAgIGdldERhdGEodmFsdWU/OiBzdHJpbmcpIHsKICAgICAgY29uc3QgcGFyYW1zOiBSZXF1ZXN0R2V0R2l0bGFiQ2hhdENvbmZpZ0xpc3QgPSB7CiAgICAgICAgb2Zmc2V0OiB0aGlzLnBhZ2VTaXplICogKHRoaXMuY3VycmVudFBhZ2UgLSAxKSwKICAgICAgICBsaW1pdDogdGhpcy5wYWdlU2l6ZSwKICAgICAgICBwcm9qZWN0OiB2YWx1ZQogICAgICB9CgogICAgICB0aGlzLmNvbmZpZ0ZpbHRlciA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odGhpcy4kcm91dGUucGF0aCkKICAgICAgdGhpcy5jb25maWdGaWx0ZXIgPSB0aGlzLmNvbmZpZ0ZpbHRlciA/IEpTT04ucGFyc2UodGhpcy5jb25maWdGaWx0ZXIpIDoge30KICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KHRoaXMuY29uZmlnRmlsdGVyKSAhPT0gInt9IikgewogICAgICAgIE9iamVjdC5hc3NpZ24ocGFyYW1zLCB0aGlzLmNvbmZpZ0ZpbHRlcikKICAgICAgICB0aGlzLiRyZWZzLnRhYmxlLmNvbHVtbnMuZm9yRWFjaCgoaXRlbTogYW55KSA9PiB7CiAgICAgICAgICBpdGVtLmZpbHRlcmVkVmFsdWUgPSB0aGlzLmNvbmZpZ0ZpbHRlcltpdGVtLmNvbHVtbktleV0KICAgICAgICB9KQogICAgICB9CgogICAgICBnaXRsYWJDaGF0QXBpLmdldEdpdGxhYkNoYXRDb25maWdMaXN0KHBhcmFtcykKICAgICAgICAudGhlbigoe2RhdGF9KSA9PiB7CiAgICAgICAgICB0aGlzLnRvdGFsID0gZGF0YS50b3RhbAogICAgICAgICAgdGhpcy50YWJsZURhdGEgPSBkYXRhLmRhdGEKICAgICAgICAgIHRoaXMudGFibGVEYXRhLmZvckVhY2goKGl0ZW06IHR5cGVHaXRsYWJDaGF0RGF0YSkgPT4gewogICAgICAgICAgICBsZXQgY2hhdCA9IHRoaXMuY2hhdE9wdGlvbnMuZmluZCgoczoge2lkOiBudW1iZXJ9KSA9PiBTdHJpbmcocy5pZCkgPT09IGl0ZW0uY2hhdElkKQogICAgICAgICAgICBpdGVtLmNoYXROYW1lID0gY2hhdC5uYW1lCiAgICAgICAgICAgIGl0ZW0uY2hhdExhcmtJZCA9IGNoYXQuY2hhdElkCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlQWRkT3JFZGl0KGdpdGxhYkNoYXRDb25maWc/OiB0eXBlR2l0bGFiQ2hhdERhdGEpIHsKICAgICAgY29uc29sZS5sb2coZ2l0bGFiQ2hhdENvbmZpZykKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGlmICh0aGlzLiRyZWZzLnByTWVyZ2VkTm90aWZ5Rm9ybSkgewogICAgICAgICAgdGhpcy4kcmVmcy5wck1lcmdlZE5vdGlmeUZvcm0ucmVzZXRGaWVsZHMoKQogICAgICAgIH0KICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IG9wZXJhdGlvbkVudW0uQURECiAgICAgICAgLy/kv67mlLkKICAgICAgICBpZiAoZ2l0bGFiQ2hhdENvbmZpZykgewogICAgICAgICAgdGhpcy5vcGVyYXRpb24gPSBvcGVyYXRpb25FbnVtLkVESVQKICAgICAgICAgIHRoaXMuZm9ybSA9IGNsb25lRGVlcChnaXRsYWJDaGF0Q29uZmlnKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmZvcm0gPSBwck1lcmdlZE5vdGlmeUZvcm0KICAgICAgICB9CiAgICAgICAgdGhpcy5pbml0T3B0aW9ucygpCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRGVsZXRlKGdpdGxhYkNoYXRDb25maWc6IHR5cGVHaXRsYWJDaGF0RGF0YSkgewogICAgICB0aGlzLiRhbGVydCgn56Gu6K6k5Yig6Zmk6K+l6YWN572uPycsICcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgY2FsbGJhY2s6IChhY3Rpb246IHN0cmluZykgPT4gewogICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2NvbmZpcm0nKSB7CiAgICAgICAgICAgIGdpdGxhYkNoYXRBcGkuZGVsZXRlR2l0bGFiQ2hhdENvbmZpZyhnaXRsYWJDaGF0Q29uZmlnLmlkKQogICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaCgpCiAgICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlU2VhcmNoKHZhbHVlPzogc3RyaW5nKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxCiAgICAgIHRoaXMuZ2V0RGF0YSh2YWx1ZSkKICAgIH0sCiAgICByZWZyZXNoKCkgewogICAgICB0aGlzLmluaXRUYWJsZURhdGEoKQogICAgfSwKICAgIGZpbHRlcihmaWx0ZXJzOiBhbnkpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDEKICAgICAgX2ZpbHRlcihmaWx0ZXJzLCB0aGlzLmNvbmZpZ0ZpbHRlciwgdGhpcy4kcm91dGUucGF0aCkKICAgICAgdGhpcy5pbml0VGFibGVEYXRhKCkKICAgIH0sCiAgICBzZXRMYXJrQ2hhdE9wdGlvbnMoKSB7CiAgICAgIC8vIOe+pOiBiuetm+mAiQogICAgICB0aGlzLmxhcmtDaGF0T3B0aW9ucyA9IE9iamVjdC5lbnRyaWVzKHRoaXMuY2hhdE9wdGlvbnMpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiB7CiAgICAgICAgLy8gQHRzLWlnbm9yZQogICAgICAgIHJldHVybiB7dGV4dDogdmFsdWUubmFtZSwgdmFsdWU6IFN0cmluZyh2YWx1ZS5pZCksIGtleToga2V5fQogICAgICB9KQogICAgICBjb25zb2xlLmxvZyh0aGlzLmxhcmtDaGF0T3B0aW9ucywgdGhpcy5jaGF0T3B0aW9ucykKICAgIH0KICB9Cn0KCg=="},{"version":3,"sources":["prMergedNotify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"prMergedNotify.vue","sourceRoot":"src/pages/testTools","sourcesContent":["<template>\n  <div>\n    <el-card class=\"card-content\">\n      <template slot=\"header\">\n        <table-header\n          :condition=\"condition\"\n          create-tip=\"创建PR合并通知群配置\"\n          placeholder=\"根据项目名称搜索\"\n          @create=\"handleAddOrEdit\"\n          @search=\"handleSearch\"\n        >\n          <template slot=\"title\">\n            <div>PR合并通知配置</div>\n          </template>\n        </table-header>\n      </template>\n      <el-table ref=\"table\" v-loading=\"loading\" :data=\"tableData\" @filter-change=\"filter\">\n\n        <!--  项目名称  -->\n        <el-table-column label=\"项目名称\" prop=\"project\" show-overflow-tooltip/>\n\n        <!--  源分支  -->\n        <el-table-column label=\"源分支\" prop=\"sourceBranch\"/>\n\n        <!--  目标分支  -->\n        <el-table-column label=\"目标分支\" prop=\"targetBranch\"/>\n\n        <!--  群聊  -->\n        <el-table-column :filters=\"larkChatOptions\" column-key=\"chatId\" label=\"群聊\" prop=\"chatName\"/>\n\n        <!--  操作  -->\n        <el-table-column :width=\"table2BtnWidth\" label=\"操作\">\n          <template slot-scope=\"scope\">\n            <table-operator\n              show-delete\n              show-edit\n              @deleteClick=\"handleDelete(scope.row)\"\n              @editClick=\"handleAddOrEdit(scope.row)\"\n            />\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <table-pagination\n        :change=\"initTableData\"\n        :current-page.sync=\"currentPage\"\n        :page-size.sync=\"pageSize\"\n        :total=\"total\"\n      />\n    </el-card>\n\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :title=\"operation === operationEnum.EDIT? '编辑PR合并群聊配置' : '创建PR合并群聊配置'\"\n      :visible.sync=\"dialogFormVisible\"\n      class=\"dialog-title\"\n      width=\"65%\"\n    >\n\n      <el-form ref=\"prMergedNotifyForm\" :model=\"form\" :rules=\"rules\">\n\n        <el-row>\n          <el-col :offset=\"1\" :span=\"10\">\n            <el-form-item :label-width=\"formLabelWidth\" label=\"项目\" prop=\"project\">\n              <el-select v-model=\"form.project\" filterable placeholder=\"请选择项目\">\n                <el-option\n                  v-for=\"item in projectPathOptions\"\n                  :key=\"item.path\"\n                  :label=\"item.project\"\n                  :value=\"item.path\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"10\">\n            <el-form-item :label-width=\"formLabelWidth\" label=\"源分支\" prop=\"sourceBranch\">\n              <el-input v-model=\"form.sourceBranch\" placeholder=\"请输入源分支名称\"/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-row>\n          <el-col :offset=\"1\" :span=\"10\">\n            <el-form-item :label-width=\"formLabelWidth\" label=\"目标分支\" prop=\"targetBranch\">\n              <el-input v-model=\"form.targetBranch\" placeholder=\"请输入目标分支名称\"/>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"10\">\n            <el-form-item :label-width=\"formLabelWidth\" label=\"推送群聊\" prop=\"chatId\">\n              <el-select\n                v-model=\"form.chatId\"\n                filterable\n                placeholder=\"请选择需要通知的群\"\n                style=\"width: 100%;\"\n              >\n                <el-option\n                  v-for=\"item in larkChatOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.text\"\n                  :value=\"item.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n      </el-form>\n\n      <template slot=\"footer\">\n        <dialog-footer @cancel=\"dialogFormVisible = false\" @confirm=\"saveConfig\"/>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {gitlabChatApi} from \"@/api\"\nimport {\n  RequestCreateGitlabChatConfig,\n  RequestGetGitlabChatConfigList,\n  RequestUpdateGitlabChatConfig\n} from \"@/api/types/gitlab\"\nimport {typeGitlabChatData} from \"@/api/types/gitlabType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {_filter} from \"@/common/utils\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {operationEnum} from \"@/constant/Gitlab\"\nimport {planStageEnum} from \"@/constant/TestPlan\"\nimport {prMergedNotifyForm, prMergedNotifyRules} from \"@/pages/testTools/form\"\nimport {cloneDeep} from \"lodash\"\n\nexport default {\n  name: \"prMergedNotify\",\n  data() {\n    return {\n      operationEnum: operationEnum,\n      planStageEnum: planStageEnum,\n      larkChatOptions: [],\n      tableData: [],\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      form: prMergedNotifyForm,\n      rules: prMergedNotifyRules,\n      dialogFormVisible: false,\n      operation: '',\n      projectPathOptions: [],\n      condition: {},\n    }\n  },\n  components: {\n    TableOperator,\n    TableHeader,\n    TablePagination,\n    DialogFooter,\n  },\n  computed: {\n    formLabelWidth() {\n      return '80px'\n    },\n    chatOptions() {\n      return this.$store.state.coverage.larkChats\n    },\n    loading() {\n      return this.$store.state.loading\n    },\n    table2BtnWidth() {\n      return variables['table2BtnWidth']\n    }\n  },\n  mounted() {\n    this.initTableData()\n  },\n  methods: {\n    initOptions() {\n      this.setProjectPathOptions()\n      this.setLarkChatOptions()\n    },\n    initTableData() {\n      this.initOptions()\n      this.getData()\n    },\n    saveConfig() {\n      this.$refs.prMergedNotifyForm.validate((valid: boolean) => {\n        if (valid) {\n          if (this.operation === operationEnum.ADD) {\n            const body: RequestCreateGitlabChatConfig = this.buildParams()\n            gitlabChatApi.createGitlabChatConfig(body)\n              .then(() => {\n                this.refresh()\n              })\n          } else if (this.operation === operationEnum.EDIT) {\n            const body: RequestUpdateGitlabChatConfig = this.buildParams()\n            gitlabChatApi.updateGitlabChatConfig(this.form.id, body)\n              .then(() => {\n                this.refresh()\n              })\n          }\n          this.dialogFormVisible = false\n        } else {\n          return false\n        }\n      })\n    },\n    buildParams() {\n      let body: RequestCreateGitlabChatConfig | RequestUpdateGitlabChatConfig = {\n        project: this.form.project,\n        sourceBranch: this.form.sourceBranch,\n        targetBranch: this.form.targetBranch,\n        chatId: this.form.chatId,\n      }\n      return body\n    },\n    setProjectPathOptions() {\n      gitlabChatApi.getAllGitlabProjects()\n        .then(({data}) => {\n          this.projectPathOptions = data.data\n        })\n    },\n    getData(value?: string) {\n      const params: RequestGetGitlabChatConfigList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        project: value\n      }\n\n      this.configFilter = sessionStorage.getItem(this.$route.path)\n      this.configFilter = this.configFilter ? JSON.parse(this.configFilter) : {}\n      if (JSON.stringify(this.configFilter) !== \"{}\") {\n        Object.assign(params, this.configFilter)\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.configFilter[item.columnKey]\n        })\n      }\n\n      gitlabChatApi.getGitlabChatConfigList(params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n          this.tableData.forEach((item: typeGitlabChatData) => {\n            let chat = this.chatOptions.find((s: {id: number}) => String(s.id) === item.chatId)\n            item.chatName = chat.name\n            item.chatLarkId = chat.chatId\n          })\n        })\n    },\n    handleAddOrEdit(gitlabChatConfig?: typeGitlabChatData) {\n      console.log(gitlabChatConfig)\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        if (this.$refs.prMergedNotifyForm) {\n          this.$refs.prMergedNotifyForm.resetFields()\n        }\n        this.operation = operationEnum.ADD\n        //修改\n        if (gitlabChatConfig) {\n          this.operation = operationEnum.EDIT\n          this.form = cloneDeep(gitlabChatConfig)\n        } else {\n          this.form = prMergedNotifyForm\n        }\n        this.initOptions()\n      })\n    },\n    handleDelete(gitlabChatConfig: typeGitlabChatData) {\n      this.$alert('确认删除该配置?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            gitlabChatApi.deleteGitlabChatConfig(gitlabChatConfig.id)\n              .then(() => {\n                this.refresh()\n              })\n          }\n        }\n      })\n    },\n    handleSearch(value?: string) {\n      this.currentPage = 1\n      this.getData(value)\n    },\n    refresh() {\n      this.initTableData()\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.configFilter, this.$route.path)\n      this.initTableData()\n    },\n    setLarkChatOptions() {\n      // 群聊筛选\n      this.larkChatOptions = Object.entries(this.chatOptions).map(([key, value]) => {\n        // @ts-ignore\n        return {text: value.name, value: String(value.id), key: key}\n      })\n      console.log(this.larkChatOptions, this.chatOptions)\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/utils\";\n\n.card-content {\n  overflow-y: auto;\n}\n\n.dialog-title {\n  @extend %dialog-title;\n}\n</style>\n"]}]}