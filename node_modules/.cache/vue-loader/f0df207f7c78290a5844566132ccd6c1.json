{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/buried/TestBuried.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/buried/TestBuried.vue","mtime":1655949681780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdG9vbHRpcF9fcG9wcGVyewogIG1heC13aWR0aDo4MDBweAp9Cg=="},{"version":3,"sources":["TestBuried.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiZA;AACA;AACA","file":"TestBuried.vue","sourceRoot":"src/pages/track/buried","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    ref=\"headerTable\"\n                    placeholder=\"请输入行为用户UID\"\n                    :inputText=\"inputText\"\n                    :search_text=\"search_text\"\n                    :showCreate=\"false\"\n                    :showSearch=\"configId === ''\"\n                    :projDefaultSelect=\"projDefaultSelect\"\n                    :endVersion=\"endVersion\"\n                    :endVersionSelect=\"endVersionSelect\"\n                    :startVersion=\"startVersion\"\n                    :startVersionSelect=\"startVersionSelect\"\n                    :projectList=\"projectList\"\n                    :status=\"status\"\n                    :statusSelect=\"statusSelect\"\n                    :getProjectList=\"getProjectList\"\n                    :getEnumVersionList=\"getEnumVersionList\"\n                    :envSelect=\"envSelect\"\n                    :envList=\"envList\"\n                    :checkEvent=\"checkEvent\"\n                    v-on:updateSelectProjValue=\"updateSelectProjValue($event)\"\n                    v-on:getEventListValue=\"getEventListValue($event)\"\n                    v-on:checkEvent=\"checkEvent($event)\"\n      >\n\n\n        <template slot=\"title\">\n          <div>数据埋点</div>\n        </template>\n      </table-header>\n      <!--      <event-select></event-select>-->\n    </template>\n\n    <el-header>\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"end\">\n        <el-col :span=\"4\">\n          <el-input\n            placeholder=\"请输入行为用户的UID\"\n            size=\"mini\"\n            v-model=\"inputText\"\n            clearable>\n          </el-input>\n\n        </el-col>\n        <el-col :span=\"2\">\n          <el-button plain @click=\"operateEvent($event)\">批量操作</el-button>\n        </el-col>\n      </el-row>\n    </el-header>\n    <el-table :data=\"tableData\" size=\"medium\" @selection-change=\"handleSelectionChange\" >\n      <el-table-column\n        type=\"selection\"\n        v-model=\"multipleSelection\"\n        :default-sort=\"{prop: 'id', order: 'descending'}\"\n        width=\"50\">\n      </el-table-column>\n      <!--        <el-table-column prop=\"id\" label=\"事件自增ID\"/>-->\n      <el-table-column prop=\"eventKey\" label=\"事件ID\"></el-table-column>\n      <el-table-column prop=\"status\" label=\"事件状态\" :formatter=\"statusFormat\"></el-table-column>\n      <el-table-column prop=\"createUser\" label=\"事件创建人\"\t></el-table-column>\n\n      <el-table-column prop=\"createdTime\" label=\"事件创建时间\" :formatter=\"dateFormat\"></el-table-column>\n      <el-table-column prop=\"startVersion\" label=\"起始版本\"></el-table-column>\n      <el-table-column prop=\"endversion\" label=\"结束版本\"></el-table-column>\n\n\n    </el-table>\n\n\n    <el-dialog title=\"数据埋点检查(3min)\" :visible.sync=\"diaglogVisibel\" width=\"60%\">\n      <el-table\n        :data=\"checkData\"\n        size=\"medium\"\n        stripe\n        class=\"tableBox\"\n        row-class-name=\"warning-row\"\n        :default-sort=\"{prop: 'eventKey', order: 'descending'}\"\n        border=\"true\"\n      >\n        <!--        <el-table-column prop=\"id\" label=\"事件自增ID\" sortable />-->\n        <el-table-column prop=\"eventKey\" label=\"事件ID\" sortable width=\"100\"/>\n        <el-table-column prop=\"name\" label=\"名称\"/>\n        <el-table-column prop=\"eventDesc\" label=\"事件备注\" show-overflow-tooltip/>\n        <el-table-column prop=\"priority\" label=\"级别\"/>\n        <el-table-column prop=\"eventEventProper\" label=\"事件属性Key\" width=\"200\"/>\n        <el-table-column prop=\"eventEventProperValue\" label=\"埋点属性值\"/>\n        <el-table-column prop=\"eventTime\" label=\"埋点触发时间\" width=\"100\"/>\n        <el-table-column prop=\"result\" label=\"事件是否埋点\" sortable />\n        <el-table-column\n          prop=\"eventEventProperResult\" label=\"属性是否关联\"\n          sortable />\n        <el-table-column prop=\"eventUserAllPropsCK\" width=\"100\" label=\"用户属性记录\" resizable/>\n        <el-table-column prop=\"eventEventAllPropsCK\" width=\"500\" label=\"事件属性记录\" resizable/>\n\n      </el-table>\n\n    </el-dialog>\n    <table-pagination\n      :change=\"getPageEventListValue\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n</template>\n\n<script lang=\"ts\">\n\nimport apiBuried from \"@/api/testBuried\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\n\n\nimport {PAGINATION_SIZE} from \"@/constant\"\n\nimport TableHeader from \"@/pages/track/buried/components/TableHeader.vue\"\n\nexport default {\n  name: \"TestBuried\",\n  components: {\n    TablePagination,\n    TableHeader,\n\n  },\n  data() {\n    return {\n      //\n      inputText: '',\n      search_text: '',\n      //结果弹窗\n      diaglogVisibel: false,\n      multipleSelection: [],\n      checkData: [],\n      // 环境\n      envList: [\n        // {value: \"fat\", label: \"fat\"},\n        {value: \"prod\", label: \"prod\"},\n      ],\n      envSelect: \"prod\",\n\n      condition: {},\n      // 项目\n      projectList: [],\n      project_id: 1,\n      projDefaultSelect: \"\",\n      total: 0,\n      pageSize: PAGINATION_SIZE.LARGE,\n      currentPage: 1,\n      tableData: [],\n      userPipelineId: true,\n      //版本\n      endVersion: [],\n      startVersion: [],\n      endVersionSelect: \"\",\n      startVersionSelect: \"\",\n      //状态\n      statusSelect: \"\",\n      status: [\n        {value: \"online\", label: \"已上线\",},\n        {value: \"offline\", label: \"已下线\"},\n        {value: \"init\", label: \"创建中\",},\n        {value: \"test\", label: \"测试中\",},\n        {value: \"dev\", label: \"开发中\",},\n        {value: \"pre\", label: \"待上线\",},\n      ],\n    }\n  },\n  computed: {\n    configId() {\n      return this.$route.params.configId ? this.$route.params.configId : ''\n    }\n  },\n  mounted() {\n    this.initPageParams()\n\n  },\n  methods: {\n    checkEvent(msg:any){\n      var env = msg[0]\n      var project_id = msg[1]\n      var uid = msg[2]\n      console.log(this.multipleSelection)\n      if (this.multipleSelection.length === 0){\n        this.$message({\n          message: '请至少选择一项',\n          type: 'warning'\n        })\n      }else{\n\n        var sendparams = {\n          env: env,\n          uid: uid,\n          project_id: project_id,\n          event_keys: this.multipleSelection,\n          // platform: platform,\n        }\n\n        apiBuried.getTestBuriedCheckList(sendparams).then(res => {\n          console.log(res.data)\n          this.diaglogVisibel = true\n          this.checkData = res.data\n        })\n      }\n    },\n\n    handleSelectionChange(val:any){ this.multipleSelection = val },\n    dateFormat(row: any){\n      // return new Date(row.createTime).format('yyyy-MM-dd hh:mm:ss')\n      var dateFormat = function(timestamp: string){\n        var add0 = function(m: number){\n          return m < 10 ? '0' + m: m\n        }\n        var time = new Date(timestamp)    //先将时间戳转为Date对象，然后才能使用Date的方法\n        var year = time.getFullYear(),\n          month = time.getMonth() + 1 ,  //月份是从0开始的\n          day = time.getDate(),\n          hour = time.getHours(),\n          minute = time.getMinutes(),\n          second = time.getSeconds()\n        //add0()方法在后面定义\n        return  year+'-'+ add0(month)+'-'+ add0(day)+' '+ add0(hour)+':'+ add0(minute)+':'+ add0(second)\n      }\n      return dateFormat(row.createTime)\n    },\n    statusFormat(row:any){\n      for (let sta of this.status){\n        if (sta.value == row.status){\n          return sta.label\n        }\n      }\n    },\n\n    initPageParams(){\n      this.getProjectList(this.envSelect)\n    },\n    getProjectList(params: String){\n      // 获取项目数据并填充\n      console.log(params)\n      var body = {\n        \"env\": params\n      }\n      this.projectList = []\n      apiBuried.getTestBuriedProjList(body).then(res =>{\n        var respdata = res.data.data\n\n        for (let item of respdata){\n          // temp = {\"value\": item.name, \"label\": item.apiKey}\n          this.projectList.push({\"value\": item.id, \"label\": item.name, \"apiKey\": item.apiKey, \"platform\": item.platform})\n          // console.log({\"value\": item.apiKey, \"label\": item.name})\n        }\n\n      })\n\n    },\n    getPageEventListValue(){\n      let params = this.$refs.headerTable.projValueSelect\n      console.log('getPageEventListValue', params)\n      this.getEventListValue([this.envSelect, this.$refs.headerTable.statusValueSelect,\n        this.startVersionSelect, this.endVersionSelect])\n    },\n    // getEventListValue([env,status,start, end, search_text]){\n    getEventListValue(msg: any){\n      const env = msg[0];\n      const status = msg[1];\n      const start = msg[2];\n      const end = msg[3];\n      const search_text = msg[4];\n\n      // getEventListValue(status: Array, start: String, end: String, uid: String){\n      //   console.log(\"getEventListValue-func()\")\n\n      var tagfilters = {\"status\": status, \"filter\": null, \"start_version\": null, \"end_version\": null,\n        \"version\": {\"start_version\": null, \"end_version\": null}\n      }\n      if (search_text){\n        tagfilters['filter'] = search_text\n      }\n      if (start.length > 0){\n        tagfilters['start_version'] = start\n        tagfilters['version']['start_version'] = start\n\n      }\n      if (end.toString().length > 0){\n        tagfilters['end_version'] = end\n        tagfilters['version']['end_version'] = end\n        // if (tagfilters['version']){\n        //   tagfilters['version']['end_version'] = end\n        // }else{\n        //   tagfilters['version'] = {'end_version': end}\n        // }\n      }\n\n      var sendparams = {\n        \"page_size\": this.pageSize,\n        \"project_id\": this.mappingProjDevProd(this.projDefaultSelect),\n        \"filter\": null,\n        \"current_page\": this.currentPage,\n        \"tag_filter\": tagfilters,\n        \"env\": env,\n        // \"uid\": uid\n      }\n      apiBuried.getTestBuriedEventList(sendparams).then(res => {\n        this.tableData = res.data.data.list\n        this.total = res.data.data.totalCounts\n        console.log(\"this.projDefaultSelect\", this.projDefaultSelect)\n      })\n\n    },\n    mappingProjDevProd(project_id: number){\n      //  把项目的ID映射到线上的项目ID用来查询事件\n      const split_str = '^_^';\n      console.log(project_id, split_str)\n      for (let item of this.projectList){\n        if (project_id == item['value']){\n          let platform_split = item['label'].split(split_str)[0]\n          for (let plat of this.projectList){\n            if (platform_split == plat['label']){\n              console.log(\"映射后的项目ID\",plat['value'], plat['platform'])\n              return plat['value']\n            }\n          }\n        }\n        console.log(item, 'Web^_^dev'.split(split_str), 'Web'.split(split_str))\n\n      }\n    },\n    updateSelectProjValue(params: any){\n      // var tempprojDefaultSelect = params\n      this.projDefaultSelect = params.toString()\n      console.log('updateSelectProjValue', params, this.projDefaultSelect)\n      this.getEnumVersionList()\n      this.getEventListValue([this.envSelect, this.$refs.headerTable.statusValueSelect,\n        this.startVersionSelect, this.endVersionSelect])\n    },\n    getEnumVersionList(){\n      // 请求起始版本和结束版本数据//默认查询项目下的所有事件\n      var enumParams = {\n        env: this.envSelect,\n        project_id: this.mappingProjDevProd(this.projDefaultSelect),\n        columns: [\"startVersion\",\"endVersion\",\"status\"]\n      }\n      // console.log('enumParams', enumParams)\n      this.startVersion = []\n      this.endVersion = []\n      this.$refs.headerTable.startValueSelect = ''\n      this.$refs.headerTable.endValueSelect = ''\n      apiBuried.getTestBuriedEnumList(enumParams).then(res => {\n        let endVersionEnum = []\n        let startVersionEnum = []\n        let resp_data = res.data.data\n\n        if (Object.prototype.hasOwnProperty.call(resp_data, 'endVersion')){\n          endVersionEnum = resp_data.endVersion\n        }\n        if (Object.prototype.hasOwnProperty.call(resp_data, 'startVersion')){\n          startVersionEnum = resp_data.startVersion\n        }\n\n        for (let enums of endVersionEnum){\n          this.endVersion.push({\"value\": enums, \"label\": enums})\n        }\n        for (let enums of startVersionEnum){\n          this.startVersion.push({\"value\": enums, \"label\": enums})\n        }\n      })\n\n    },\n    getSelectProjApiKey(){\n      console.log('getSelectProjId', this.projDefaultSelect,)\n      for (let env of this.projectList){\n\n        if (env.value == this.projDefaultSelect){\n          return env.apiKey\n        }\n      }\n    },\n    operateEvent(){\n      this.checkEvent(\n        [this.$refs.headerTable.envValueSelect,\n          this.getSelectProjApiKey(this.$refs.headerTable.projValueSelect),\n          // this.$refs.headerTable.getSelectProjname(this.$refs.headerTable.projValueSelect),\n          this.inputText]\n      )\n    },\n    filterTag(value:any, row:any) {\n      return row.eventProperResult === value;\n    },\n\n    // tableRowClassName(row:any) {\n    //   if (row.eventProperResult == 'false' || row.result == 'false' || row.id=='false') {\n    //     return 'warning-row';\n    //   }\n    //   return '';\n    // }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.el-tooltip__popper{\n  max-width:800px\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.el-row {\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n.el-col {\n  border-radius: 4px;\n}\n\n\n.el-table .warning-row {\n  background-color: #8f1e45;\n}\n//.bg-purple-dark {\n//  background: #99a9bf;\n//}\n//.bg-purple {\n//  background: #d3dce6;\n//}\n//.bg-purple-light {\n//  background: #e5e9f2;\n//}\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n.row-bg {\n  padding: 5px 0;\n  background-color: #f9fafc;\n  margin-right: 0;\n}\n.tableBox {\n  th{\n    height: 30px;\n  }\n  td {\n    height: 30px;\n  }\n}\n\n\n\n</style>\n\n"]}]}