{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanEdit.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanEdit.vue","mtime":1655949681802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Y292ZXJhZ2VBcGksIGppcmFBcGksIHRlc3RQbGFuQXBpfSBmcm9tICJAL2FwaSIKaW1wb3J0IHtSZXF1ZXN0Q3JlYXRlVGVzdENhc2VQbGFuLCBSZXF1ZXN0R2V0VGVzdENhc2VQbGFuTGlzdCwgUmVxdWVzdFVwZGF0ZVRlc3RDYXNlUGxhbn0gZnJvbSAiQC9hcGkvdHlwZXMvdGVzdFBsYW4iCmltcG9ydCB7dHlwZVBsYW5EYXRhfSBmcm9tICJAL2FwaS90eXBlcy90ZXN0UGxhblR5cGUiCmltcG9ydCB2YXJpYWJsZXMgZnJvbSAiQC9hc3NldHMvY3NzL3V0aWxzLnNjc3MiCmltcG9ydCBEaWFsb2dGb290ZXIgZnJvbSAnQC9jb21tb24vY29tcG9uZW50cy9EaWFsb2dGb290ZXIudnVlJwppbXBvcnQge2RhdGVQaWNrZXJPcHRpb25zU3RhcnR9IGZyb20gIkAvY29tbW9uL3V0aWxzIgppbXBvcnQge29wZXJhdGlvbkVudW19IGZyb20gIkAvY29uc3RhbnQvVGVzdENhc2UiCmltcG9ydCB7cGxhblN0YWdlRW51bSwgcGxhblN0YXR1c0VudW19IGZyb20gIkAvY29uc3RhbnQvVGVzdFBsYW4iCmltcG9ydCBUZXN0UGxhblN0YXR1c0J1dHRvbiBmcm9tICJAL3BhZ2VzL3RyYWNrL3BsYW4vY29tbW9uL1Rlc3RQbGFuU3RhdHVzQnV0dG9uLnZ1ZSIKaW1wb3J0IHtwbGFuRm9ybSwgcGxhblJ1bGVzfSBmcm9tICJAL3BhZ2VzL3RyYWNrL3BsYW4vZm9ybXMiCmltcG9ydCB7Y2xvbmVEZWVwfSBmcm9tICJsb2Rhc2giCgovLyDorqHliJLnirbmgIEKLy8gY29uc3QgcGxhblN0YWdlT3B0aW9ucyA9IE9iamVjdC5lbnRyaWVzKHBsYW5TdGFnZVR5cGUpLm1hcCgoW3ZhbHVlLCB0ZXh0XSkgPT4gewovLyAgIHJldHVybiB7dGV4dDogdGV4dCwgdmFsdWU6IHZhbHVlfQovLyB9KQoKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVzdFBsYW5FZGl0IiwKICBjb21wb25lbnRzOiB7VGVzdFBsYW5TdGF0dXNCdXR0b24sIERpYWxvZ0Zvb3Rlcn0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wZXJhdGlvbkVudW06IG9wZXJhdGlvbkVudW0sCiAgICAgIHBsYW5TdGFnZUVudW06IHBsYW5TdGFnZUVudW0sCiAgICAgIHBsYW5TdGFnZU9wdGlvbnM6IFtdLAogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIGZvcm06IHBsYW5Gb3JtLAogICAgICBydWxlczogcGxhblJ1bGVzLAogICAgICBvcGVyYXRpb246ICcnLAogICAgICBvd25lck9wdGlvbnM6IFtdLAogICAgICBwcm9qZWN0T3B0aW9uczogW10sCiAgICAgIHN0b3J5T3B0aW9uczogW10sCiAgICAgIHNwcmludE9wdGlvbnM6IFtdLAogICAgICBwbGFuT3B0aW9uczogW10sCiAgICAgIHBpcGVsaW5lT3B0aW9uczogW10sCiAgICAgIHBpY2tlck9wdGlvbnNTdGFydDoge30sCiAgICB9CiAgfSwKICBwcm9wczogewogICAgY29uZGl0aW9uOiBPYmplY3QsCiAgfSwKICBjb21wdXRlZDogewogICAgZm9ybUxhYmVsV2lkdGgoKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXNbJ2Zvcm1MYWJlbFdpZHRoJ10KICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgJ2Zvcm0uc3ByaW50SWQnKCkgewogICAgICBqaXJhQXBpLmdldFN0b3J5QnlTcHJpbnQoe3NwcmludElkOiB0aGlzLmZvcm0uc3ByaW50SWR9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5zdG9yeU9wdGlvbnMgPSByZXMuZGF0YQogICAgICB9KQogICAgfSwKICAgICdmb3JtLnByb2pJZHMnKCkgewogICAgICB0aGlzLnNldFNwcmludE9wdGlvbnMoKQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJGV2ZW50QnVzLiRvbigndGVzdFBsYW5DcmVhdGVPclVwZGF0ZScsICh0ZXN0UGxhbjogdHlwZVBsYW5EYXRhLCBzdGFnZTogYW55KSA9PiB7CiAgICAgIHRoaXMub3Blbih0ZXN0UGxhbiwgc3RhZ2UpCiAgICAgIGNvbnNvbGUubG9nKCdzcHJpbnRJZCcsIHRoaXMuZm9ybS5zcHJpbnRJZCkKICAgIH0pCiAgICBjb3ZlcmFnZUFwaS5nZXRQaXBlbGluZUxpc3Qoe2xpbWl0OiAxMDAwfSkudGhlbihyZXMgPT4gewogICAgICB0aGlzLnBpcGVsaW5lT3B0aW9ucyA9IHJlcy5kYXRhLmRhdGEKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0T3B0aW9ucygpIHsKICAgICAgdGhpcy5vd25lck9wdGlvbnMgPSB0aGlzLmNvbmRpdGlvbi5vd25lck9wdGlvbnMKICAgICAgdGhpcy5wcm9qZWN0T3B0aW9ucyA9IHRoaXMuY29uZGl0aW9uLnByb2plY3RPcHRpb25zCiAgICAgIHRoaXMucGlja2VyT3B0aW9uc1N0YXJ0ID0gZGF0ZVBpY2tlck9wdGlvbnNTdGFydCgpCiAgICAgIHRoaXMuc2V0UGxhbk9wdGlvbnMoKQogICAgICAvLyB0aGlzLnNldFNwcmludE9wdGlvbnMoKQogICAgfSwKICAgIG9wZW4odGVzdFBsYW46IHR5cGVQbGFuRGF0YSwgc3RhZ2U6IGFueSkgewogICAgICB0aGlzLnBsYW5TdGFnZU9wdGlvbnMgPSBzdGFnZQogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5mb3JtID0gewogICAgICAgICAgc3RhdHVzOiBwbGFuU3RhdHVzRW51bS5JTklULAogICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICBwcm9qSWRzOiBbXSwKICAgICAgICAgIHByb2pOYW1lczogW10sCiAgICAgICAgICBvd25lcjogJycsCiAgICAgICAgICBzdGFnZTogJycsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgICB0YXJnZXRTdGFydDogJycsCiAgICAgICAgICB0YXJnZXRFbmQ6ICcnLAogICAgICAgICAgZXBpY3M6IFtdLAogICAgICAgICAgcGFyZW50OiAnJwogICAgICAgIH0KICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IG9wZXJhdGlvbkVudW0uQURECiAgICAgICAgLy/kv67mlLkKICAgICAgICBpZiAodGVzdFBsYW4pIHsKICAgICAgICAgIHRoaXMub3BlcmF0aW9uID0gb3BlcmF0aW9uRW51bS5FRElUCiAgICAgICAgICB0aGlzLmZvcm0gPSBjbG9uZURlZXAodGVzdFBsYW4pCiAgICAgICAgfQogICAgICAgIHRoaXMuaW5pdE9wdGlvbnMoKQogICAgICB9KQogICAgfSwKICAgIHNhdmVQbGFuKCkgewogICAgICB0aGlzLiRyZWZzLnBsYW5Gb3JtLnZhbGlkYXRlKCh2YWxpZDogYm9vbGVhbikgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlKCkpIHJldHVybiBmYWxzZQogICAgICAgICAgaWYgKHRoaXMub3BlcmF0aW9uID09PSBvcGVyYXRpb25FbnVtLkFERCkgewogICAgICAgICAgICBjb25zdCBib2R5OiBSZXF1ZXN0Q3JlYXRlVGVzdENhc2VQbGFuID0gdGhpcy5idWlsZFBhcmFtcygpCiAgICAgICAgICAgIHRlc3RQbGFuQXBpLmNyZWF0ZVRlc3RDYXNlUGxhbihib2R5KQogICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3JlZnJlc2gnKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3BlcmF0aW9uID09PSBvcGVyYXRpb25FbnVtLkVESVQpIHsKICAgICAgICAgICAgY29uc3QgYm9keTogUmVxdWVzdFVwZGF0ZVRlc3RDYXNlUGxhbiA9IHRoaXMuYnVpbGRQYXJhbXMoKQogICAgICAgICAgICB0ZXN0UGxhbkFwaS51cGRhdGVUZXN0Q2FzZVBsYW4odGhpcy5mb3JtLmlkLCBib2R5KQogICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3JlZnJlc2gnKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIHZhbGlkYXRlKCkgewogICAgICBpZiAodGhpcy5mb3JtLnRhcmdldFN0YXJ0ID4gdGhpcy5mb3JtLnRhcmdldEVuZCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn5byA5aeL5pel5pyf5LiN6IO95aSn5LqO57uT5p2f5pel5pyfJykKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQogICAgICByZXR1cm4gdHJ1ZQogICAgfSwKICAgIGJ1aWxkUGFyYW1zKCkgewogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmZvcm0ucHJvaklkcywgdGhpcy5wcm9qZWN0T3B0aW9ucykKICAgICAgbGV0IGJvZHk6IFJlcXVlc3RDcmVhdGVUZXN0Q2FzZVBsYW4gfCBSZXF1ZXN0VXBkYXRlVGVzdENhc2VQbGFuID0gewogICAgICAgIG5hbWU6IHRoaXMuZm9ybS5uYW1lLAogICAgICAgIHN0YWdlOiB0aGlzLmZvcm0uc3RhZ2UsCiAgICAgICAgcHJvaklkczogdGhpcy5mb3JtLnByb2pJZHMsCiAgICAgICAgcHJvak5hbWVzOiB0aGlzLmZvcm0ucHJvaklkcy5tYXAoKGlkOiBhbnkpID0+IHsKICAgICAgICAgIHJldHVybiB0aGlzLnByb2plY3RPcHRpb25zLmZpbmQoKG9iajogeyBpZDogYW55IH0pID0+IG9iai5pZCA9PT0gaWQpLm5hbWUKICAgICAgICB9KSwKICAgICAgICBvd25lcjogdGhpcy5mb3JtLm93bmVyLAogICAgICAgIHRhcmdldFN0YXJ0OiB0aGlzLmZvcm0udGFyZ2V0U3RhcnQgfHwgdW5kZWZpbmVkLAogICAgICAgIHRhcmdldEVuZDogdGhpcy5mb3JtLnRhcmdldEVuZCB8fCB1bmRlZmluZWQsCiAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuZm9ybS5kZXNjcmlwdGlvbiwKICAgICAgICBzdG9yeUlkczogdGhpcy5mb3JtLnN0b3J5SWRzIHx8IHVuZGVmaW5lZCwKICAgICAgICBwaXBlbGluZUlkczogdGhpcy5mb3JtLnBpcGVsaW5lSWRzIHx8IHVuZGVmaW5lZCwKICAgICAgICBzcHJpbnRJZDogdGhpcy5mb3JtLnNwcmludElkLAogICAgICAgIHN0YXR1czogdGhpcy5mb3JtLnN0YXR1cywKICAgICAgfQogICAgICBpZiAoYm9keS5zdGFnZSA9PT0gcGxhblN0YWdlRW51bS5TTU9LRSkgewogICAgICAgIGJvZHkgPSBPYmplY3QuYXNzaWduKHtwYXJlbnQ6IHRoaXMuZm9ybS5wYXJlbnR9LCBib2R5KQogICAgICB9CiAgICAgIHJldHVybiBib2R5CiAgICB9LAogICAgc3RhdHVzQ2hhbmdlKHN0YXR1czogYW55KSB7CiAgICAgIHRoaXMuZm9ybS5zdGF0dXMgPSBzdGF0dXMKICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKQogICAgfSwKICAgIHNldFBsYW5PcHRpb25zKHZhbHVlPzogYW55KSB7CiAgICAgIGNvbnN0IHBhcmFtczogUmVxdWVzdEdldFRlc3RDYXNlUGxhbkxpc3QgPSB7CiAgICAgICAgc3RhZ2U6IHBsYW5TdGFnZUVudW0uU1lTVEVNLAogICAgICAgIG5hbWU6IHZhbHVlIHx8ICcnCiAgICAgIH0KICAgICAgdGVzdFBsYW5BcGkuZ2V0VGVzdENhc2VQbGFuTGlzdChwYXJhbXMpCiAgICAgICAgLnRoZW4oKHtkYXRhfSkgPT4gewogICAgICAgICAgdGhpcy5wbGFuT3B0aW9ucyA9IGRhdGEuZGF0YQogICAgICAgIH0pCiAgICB9LAogICAgc2V0U3ByaW50T3B0aW9ucygpIHsKICAgICAgdGhpcy5zcHJpbnRPcHRpb25zID0gW10KICAgICAgdGhpcy5mb3JtLnByb2pJZHMuZm9yRWFjaCgoaXRlbTogYW55KSA9PnsKICAgICAgICBjb25zb2xlLmxvZygncHJvaicsIGl0ZW0pCiAgICAgICAgamlyYUFwaS5nZXRTcHJpbnRCeVByb2plY3Qoe3Byb2pJZDogaXRlbX0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgIHRoaXMuc3ByaW50T3B0aW9ucyA9IHRoaXMuc3ByaW50T3B0aW9ucy5jb25jYXQocmVzLmRhdGEuZGF0YXMpCiAgICAgICAgfSkKICAgICAgfSkKICAgICAgLy8gamlyYUFwaS5nZXRTcHJpbnRCeVByb2plY3Qoe3NlYXJjaDogdmFsdWUgfHwgJycsIGVwaWNzOiB0aGlzLmZvcm0uZXBpY3N9KQogICAgICAvLyAgIC50aGVuKCh7ZGF0YX0pID0+IHsKICAgICAgLy8gICAgIHRoaXMuZXBpY09wdGlvbnMgPSBkYXRhCiAgICAgIC8vICAgfSkKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["TestPlanEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestPlanEdit.vue","sourceRoot":"src/pages/track/plan/components","sourcesContent":["<template>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    :title=\"operation === operationEnum.EDIT? '编辑测试计划' : '创建测试计划'\"\n    :visible.sync=\"dialogFormVisible\"\n    class=\"dialog-title\"\n    width=\"65%\"\n  >\n\n    <el-form ref=\"planForm\" :model=\"form\" :rules=\"rules\">\n\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"计划名称\" prop=\"name\">\n            <el-input v-model=\"form.name\" placeholder=\"请输入测试计划名称\"/>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"所属项目\" prop=\"projIds\">\n            <el-select\n              v-model=\"form.projIds\"\n              filterable\n              multiple\n              placeholder=\"请选择所属项目\"\n              style=\"width: 100%\"\n            >\n              <el-option\n                v-for=\"item in projectOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"负责人\" prop=\"owner\">\n            <el-select v-model=\"form.owner\" filterable placeholder=\"请选择负责人\" style=\"width: 100%\">\n              <el-option\n                v-for=\"item in ownerOptions\"\n                :key=\"item.value\"\n                :label=\"item.text\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"测试阶段\" prop=\"stage\">\n            <el-select v-model=\"form.stage\" placeholder=\"请选择测试阶段\" style=\"width: 100%\">\n              <el-option\n                v-for=\"item in planStageOptions\"\n                :key=\"item.value\"\n                :label=\"item.text\"\n                :value=\"item.value\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"计划开始\" prop=\"targetStart\">\n            <el-date-picker\n              v-model=\"form.targetStart\"\n              :picker-options=\"pickerOptionsStart\"\n              placeholder=\"计划开始\"\n              style=\"width: 100%\"\n              type=\"datetime\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n            />\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"计划结束\" prop=\"targetEnd\">\n            <el-date-picker\n              v-model=\"form.targetEnd\"\n              :picker-options=\"pickerOptionsStart\"\n              placeholder=\"计划结束\"\n              style=\"width: 100%\"\n              type=\"datetime\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n            />\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row>\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"迭代\" prop=\"sprintId\">\n            <el-select\n              v-model=\"form.sprintId\"\n              filterable\n              placeholder=\"请选择sprint\"\n              style=\"width: 100%\"\n            >\n              <el-option\n                v-for=\"item in sprintOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col v-if=\"form.stage === planStageEnum.SMOKE\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"对应功能测试\" prop=\"parent\">\n            <el-select\n              v-model=\"form.parent\"\n              :remote-method=\"setPlanOptions\"\n              filterable\n              placeholder=\"请选择对应功能测试计划\"\n              remote\n              style=\"width: 100%\"\n            >\n              <el-option\n                v-for=\"item in planOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row class=\"row-content\" v-if=\"form.stage === planStageEnum.SMOKE && ['', '0',null, undefined].indexOf(form.sprintId) < 0\">\n        <el-col :offset=\"1\" :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"需求\" prop=\"storyIds\">\n            <el-select v-model=\"form.storyIds\" filterable multiple :multiple-limit=\"1\" placeholder=\"请选择冒烟需求\" style=\"width: 100%\">\n              <el-option v-for=\"item in storyOptions\"\n              :key=\"item.id\"\n              :label=\"item.summary\"\n              :value=\"item.id\"/>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"10\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"应用\" prop=\"pipelineIds\">\n            <el-select v-model=\"form.pipelineIds\" filterable multiple placeholder=\"请选择关联工程\" style=\"width: 100%\">\n              <el-option v-for=\"item in pipelineOptions\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"/>\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row class=\"row-content\">\n        <el-col :offset=\"1\" :span=\"20\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"描述\">\n            <el-input\n              v-model=\"form.description\"\n              :autosize=\"{ minRows: 2, maxRows: 4}\"\n              :rows=\"2\"\n              placeholder=\"请输入内容\"\n              type=\"textarea\"\n            />\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-row v-if=\"operation === operationEnum.EDIT\" class=\"row-content\">\n        <el-col :offset=\"1\" :span=\"18\">\n          <el-form-item :label-width=\"formLabelWidth\" label=\"当前状态\">\n            <test-plan-status-button\n              :show-reject=\"form.stage === planStageEnum.SMOKE\"\n              :status=\"form.status\"\n              @statusChange=\"statusChange\"\n            />\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n    </el-form>\n\n    <template slot=\"footer\">\n      <dialog-footer @cancel=\"dialogFormVisible = false\" @confirm=\"savePlan\"/>\n    </template>\n  </el-dialog>\n</template>\n\n<script lang=\"ts\">\nimport {coverageApi, jiraApi, testPlanApi} from \"@/api\"\nimport {RequestCreateTestCasePlan, RequestGetTestCasePlanList, RequestUpdateTestCasePlan} from \"@/api/types/testPlan\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport {datePickerOptionsStart} from \"@/common/utils\"\nimport {operationEnum} from \"@/constant/TestCase\"\nimport {planStageEnum, planStatusEnum} from \"@/constant/TestPlan\"\nimport TestPlanStatusButton from \"@/pages/track/plan/common/TestPlanStatusButton.vue\"\nimport {planForm, planRules} from \"@/pages/track/plan/forms\"\nimport {cloneDeep} from \"lodash\"\n\n// 计划状态\n// const planStageOptions = Object.entries(planStageType).map(([value, text]) => {\n//   return {text: text, value: value}\n// })\n\n\nexport default {\n  name: \"TestPlanEdit\",\n  components: {TestPlanStatusButton, DialogFooter},\n  data() {\n    return {\n      operationEnum: operationEnum,\n      planStageEnum: planStageEnum,\n      planStageOptions: [],\n      dialogFormVisible: false,\n      form: planForm,\n      rules: planRules,\n      operation: '',\n      ownerOptions: [],\n      projectOptions: [],\n      storyOptions: [],\n      sprintOptions: [],\n      planOptions: [],\n      pipelineOptions: [],\n      pickerOptionsStart: {},\n    }\n  },\n  props: {\n    condition: Object,\n  },\n  computed: {\n    formLabelWidth() {\n      return variables['formLabelWidth']\n    },\n  },\n  watch: {\n    'form.sprintId'() {\n      jiraApi.getStoryBySprint({sprintId: this.form.sprintId}).then(res => {\n        this.storyOptions = res.data\n      })\n    },\n    'form.projIds'() {\n      this.setSprintOptions()\n    }\n  },\n  mounted() {\n    this.$eventBus.$on('testPlanCreateOrUpdate', (testPlan: typePlanData, stage: any) => {\n      this.open(testPlan, stage)\n      console.log('sprintId', this.form.sprintId)\n    })\n    coverageApi.getPipelineList({limit: 1000}).then(res => {\n      this.pipelineOptions = res.data.data\n    })\n  },\n  methods: {\n    initOptions() {\n      this.ownerOptions = this.condition.ownerOptions\n      this.projectOptions = this.condition.projectOptions\n      this.pickerOptionsStart = datePickerOptionsStart()\n      this.setPlanOptions()\n      // this.setSprintOptions()\n    },\n    open(testPlan: typePlanData, stage: any) {\n      this.planStageOptions = stage\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.form = {\n          status: planStatusEnum.INIT,\n          name: '',\n          projIds: [],\n          projNames: [],\n          owner: '',\n          stage: '',\n          description: '',\n          targetStart: '',\n          targetEnd: '',\n          epics: [],\n          parent: ''\n        }\n        this.operation = operationEnum.ADD\n        //修改\n        if (testPlan) {\n          this.operation = operationEnum.EDIT\n          this.form = cloneDeep(testPlan)\n        }\n        this.initOptions()\n      })\n    },\n    savePlan() {\n      this.$refs.planForm.validate((valid: boolean) => {\n        if (valid) {\n          if (!this.validate()) return false\n          if (this.operation === operationEnum.ADD) {\n            const body: RequestCreateTestCasePlan = this.buildParams()\n            testPlanApi.createTestCasePlan(body)\n              .then(() => {\n                this.$emit('refresh')\n              })\n          } else if (this.operation === operationEnum.EDIT) {\n            const body: RequestUpdateTestCasePlan = this.buildParams()\n            testPlanApi.updateTestCasePlan(this.form.id, body)\n              .then(() => {\n                this.$emit('refresh')\n              })\n          }\n          this.dialogFormVisible = false\n        } else {\n          return false\n        }\n      })\n    },\n    validate() {\n      if (this.form.targetStart > this.form.targetEnd) {\n        this.$message.warning('开始日期不能大于结束日期')\n        return false\n      }\n      return true\n    },\n    buildParams() {\n      // console.log(this.form.projIds, this.projectOptions)\n      let body: RequestCreateTestCasePlan | RequestUpdateTestCasePlan = {\n        name: this.form.name,\n        stage: this.form.stage,\n        projIds: this.form.projIds,\n        projNames: this.form.projIds.map((id: any) => {\n          return this.projectOptions.find((obj: { id: any }) => obj.id === id).name\n        }),\n        owner: this.form.owner,\n        targetStart: this.form.targetStart || undefined,\n        targetEnd: this.form.targetEnd || undefined,\n        description: this.form.description,\n        storyIds: this.form.storyIds || undefined,\n        pipelineIds: this.form.pipelineIds || undefined,\n        sprintId: this.form.sprintId,\n        status: this.form.status,\n      }\n      if (body.stage === planStageEnum.SMOKE) {\n        body = Object.assign({parent: this.form.parent}, body)\n      }\n      return body\n    },\n    statusChange(status: any) {\n      this.form.status = status\n      this.$forceUpdate()\n    },\n    setPlanOptions(value?: any) {\n      const params: RequestGetTestCasePlanList = {\n        stage: planStageEnum.SYSTEM,\n        name: value || ''\n      }\n      testPlanApi.getTestCasePlanList(params)\n        .then(({data}) => {\n          this.planOptions = data.data\n        })\n    },\n    setSprintOptions() {\n      this.sprintOptions = []\n      this.form.projIds.forEach((item: any) =>{\n        console.log('proj', item)\n        jiraApi.getSprintByProject({projId: item}).then(res => {\n          this.sprintOptions = this.sprintOptions.concat(res.data.datas)\n        })\n      })\n      // jiraApi.getSprintByProject({search: value || '', epics: this.form.epics})\n      //   .then(({data}) => {\n      //     this.epicOptions = data\n      //   })\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n@import \"src/assets/css/utils\";\n\n.dialog-title {\n  @extend %dialog-title;\n}\n\n.row-content {\n  margin-top: 10px;\n  @extend %flex-left-center-row;\n}\n</style>\n"]}]}