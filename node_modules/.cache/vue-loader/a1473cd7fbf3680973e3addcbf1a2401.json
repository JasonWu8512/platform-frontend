{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/common/components/search/TableAdvSearchBar.vue?vue&type=style&index=0&id=77d8b54d&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/common/components/search/TableAdvSearchBar.vue","mtime":1655949681765},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWR2LXNlYXJjaC1iYXIgewogIG1hcmdpbi1sZWZ0OiA1cHg7Cn0KCi5kaWFsb2ctZm9vdGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5zZWFyY2gtaXRlbXMgewogIHdpZHRoOiAxMDAlOwp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0NjlweCkgewogIC5zZWFyY2gtaXRlbSB7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ3MHB4KSB7CiAgLnNlYXJjaC1pdGVtIHsKICAgIHdpZHRoOiA1MCU7CiAgfQp9Cgouc2VhcmNoLWl0ZW0gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW4tdG9wOiAxMHB4Owp9Cg=="},{"version":3,"sources":["TableAdvSearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TableAdvSearchBar.vue","sourceRoot":"src/common/components/search","sourcesContent":["<template>\n  <span class=\"adv-search-bar\">\n    <el-button type=\"text\" @click=\"open\">高级搜索</el-button>\n    <el-dialog\n      :append-to-body=\"true\"\n      :visible=\"visible\"\n      custom-class=\"adv-dialog\"\n      title=\"组合查询\"\n      @close=\"visible = false\"\n    >\n      <div class=\"search-items\">\n        <component\n          :is=\"component.name\"\n          v-for=\"(component, index) in config.components\"\n          :key=\"index\"\n          :component=\"component\"\n          class=\"search-item\"\n        />\n        </div>\n      <template slot=\"footer\">\n        <div class=\"dialog-footer\">\n          <el-button @click=\"reset\">重置</el-button>\n          <el-button type=\"primary\" @click=\"search\">查询</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport components from \"@/common/components/search/search-components\"\nimport {cloneDeep} from \"lodash\"\n\nexport default {\n  name: \"TableAdvSearchBar\",\n  components: {...components},\n  props: {\n    condition: Object,\n  },\n  data() {\n    return {\n      visible: false,\n      config: this.init()\n    }\n  },\n  methods: {\n    init() {\n      let config = cloneDeep(this.condition);\n      config.components.forEach((component: any) => {\n        let operator = component.operator.value;\n        component.operator.value = operator === undefined ? component.operator.options[0].value : operator;\n      })\n      return config;\n    },\n    search() {\n      let condition: any = {}\n      this.config.components.forEach((component: any) => {\n        let operator = component.operator.value;\n        let value = component.value;\n        if (Array.isArray(value)) {\n          if (value.length > 0) {\n            condition[component.key] = {\n              operator: operator,\n              value: value\n            }\n          }\n        } else {\n          if (value !== undefined && value !== null && value !== \"\") {\n            condition[component.key] = {\n              operator: operator,\n              value: value\n            }\n          }\n        }\n      });\n\n      // 清除name\n      if (this.condition.name) this.condition.name = undefined;\n      // 添加组合条件\n      this.condition.combine = condition;\n      this.$emit('update:condition', this.condition);\n      this.$emit('search', condition);\n      this.visible = false;\n    },\n    reset() {\n      let source = this.condition.components;\n      this.config.components.forEach((component: any, index: any) => {\n        if (component.operator.value !== undefined) {\n          let operator = source[index].operator.value;\n          component.operator.value = operator === undefined ? component.operator.options[0].value : operator;\n        }\n        if (component.value !== undefined) {\n          component.value = source[index].value;\n        }\n      })\n      this.condition.combine = undefined;\n      this.$emit('update:condition', this.condition);\n      this.$emit('search');\n    },\n    open() {\n      this.visible = true;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.adv-search-bar {\n  margin-left: 5px;\n}\n\n.dialog-footer {\n  text-align: center;\n}\n\n.search-items {\n  width: 100%;\n}\n\n@media only screen and (max-width: 1469px) {\n  .search-item {\n    width: 100%;\n  }\n}\n\n@media only screen and (min-width: 1470px) {\n  .search-item {\n    width: 50%;\n  }\n}\n\n.search-item {\n  display: inline-block;\n  margin-top: 10px;\n}\n</style>\n"]}]}