{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/auto_eventTrack/AutoEventTrackConfigList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/auto_eventTrack/AutoEventTrackConfigList.vue","mtime":1658305356609},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHthdXRvRXZlbnRUcmFja0FwaX0gZnJvbSAiQC9hcGkiCmltcG9ydCBUYWJsZVBhZ2luYXRpb24gZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9wYWdpbmF0aW9uL1RhYmxlUGFnaW5hdGlvbi52dWUiCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlSGVhZGVyLnZ1ZSIKaW1wb3J0IFRhYmxlT3BlcmF0b3IgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSIKaW1wb3J0IHtQQUdJTkFUSU9OX1NJWkV9IGZyb20gIkAvY29uc3RhbnQiCmltcG9ydCB7UGF0aE5hbWV9IGZyb20gIkAvY29uc3RhbnQvcm91dGVEYXRhIgppbXBvcnQgQXV0b0V2ZW50VHJhY2tDb25maWdFZGl0IGZyb20gIkAvcGFnZXMvYXV0b19ldmVudFRyYWNrL2NvbXBvbmVudHMvQXV0b0V2ZW50VHJhY2tDb25maWdFZGl0LnZ1ZSIKZXhwb3J0IGRlZmF1bHQgewpuYW1lOiAiQXV0b0V2ZW50VHJhY2tDb25maWdMaXN0IiwKICBjb21wb25lbnRzOiB7VGFibGVIZWFkZXIsIFRhYmxlUGFnaW5hdGlvbiwgVGFibGVPcGVyYXRvciwgQXV0b0V2ZW50VHJhY2tDb25maWdFZGl0fSwKICBkYXRhKCkgewogIHJldHVybiB7CiAgICBub1BvbGxpbmc6IHRydWUsCiAgICBjcmVhdGVWaXNpYmxlOiBmYWxzZSwKICAgIGNvbmRpdGlvbjoge30sCiAgICB0b3RhbDogMCwKICAgIHBhZ2VTaXplOiBQQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICBjdXJyZW50UGFnZTogMSwKICAgIHRhYmxlRGF0YTogW10KICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbG9hZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmxvYWRpbmcKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5wb2xsaW5nRGF0YUxpc3QoKQogIH0sCiAgZGVzdHJveWVkKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLm15SW50ZXJ2YWwpCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRBdXRvRXZlbnRUcmFja0NvbmZpZ0xpc3QodmFsdWU/OiBzdHJpbmcpIHsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIGxpbWl0OiB0aGlzLnBhZ2VTaXplLAogICAgICAgIG9mZnNldDogdGhpcy5wYWdlU2l6ZSAqICh0aGlzLmN1cnJlbnRQYWdlIC0gMSksCiAgICAgICAgbmFtZTogdmFsdWUsCiAgICAgIH0KICAgICAgYXV0b0V2ZW50VHJhY2tBcGkuZ2V0QXV0b0V2ZW50VHJhY2tDYXNlQ29uZmlnTGlzdChwYXJhbXMpLnRoZW4oIAogICAgICAgIHJlcyA9PiB7CiAgICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlcy5kYXRhLmRhdGEKICAgICAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS50b3RhbAogICAgICAgICAgdGhpcy5ub1BvbGxpbmcgPSB0cnVlCiAgICAgICAgfQogICAgICApCiAgICB9LAogICAgcG9sbGluZ0RhdGFMaXN0KHZhbHVlPzogc3RyaW5nKSB7CiAgICAgIHRoaXMuZ2V0QXV0b0V2ZW50VHJhY2tDb25maWdMaXN0KHZhbHVlKQogICAgICBjbGVhckludGVydmFsKHRoaXMubXlJbnRlcnZhbCkKICAgICAgdGhpcy5teUludGVydmFsID0gd2luZG93LnNldEludGVydmFsKCgpID0+IHsKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMubm9Qb2xsaW5nID0gZmFsc2UKICAgICAgICAgIHRoaXMuZ2V0QXV0b0V2ZW50VHJhY2tDb25maWdMaXN0KHZhbHVlKQogICAgICAgIH0sIDEpCiAgICAgIH0sIDMwMDApCiAgICB9LAogICAgaGFuZGxlUG9sbGluZ0RhdGFMaXN0KHZhbHVlPzogc3RyaW5nKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxCiAgICAgIHRoaXMucG9sbGluZ0RhdGFMaXN0KHZhbHVlKQogICAgfSwKICAgIGhhbmRsZUFkZE9yRWRpdChwaXBlbGluZT86IGFueSkgewogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gRE9NIOeOsOWcqOabtOaWsOS6hgogICAgICAgIHRoaXMuJHJlZnMuZWRpdC5vcGVuKHBpcGVsaW5lKQogICAgICB9KQogICAgfSwKICAgIC8vIOWIoOmZpOa1geawtOe6vwogICAgaGFuZGxlRGVsZXRlKHJvdz86IGFueSkgewogICAgICB0aGlzLiRhbGVydCgn56Gu6K6k5Yig6Zmk6Ieq5Yqo5YyW6YWN572uPycsICcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgY2FsbGJhY2s6IChhY3Rpb246IHN0cmluZykgPT4gewogICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2NvbmZpcm0nKSB7CiAgICAgICAgICAgIGF1dG9FdmVudFRyYWNrQXBpLmRlbGV0ZUF1dG9FdmVudFRyYWNrQ29uZmlnKHJvdy5pZCkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmdldEF1dG9FdmVudFRyYWNrQ29uZmlnTGlzdCgpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApCiAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVUb0J1aWxkUmVjb3JkKHJvdz86IGFueSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogUGF0aE5hbWUuQXV0b0Nhc2VCdWlsZFJlY29yZEJ5Q29uZmlnSWQsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBjb25maWdJZDogcm93LmlkCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVJ1bihyb3c/OiBhbnkpIHsKICAgICAgdGhpcy4kYWxlcnQoJ+ehruWumuaJp+ihjOivpeiHquWKqOWMlueUqOS+i+mbhj8nLCAnJywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIGNhbGxiYWNrOiAoYWN0aW9uOiBzdHJpbmcpID0+IHsKICAgICAgICAgIGlmIChhY3Rpb24gPT09ICdjb25maXJtJykgewogICAgICAgICAgICBhdXRvRXZlbnRUcmFja0FwaS5ydW5BdXRvRXZlbnRUcmFja0NvbmZpZyhyb3cuaWQpLnRoZW4oKQogICAgICAgICAgfQogICAgICB9CiAgICB9KQogICAgfQogIH0KCn0K"},{"version":3,"sources":["AutoEventTrackConfigList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"AutoEventTrackConfigList.vue","sourceRoot":"src/pages/auto_eventTrack","sourcesContent":["<template>\n  <el-card class=\"card-content\" >\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    create-tip=\"创建自动化配置\"\n                    @create=\"handleAddOrEdit\"\n                    @search=\"handlePollingDataList\" \n      >\n        <template slot=\"title\">\n          <div>埋点自动化配置</div>\n        </template>\n      </table-header>\n\n    </template>\n\n    <el-table :data=\"tableData\" size=\"medium\" v-loading=\"loading && noPolling\">\n      <el-table-column label=\"名称\" prop=\"name\"/>\n      <el-table-column label=\"执行方式\" prop=\"runMethod\"/>\n      <el-table-column label=\"创建者\" prop=\"creator\"/>\n      <el-table-column label=\"定时表达式\" prop=\"crontabSchedule\"/>\n      <el-table-column label=\"定时执行\" prop=\"enableAutoTrigger\">\n        <template v-slot:default=\"scope\">\n          <span>{{scope.row.enableAutoTrigger? '是': '否'}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            copy-tip=\"执行记录\"\n            show-copy\n            show-delete\n            show-edit\n            show-run\n            :run-tip=\"scope.row.status === 'running' ? '正在执行': '执行'\"\n            @copyClick=\"handleToBuildRecord(scope.row)\"\n            @deleteClick=\"handleDelete(scope.row)\"\n            @editClick=\"handleAddOrEdit(scope.row)\"\n            @runClick=\"handleRun(scope.row)\"\n            :runDisable=\"scope.row.status === 'running'\"\n          >\n          </table-operator>\n        </template>\n      </el-table-column>\n\n    </el-table>\n    <table-pagination\n      :change=\"getAutoConfigList\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n    <auto-config-edit ref=\"edit\" @fatherMethod=\"getAutoConfigList\"></auto-config-edit>\n\n  </el-card>\n</template>\n\n<script lang=\"ts\">\nimport {autoEventTrackApi} from \"@/api\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport AutoEventTrackConfigEdit from \"@/pages/auto_eventTrack/components/AutoEventTrackConfigEdit.vue\"\nexport default {\nname: \"AutoEventTrackConfigList\",\n  components: {TableHeader, TablePagination, TableOperator, AutoEventTrackConfigEdit},\n  data() {\n  return {\n    noPolling: true,\n    createVisible: false,\n    condition: {},\n    total: 0,\n    pageSize: PAGINATION_SIZE.LARGE,\n    currentPage: 1,\n    tableData: []\n  }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  mounted() {\n    this.pollingDataList()\n  },\n  destroyed() {\n    clearInterval(this.myInterval)\n  },\n  methods: {\n    getAutoEventTrackConfigList(value?: string) {\n      const params = {\n        limit: this.pageSize,\n        offset: this.pageSize * (this.currentPage - 1),\n        name: value,\n      }\n      autoEventTrackApi.getAutoEventTrackCaseConfigList(params).then( \n        res => {\n          this.tableData = res.data.data\n          this.total = res.data.total\n          this.noPolling = true\n        }\n      )\n    },\n    pollingDataList(value?: string) {\n      this.getAutoEventTrackConfigList(value)\n      clearInterval(this.myInterval)\n      this.myInterval = window.setInterval(() => {\n        setTimeout(() => {\n          this.noPolling = false\n          this.getAutoEventTrackConfigList(value)\n        }, 1)\n      }, 3000)\n    },\n    handlePollingDataList(value?: string) {\n      this.currentPage = 1\n      this.pollingDataList(value)\n    },\n    handleAddOrEdit(pipeline?: any) {\n      this.$nextTick(function () {\n        // DOM 现在更新了\n        this.$refs.edit.open(pipeline)\n      })\n    },\n    // 删除流水线\n    handleDelete(row?: any) {\n      this.$alert('确认删除自动化配置?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            autoEventTrackApi.deleteAutoEventTrackConfig(row.id).then(() => {\n                this.getAutoEventTrackConfigList()\n              }\n            )\n          }\n          }\n        })\n    },\n    handleToBuildRecord(row?: any) {\n      this.$router.push({\n        name: PathName.AutoCaseBuildRecordByConfigId,\n        params: {\n          configId: row.id\n        }\n      })\n    },\n    handleRun(row?: any) {\n      this.$alert('确定执行该自动化用例集?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            autoEventTrackApi.runAutoEventTrackConfig(row.id).then()\n          }\n      }\n    })\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}