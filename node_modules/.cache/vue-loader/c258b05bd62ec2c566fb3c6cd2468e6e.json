{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/autoEventTrack/AutoEventTrackConfigBuildRecord.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/autoEventTrack/AutoEventTrackConfigBuildRecord.vue","mtime":1670293167370},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge2F1dG9FdmVudFRyYWNrQXBpfSBmcm9tICJAL2FwaSIKaW1wb3J0IFRhYmxlUGFnaW5hdGlvbiBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL3BhZ2luYXRpb24vVGFibGVQYWdpbmF0aW9uLnZ1ZSIKaW1wb3J0IFRhYmxlSGVhZGVyIGZyb20gIkAvY29tbW9uL2NvbXBvbmVudHMvVGFibGVIZWFkZXIudnVlIgppbXBvcnQgIFRhYmxlT3BlcmF0b3IgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZU9wZXJhdG9yLnZ1ZSIKaW1wb3J0IHtQQUdJTkFUSU9OX1NJWkV9IGZyb20gIkAvY29uc3RhbnQiCmltcG9ydCB7UGF0aE5hbWV9IGZyb20gIkAvY29uc3RhbnQvcm91dGVEYXRhIgoKZXhwb3J0IGRlZmF1bHQgewpuYW1lOiAiQXV0b0V2ZW50VHJhY2tDb25maWdCdWlsZFJlY29yZCIsCiAgY29tcG9uZW50czoge1RhYmxlUGFnaW5hdGlvbiwgVGFibGVIZWFkZXIsIFRhYmxlT3BlcmF0b3J9LAogIGRhdGEoKSB7CiAgcmV0dXJuIHsKICAgIGNvbmRpdGlvbjoge30sCiAgICB0b3RhbDogMCwKICAgIHBhZ2VTaXplOiBQQUdJTkFUSU9OX1NJWkUuTEFSR0UsCiAgICBjdXJyZW50UGFnZTogMSwKICAgIHRhYmxlRGF0YTogW10sCiAgICB1c2VyUGlwZWxpbmVJZDogdHJ1ZSwKICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY29uZmlnSWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXMuY29uZmlnSWQgPyB0aGlzLiRyb3V0ZS5wYXJhbXMuY29uZmlnSWQgOiAnJwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QnVpbGRSZWNvcmQoKQogIH0sCiAgbWV0aG9kczogewogICAgdGFnVHlwZShyb3c6IGFueSl7CiAgICAgIGlmIChyb3cuc3RhdHVzID09PSAnc3VjY2VzcycpIHsKICAgICAgICByZXR1cm4gJ3N1Y2Nlc3MnCiAgICAgIH1lbHNlIGlmKHJvdy5zdGF0dXMgPT09ICdydW5uaW5nJykgewogICAgICAgIHJldHVybiAnaW5mbycKICAgICAgfWVsc2UgaWYocm93LnN0YXR1cyA9PT0gJ3BlbmRpbmcnKSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH1lbHNlIGlmKHJvdy5zdGF0dXMgPT09ICdmYWlsJykgewogICAgICAgIHJldHVybiAnZGFuZ2VyJwogICAgICB9CiAgICB9LAogICAgZ2V0QnVpbGRSZWNvcmQodmFsdWU/OiBzdHJpbmcpIHsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIG9mZnNldDogdGhpcy5wYWdlU2l6ZSAqICh0aGlzLmN1cnJlbnRQYWdlIC0gMSksCiAgICAgICAgbGltaXQ6IHRoaXMucGFnZVNpemUsCiAgICAgICAgY29uZmlnTmFtZTogdmFsdWUsCiAgICAgICAgY29uZmlnSWQ6IHRoaXMuY29uZmlnSWQKICAgICAgfQogICAgICBhdXRvRXZlbnRUcmFja0FwaS5nZXRBdXRvRXZlbnRUcmFja1J1bkhpc3RvcnkocGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLnRvdGFsCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlR2V0QnVpbGRSZWNvcmQodmFsdWU/OiBzdHJpbmcpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDEKICAgICAgdGhpcy5nZXRCdWlsZFJlY29yZCh2YWx1ZSkKICAgIH0sCiAgICBoYW5kbGVUb0FsbHVyZVJlcG9ydChyb3c/OiBhbnkpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6IFBhdGhOYW1lLkF1dG9DYXNlUmVwb3J0LAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaGlzdG9yeUlkOiByb3cuaWQKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["AutoEventTrackConfigBuildRecord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutoEventTrackConfigBuildRecord.vue","sourceRoot":"src/pages/autoEventTrack","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    placeholder=\"根据配置名称搜索\"\n                    :showCreate=\"false\"\n                    :showSearch=\"configId === ''\"\n                    @search=\"handleGetBuildRecord\"\n      >\n        <template slot=\"title\">\n          <div>埋点自动化执行记录</div>\n        </template>\n      </table-header>\n    </template>\n    <el-table :data=\"tableData\" size=\"medium\">\n      <el-table-column prop=\"id\" label=\"构建id\"/>\n      <el-table-column prop=\"autoConfigName\" label=\"配置名称\"/>\n      <el-table-column prop=\"username\" label=\"触发者\"/>\n      <el-table-column prop=\"createdAt\" label=\"构建时间\">\n        <template v-slot:default=\"scope\">\n          <span>{{new Date(scope.row.createdAt).format('yyyy-MM-dd hh:mm:ss')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"构建状态\">\n        <template v-slot:default=\"scope\">\n          <el-tag :type=\"tagType(scope.row)\" effect=\"dark\">{{scope.row.statusChinese}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"mark\" label=\"备注\"/>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            report-tip=\"allure报告\"\n            show-report\n            @reportClick=\"handleToAllureReport(scope.row)\"\n          >\n          </table-operator>\n        </template>\n      </el-table-column>\n    </el-table>\n    <table-pagination\n      :change=\"getBuildRecord\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n</template>\n\n<script lang=\"ts\">\nimport {autoEventTrackApi} from \"@/api\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport  TableOperator from \"@/common/components/TableOperator.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\n\nexport default {\nname: \"AutoEventTrackConfigBuildRecord\",\n  components: {TablePagination, TableHeader, TableOperator},\n  data() {\n  return {\n    condition: {},\n    total: 0,\n    pageSize: PAGINATION_SIZE.LARGE,\n    currentPage: 1,\n    tableData: [],\n    userPipelineId: true,\n  }\n  },\n  computed: {\n    configId() {\n      return this.$route.params.configId ? this.$route.params.configId : ''\n    }\n  },\n  mounted() {\n    this.getBuildRecord()\n  },\n  methods: {\n    tagType(row: any){\n      if (row.status === 'success') {\n        return 'success'\n      }else if(row.status === 'running') {\n        return 'info'\n      }else if(row.status === 'pending') {\n        return ''\n      }else if(row.status === 'fail') {\n        return 'danger'\n      }\n    },\n    getBuildRecord(value?: string) {\n      const params = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        configName: value,\n        configId: this.configId\n      }\n      autoEventTrackApi.getAutoEventTrackRunHistory(params).then(res => {\n        this.tableData = res.data.data\n        this.total = res.data.total\n      })\n    },\n    handleGetBuildRecord(value?: string) {\n      this.currentPage = 1\n      this.getBuildRecord(value)\n    },\n    handleToAllureReport(row?: any) {\n      this.$router.push({\n        name: PathName.AutoCaseReport,\n        params: {\n          historyId: row.id\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}