{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/common/TestPlanStatusButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/common/TestPlanStatusButton.vue","mtime":1655949681802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7cGxhblN0YXR1c0VudW0sIHBsYW5TdGF0dXNUeXBlfSBmcm9tICdAL2NvbnN0YW50L1Rlc3RQbGFuJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUZXN0UGxhblN0YXR1c0J1dHRvbiIsCiAgcHJvcHM6IHsKICAgIHN0YXR1czogU3RyaW5nLAogICAgc2hvd1JlamVjdDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlLAogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBsYW5TdGF0dXNFbnVtOiBwbGFuU3RhdHVzRW51bSwKICAgICAgcGxhblN0YXR1c1R5cGU6IHBsYW5TdGF0dXNUeXBlLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2V0U3RhdHVzKHN0YXR1cykgewogICAgICB0aGlzLiRlbWl0KCdzdGF0dXNDaGFuZ2UnLCBzdGF0dXMpOwogICAgfQogIH0KfQo="},{"version":3,"sources":["TestPlanStatusButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestPlanStatusButton.vue","sourceRoot":"src/pages/track/plan/common","sourcesContent":["<template>\n  <div class=\"status-button\">\n    <el-button\n      :icon=\"status === planStatusEnum.INIT ? 'el-icon-check' : ''\"\n      round\n      type=\"info\"\n      @click=\"setStatus(planStatusEnum.INIT)\"\n    >\n      {{ planStatusType[planStatusEnum.INIT] }}\n    </el-button>\n    <el-button\n      :icon=\"status === planStatusEnum.IN_PROGRESS ? 'el-icon-check' : ''\"\n      round\n      type=\"primary\"\n      @click=\"setStatus(planStatusEnum.IN_PROGRESS)\"\n    >\n      {{ planStatusType[planStatusEnum.IN_PROGRESS] }}\n    </el-button>\n    <el-button\n      :icon=\"status === planStatusEnum.DONE? 'el-icon-check' : ''\"\n      round\n      type=\"success\"\n      @click=\"setStatus(planStatusEnum.DONE)\"\n    >\n      {{ planStatusType[planStatusEnum.DONE] }}\n    </el-button>\n    <el-button\n      v-if=\"showReject\"\n      :icon=\"status === planStatusEnum.REJECT? 'el-icon-check' : ''\"\n      round\n      type=\"danger\"\n      @click=\"setStatus(planStatusEnum.REJECT)\"\n    >\n      {{ planStatusType[planStatusEnum.REJECT] }}\n    </el-button>\n  </div>\n</template>\n\n<script>\nimport {planStatusEnum, planStatusType} from '@/constant/TestPlan'\n\nexport default {\n  name: \"TestPlanStatusButton\",\n  props: {\n    status: String,\n    showReject: {\n      type: Boolean,\n      default: true,\n    }\n  },\n  data() {\n    return {\n      planStatusEnum: planStatusEnum,\n      planStatusType: planStatusType,\n    }\n  },\n  methods: {\n    setStatus(status) {\n      this.$emit('statusChange', status);\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n\n.status-button {\n  @extend %flex-left-center-row;\n}\n\n</style>\n"]}]}