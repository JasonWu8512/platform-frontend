{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/testTools/mockSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/testTools/mockSwitch.vue","mtime":1655949681779},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7TWVzc2FnZX0gZnJvbSAiZWxlbWVudC11aSIKaW1wb3J0IG1vY2sgZnJvbSAiLi4vLi4vYXBpL3Rvb2wiCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIm1vY2tTd2l0Y2giLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgc2VydmVyTGlzdDogW10sCiAgICAgIGRvbWFpbnM6IFt7J2RvbWFpbic6ICdhcGkucGluZ3h4LmNvbScsICdzdGF0dXMnOiBmYWxzZSwgJ2RldGFpbHMnOiBbXX1dLAogICAgICBlbnY6ICdkZXYnLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhvc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5kZXZIb3N0c1t0aGlzLmVudl0KICAgIH0sCiAgICBlbWFpbCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmxvZ2luLmVtYWlsCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXREb21haW5TdGF0dXMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERvbWFpblN0YXR1cygpIHsKICAgICAgbW9jay5nZXRBbGxEb21haW5TdGF0dXMoe2VudjogdGhpcy5lbnZ9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgdmFyIHJlc3VsdCA9IHJlcy5kYXRhCiAgICAgICAgLy8gdmFyIGRvbWFpbl9rZXlzID0gT2JqZWN0LmtleXMocmVzdWx0KQogICAgICAgIHRoaXMuZG9tYWlucyA9IHJlc3VsdC5tYXAoaXRlbSA9PiB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBkb21haW46IGl0ZW0uZG9tYWluLAogICAgICAgICAgICBzdGF0dXM6IGl0ZW0uc3RhdHVzLAogICAgICAgICAgICBkZXRhaWxzOiBpdGVtLmRldGFpbHMKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KQogICAgfSwKICAgIG9uU3VibWl0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB2YXIgZG9tYWlucyA9IHt9OwogICAgICB0aGlzLmRvbWFpbnMuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICBkb21haW5zW2l0ZW0uZG9tYWluXSA9IGl0ZW0uc3RhdHVzCiAgICAgIH0pCiAgICAgIG1vY2sudXBkYXRlTW9jayh7ZW52OiB0aGlzLmVudiwgZG9tYWluczogZG9tYWlucywgdXNlcl9lbWFpbDogdGhpcy5lbWFpbCwgc2VydmVyX2xpc3Q6IHRoaXMuc2VydmVyTGlzdH0pLnRoZW4oCiAgICAgICAgICAoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZ2V0RG9tYWluU3RhdHVzKCk7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgIE1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICLmraPlnKjph43lkK/mlK/ku5jmnI3liqHvvIzor7fogJDlv4PnrYnlvoUzMOenkuWQjuWwneivlSIsCiAgICAgICAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLAogICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICApLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["mockSwitch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mockSwitch.vue","sourceRoot":"src/pages/testTools","sourcesContent":["<template>\n  <el-card\n      v-loading=\"loading\"\n      class=\"form-card\"\n      element-loading-spinner=\"el-icon-loading\"\n      element-loading-text=\"拼命加载中\"\n  >\n    <div slot=\"header\" class=\"card-title\">\n      <span>mock设置</span>\n\n    </div>\n    <el-form label-position=\"right\" label-width=\"150px\">\n      <el-form-item label=\"环境 :\">\n        <!--          <el-switch v-model=\"env\"></el-switch>-->\n        <el-radio-group v-model=\"env\" @change=\"getDomainStatus\">\n          <el-radio label=\"dev\"></el-radio>\n          <el-radio label=\"fat\"></el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item\n          v-for=\"item in domains\"\n          :key=\"item\"\n          :label=\"`${item.domain}:`\"\n      >\n        <el-row align=\"middle\">\n          <el-col :span=\"5\">\n            <el-switch v-model=\"item.status\"></el-switch>\n          </el-col>\n          <el-col :span=\"15\">\n            <el-checkbox-group v-model=\"serverList\" size=\"medium\"><el-checkbox label=\"payatom\"></el-checkbox><el-checkbox label=\"交易中台\"></el-checkbox></el-checkbox-group>\n          </el-col>\n        </el-row>\n\n        <div v-for=\"(item2, index) in item.details\" :key=\"index\">\n          <span style=\"color: #909399\"> {{item2.server}}:{{item2.status}}</span>\n        </div>\n      </el-form-item>\n      <el-form-item label-width=\"0\" style=\"text-align: center;padding-top: 15px\">\n        <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\n        <el-button>取消</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n\n</template>\n\n<script>\nimport {Message} from \"element-ui\"\nimport mock from \"../../api/tool\"\n\nexport default {\n  name: \"mockSwitch\",\n  data() {\n    return {\n      loading: false,\n      serverList: [],\n      domains: [{'domain': 'api.pingxx.com', 'status': false, 'details': []}],\n      env: 'dev',\n    }\n  },\n  computed: {\n    host() {\n      return this.$store.state.devHosts[this.env]\n    },\n    email() {\n      return this.$store.state.login.email\n    }\n  },\n  created() {\n    this.getDomainStatus();\n  },\n  methods: {\n    getDomainStatus() {\n      mock.getAllDomainStatus({env: this.env}).then(res => {\n        var result = res.data\n        // var domain_keys = Object.keys(result)\n        this.domains = result.map(item => {\n          return {\n            domain: item.domain,\n            status: item.status,\n            details: item.details\n          }\n        })\n        this.loading = false;\n      })\n    },\n    onSubmit() {\n      this.loading = true;\n      var domains = {};\n      this.domains.forEach(item => {\n        domains[item.domain] = item.status\n      })\n      mock.updateMock({env: this.env, domains: domains, user_email: this.email, server_list: this.serverList}).then(\n          () => {\n            this.getDomainStatus();\n            this.loading = false\n            Message({\n              message: \"正在重启支付服务，请耐心等待30秒后尝试\",\n              type: \"info\",\n              duration: 3000,\n              showClose: true\n            })\n          }\n      ).catch(() => {\n        this.loading = false\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.el-form-item{\n  text-align: left;\n}\n.form-card {\n  width: 500px;\n}\n\n.card-title {\n  font-size: 18px;\n  font-weight: 500;\n  text-align: left;\n}\n\n</style>\n"]}]}