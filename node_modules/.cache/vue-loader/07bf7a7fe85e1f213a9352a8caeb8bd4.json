{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/testTools/pointTestTool.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/testTools/pointTestTool.vue","mtime":1657791950692},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRpbWUgewogIGZvbnQtc2l6ZTogMTNweDsKICBjb2xvcjogIzk5OTsKfQoKLmJvdHRvbSB7CiAgbWFyZ2luLXRvcDogMTNweDsKICBsaW5lLWhlaWdodDogMTJweDsKfQoKLmJ1dHRvbiB7CiAgcGFkZGluZzogMDsKICBmbG9hdDogcmlnaHQ7Cn0KCi5pbWFnZSB7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogYmxvY2s7Cn0KCi5jbGVhcmZpeDpiZWZvcmUsCi5jbGVhcmZpeDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwp9CgouY2xlYXJmaXg6YWZ0ZXIgewogICAgY2xlYXI6IGJvdGgKfQo="},{"version":3,"sources":["pointTestTool.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"pointTestTool.vue","sourceRoot":"src/pages/testTools","sourcesContent":["<!-- <<template>\n  <el-card\n    v-loading=\"loading\"\n    element-loading-spinner=\"el-icon-loading\"\n    element-loading-text=\"拼命加载中\"\n    style=\"width: 45%\"\n  >\n    <div>\n      <el-form\n        ref=\"dataForm\"\n        :model=\"dataForm\"\n        :rules=\"dataRules\"\n        label-position=\"right\"\n        label-width=\"100px\"\n        style=\"width: 100%; margin: 20px auto\"\n      >\n\n        <el-form-item label=\"环境 :\" prop=\"env\">\n          <el-select v-model=\"dataForm.env\" class=\"dataToolFormItem\">\n            <el-option\n              v-for=\"item in envs\"\n              :key=item\n              :label=\"item\"\n              :value=\"item\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"业务场景:\" prop=\"operation\">\n          <el-cascader\n            v-model=\"dataForm.operation\"\n            :options=\"datas\"\n            :props=\"optionProps\"\n            class=\"dataToolFormItem\"\n            filterable\n            @change=\"cleardynamicForm\"/>\n        </el-form-item>\n\n        <el-form-item label=\"更新内容:\" prop=\"content\" v-if=\"showPhone\">\n          <el-input\n            v-model=\"dataForm.content\"\n            class=\"dataToolFormItem\"\n            placeholder=\"若有指定字段要更新，请输入json格式字符串\"\n            type=\"textarea\"\n          />\n        </el-form-item>\n        <el-form-item label=\"返回结果:\">\n          <div class=\"dataToolFormItem\">{{ result }}</div>\n        </el-form-item>\n        <el-form-item label-width=\"0\" style=\"text-align: center\">\n          <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\n          <el-button @click=\"resetForm('dataForm')\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  name: \"dataTools\",\n  // components: {myDialog},\n  props: {\n    datas: {type: Array}\n  },\n  data() {\n    var checkContent = (rule, value, callback) => {\n      try {\n        if (value !== '' && typeof JSON.parse(value) === \"object\") {\n          callback()\n        } else if (value !== '' && typeof JSON.parse(value) !== \"object\") {\n          return callback(new Error('请输入json字符串'))\n        } else {\n          callback()\n        }\n      } catch (e) {\n        return callback(new Error('请输入json字符串'))\n      }\n    }\n    // var checkMobile = (rule, value, callback) => {\n    //   if(value === '' && this.dataForm.openid === '' && this.dataForm.unionId === '') {\n    //     return callback(new Error('手机号、openid、unionId三项至少填一项'))\n    //   }else {\n    //     callback()\n    //   }\n    // }\n    return {\n      loading: false,\n      centerDialogVisible: false,\n      optionProps: {\n        value: 'scene',\n        label: 'chineseScene',\n        // children: 'children'\n      },\n      envs: ['dev', 'fat'],\n      dataForm: {\n        env: 'dev',\n        operation: '',\n        mobile: '',\n        content: '',\n        dynamicForm: [],\n      },\n      dataRules: {\n        operation: [{required: true, message: '请选择业务场景', trigger: 'blur'}],\n        // mobile: [{required: this.dataForm.dynamicForm, message: '请输入手机号', trigger: 'blur'}],\n        content: [{validator: checkContent, trigger: ['blur', 'change']}]\n      },\n      options: [],\n      result: '',\n      showPhone: true,\n      showLessonResult: false,\n      lessonResultData: '',\n    }\n  },\n  watch: {},\n  methods: {\n    resetForm(formName) {\n      this.setIntoStorage();\n      this.$refs[formName].resetFields();\n    },\n\n    cleardynamicForm() {\n      this.dataForm.dynamicForm = [];\n    },\n\n    querySearch(queryString, cb) {\n      var phones = JSON.parse(localStorage.getItem('phoneArr'));\n      var results = queryString ? phones.filter(this.createStateFilter(queryString)) : phones;\n\n      // clearTimeout(this.timeout);\n      // this.timeout = setTimeout(() => {\n      cb(results);\n      //   }, 1000 * Math.random());\n    },\n    createStateFilter(queryString) {\n      return (state) => {\n        return (state.value.indexOf(queryString) === 0);\n      };\n    },\n  },\n  mounted() {\n    // this.getScenes()\n    this.setIntoStorage()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.dataToolFormItem {\n  width: 90%;\n}\n\n</style> -->\n<template>\n    <el-row>\n     <el-col :span=\"8\" v-for=\"(o, index) in 2\" :key=\"o\" :offset=\"index > 0 ? 2 : 0\">\n      <el-card :body-style=\"{ padding: '0px' }\">\n        <img src=\"https://shadow.elemecdn.com/app/element/hamburger.9cf7b091-55e9-11e9-a976-7f4d0b07eef6.png\" class=\"image\">\n        <div style=\"padding: 14px;\">\n          <span>好吃的汉堡</span>\n          <div class=\"bottom clearfix\">\n            <time class=\"time\">{{ currentDate }}</time>\n            <el-button type=\"text\" class=\"button\">操作按钮</el-button>\n          </div>\n        </div>\n      </el-card>\n     </el-col>\n    </el-row>\n</template>\n<style>\n  .time {\n    font-size: 13px;\n    color: #999;\n  }\n  \n  .bottom {\n    margin-top: 13px;\n    line-height: 12px;\n  }\n\n  .button {\n    padding: 0;\n    float: right;\n  }\n\n  .image {\n    width: 100%;\n    display: block;\n  }\n\n  .clearfix:before,\n  .clearfix:after {\n      display: table;\n      content: \"\";\n  }\n  \n  .clearfix:after {\n      clear: both\n  }\n</style>\n\n<script>\nexport default {\n  data() {\n    return {\n      currentDate: new Date()\n    };\n  }\n}\n</script>"]}]}