{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/Team/components/GSTC.vue?vue&type=style&index=0&id=17d85e25&scoped=true&lang=scss&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/Team/components/GSTC.vue","mtime":1655949681769},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ3N0Yy1jb21wb25lbnQgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9Cgo="},{"version":3,"sources":["GSTC.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA","file":"GSTC.vue","sourceRoot":"src/pages/Team/components","sourcesContent":["<template>\n  <div class=\"gstc-component\" ref=\"gstc\" id=\"gstc-component\"></div>\n</template>\n\n<script>\nimport GSTC from 'gantt-schedule-timeline-calendar';\nimport 'gantt-schedule-timeline-calendar/dist/style.css';\nlet state,\n  gstc,\n  loaded = false;\nexport { GSTC };\nexport default {\n  name: 'GSTC',\n  props: ['config'],\n  mounted() {\n    this.$refs.gstc.addEventListener('gstc-loaded', () => {\n      if (!loaded) {\n        loaded = true;\n        this.$emit('loaded', gstc);\n      }\n    });\n    state = GSTC.api.stateFromConfig({});\n    this.$watch(\n      'config',\n      (config) => {\n            // eslint-disable-next-line no-unused-vars\n            state.update('config', (current) => {\n              current.list.rows = {\n                \"1\": {\n                  id: \"\",\n                  story: \"\",\n                  assignee: \"\",\n                  expanded: true\n                },\n              }\n              current.chart.items = {}\n              const cfg = GSTC.api.merge({}, current, config);\n              console.log('updated-config', cfg)\n              return cfg;\n            });\n            if (gstc && gstc.component) gstc.component.update();\n          },\n          {deep: true, immediate: true}\n        );\n        this.$emit('state', state);\n        gstc = GSTC({\n          element: this.$refs.gstc,\n          state,\n        });\n  },\n  beforeUnmount() {\n    if (gstc) gstc.destroy();\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.gstc-component {\n  margin: 0;\n  padding: 0;\n}\n\n</style>\n"]}]}