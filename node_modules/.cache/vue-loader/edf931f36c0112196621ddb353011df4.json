{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/TestPlanView.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/view/TestPlanView.vue","mtime":1655949681803},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7dGVzdFBsYW5BcGl9IGZyb20gIkAvYXBpIgppbXBvcnQge3R5cGVOb2RlfSBmcm9tICJAL2FwaS90eXBlcy90ZXN0VHJhY2tUeXBlIgppbXBvcnQgdmFyaWFibGVzIGZyb20gIkAvYXNzZXRzL2Nzcy91dGlscy5zY3NzIgppbXBvcnQgSGlkZGVuQnV0dG9uIGZyb20gIkAvY29tbW9uL2NvbXBvbmVudHMvc2lkZS9IaWRkZW5CdXR0b24udnVlIgppbXBvcnQge1BhdGhOYW1lfSBmcm9tICJAL2NvbnN0YW50L3JvdXRlRGF0YSIKaW1wb3J0IHtvcGVyYXRpb25FbnVtfSBmcm9tICJAL2NvbnN0YW50L1Rlc3RDYXNlIgppbXBvcnQgTm9kZVRyZWUgZnJvbSAiQC9wYWdlcy90cmFjay9jb21tb24vTm9kZVRyZWUudnVlIgppbXBvcnQgVGVzdENhc2VQbGFuTGlzdCBmcm9tICJAL3BhZ2VzL3RyYWNrL3BsYW4vdmlldy9jb21vbmVudHMvVGVzdENhc2VQbGFuTGlzdC52dWUiCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3RQbGFuVmlldyIsCiAgY29tcG9uZW50czogewogICAgSGlkZGVuQnV0dG9uLAogICAgVGVzdENhc2VQbGFuTGlzdCwKICAgIE5vZGVUcmVlCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlcmF0aW9uRW51bTogb3BlcmF0aW9uRW51bSwKICAgICAgdGVzdFBsYW5zOiBbXSwKICAgICAgdHJlZU5vZGVzOiBbXSwKICAgICAgc2VsZWN0Tm9kZToge30sCiAgICAgIHNlbGVjdFBhcmVudE5vZGVzOiBbXSwKICAgICAgYWN0aXZlSW5kZXg6ICJmdW5jdGlvbmFsIiwKICAgICAgaXNNZW51U2hvdzogdHJ1ZSwKICAgICAgbm9kZVRyZWVEcmFnZ2FibGU6IGZhbHNlLAogICAgICBhc2lkZUhpZGRlbjogZmFsc2UsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcGxhbklkKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zLnBsYW5JZAogICAgfSwKICAgIHByb2pJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnF1ZXJ5LnByb2pJZAogICAgfSwKICAgIHRyZWVJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnF1ZXJ5LnRyZWVJZAogICAgfSwKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9LAogICAgaGlkZGVuQnV0dG9uUG9zaXRpb24oKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXNbJ2hpZGRlbkJ1dHRvblBvc2l0aW9uJ10KICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZScoKSB7CiAgICAgIGlmICh0aGlzLnBsYW5JZCAmJiAhKHRoaXMudHJlZUlkIHx8IHRoaXMucHJvaklkKSkgewogICAgICAgIHRoaXMuZ2V0VGVzdFBsYW5DYXNlVHJlZSgpCiAgICAgIH0KICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKHRoaXMucGxhbklkKSB7CiAgICAgIHRoaXMuZ2V0VGVzdFBsYW5DYXNlVHJlZSgpCiAgICB9CiAgICBpZiAodGhpcy5wcm9qSWQgfHwgdGhpcy50cmVlSWQpIHsKICAgICAgdGhpcy5zZWxlY3ROb2RlLmlkID0gdGhpcy5wcm9qSWQgfCB0aGlzLnRyZWVJZAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VGVzdFBsYW5DYXNlVHJlZSgpIHsKICAgICAgLy8g5riF6Zmk6Z2i5YyF5bGR5a+86IiqCiAgICAgIHRoaXMuc2VsZWN0UGFyZW50Tm9kZXMgPSBbXQogICAgICB0ZXN0UGxhbkFwaS5nZXRUZXN0Q2FzZVBsYW5DYXNlVHJlZSh0aGlzLnBsYW5JZCkKICAgICAgICAudGhlbigoe2RhdGF9KSA9PiB7CiAgICAgICAgICB0aGlzLnRyZWVOb2RlcyA9IGRhdGEKICAgICAgICB9KQogICAgfSwKICAgIGhhbmRsZVNlbGVjdChkYXRhOiB0eXBlTm9kZSwgcE5vZGVzOiBhbnksIG5vZGU6IHR5cGVOb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0UGFyZW50Tm9kZXMgPSBwTm9kZXMKICAgICAgdGhpcy5zZWxlY3ROb2RlID0gZGF0YQogICAgICB0aGlzLiRyZWZzLnRlc3RDYXNlUGxhbkxpc3QuY3VycmVudFBhZ2UgPSAxCiAgICAgIGNvbnN0IF9xdWVyeSA9IG5vZGUubGV2ZWwgPT09IDEgPyB7cHJvaklkOiBkYXRhLmlkfSA6IHt0cmVlSWQ6IGRhdGEuaWR9CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiBQYXRoTmFtZS5UZXN0VHJhY2tDYXNlUGxhblZpZXcsCiAgICAgICAgcXVlcnk6IF9xdWVyeQogICAgICB9KQogICAgfSwKICAgIG9wZW5UZW1wbGF0ZVJlcG9ydCgpIHsKICAgICAgdGhpcy4kcmVmcy50ZXN0UmVwb3J0VGVtcGxhdGVMaXN0Lm9wZW4odGhpcy5wbGFuSWQpCiAgICB9LAogICAgZWRpdFRlc3RDYXNlKCkgewoKICAgIH0sCiAgICByZWZyZXNoKCkgewogICAgICB0aGlzLiRyZWZzLnRlc3RDYXNlUGxhbkxpc3QuaW5pdFRhYmxlRGF0YSgpCiAgICAgIHRoaXMuZ2V0VGVzdFBsYW5DYXNlVHJlZSgpCiAgICB9LAogICAgcmVsb2FkTWVudSgpIHsKICAgICAgdGhpcy5pc01lbnVTaG93ID0gZmFsc2UKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuaXNNZW51U2hvdyA9IHRydWUKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVDbGljayhpc0hpZGRlbjogQm9vbGVhbikgewogICAgICB0aGlzLmFzaWRlSGlkZGVuID0gaXNIaWRkZW4KICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["TestPlanView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestPlanView.vue","sourceRoot":"src/pages/track/plan/view","sourcesContent":["<template>\n  <el-container v-loading=\"loading\">\n    <el-aside v-if=\"!asideHidden\">\n      <node-tree\n        ref=\"nodeTree\"\n        :current-node=\"selectNode\"\n        :disabled=\"selectNode.id === undefined\"\n        :draggable=\"nodeTreeDraggable\"\n        :treeNodes=\"treeNodes\"\n        :type=\"operationEnum.VIEW\"\n        @nodeSelectEvent=\"handleSelect\"\n        @refresh=\"reloadMenu\"\n      />\n    </el-aside>\n    <el-main :class=\"asideHidden ? 'main-class' : ''\">\n      <test-case-plan-list\n        ref=\"testCasePlanList\"\n        :select-node=\"selectNode\"\n        :select-parent-nodes=\"selectParentNodes\"\n        :tree-nodes=\"treeNodes\"\n        @refresh=\"refresh\"\n        @testCaseEdit=\"editTestCase\"\n      />\n    </el-main>\n    <hidden-button @click=\"handleClick\"/>\n    <!--    <test-case-edit-->\n    <!--      ref=\"testCaseEditDialog\"-->\n    <!--      :current-project=\"selectNode\"-->\n    <!--      :read-only=\"readOnly\"-->\n    <!--      :select-node=\"selectNode\"-->\n    <!--      :tree-nodes=\"treeNodes\"-->\n    <!--      @refresh=\"refreshTable\">-->\n    <!--    </test-case-edit>-->\n    <!--    <div>-->\n    <!--          <test-plan-functional v-if=\"activeIndex === 'functional'\" :plan-id=\"planId\"/>-->\n  </el-container>\n</template>\n\n<script lang=\"ts\">\n\nimport {testPlanApi} from \"@/api\"\nimport {typeNode} from \"@/api/types/testTrackType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport HiddenButton from \"@/common/components/side/HiddenButton.vue\"\nimport {PathName} from \"@/constant/routeData\"\nimport {operationEnum} from \"@/constant/TestCase\"\nimport NodeTree from \"@/pages/track/common/NodeTree.vue\"\nimport TestCasePlanList from \"@/pages/track/plan/view/comonents/TestCasePlanList.vue\"\n\nexport default {\n  name: \"TestPlanView\",\n  components: {\n    HiddenButton,\n    TestCasePlanList,\n    NodeTree\n  },\n  data() {\n    return {\n      operationEnum: operationEnum,\n      testPlans: [],\n      treeNodes: [],\n      selectNode: {},\n      selectParentNodes: [],\n      activeIndex: \"functional\",\n      isMenuShow: true,\n      nodeTreeDraggable: false,\n      asideHidden: false,\n    }\n  },\n  computed: {\n    planId() {\n      return this.$route.params.planId\n    },\n    projId() {\n      return this.$route.query.projId\n    },\n    treeId() {\n      return this.$route.query.treeId\n    },\n    loading() {\n      return this.$store.state.loading\n    },\n    hiddenButtonPosition() {\n      return variables['hiddenButtonPosition']\n    },\n  },\n  watch: {\n    '$route'() {\n      if (this.planId && !(this.treeId || this.projId)) {\n        this.getTestPlanCaseTree()\n      }\n    },\n  },\n  mounted() {\n    if (this.planId) {\n      this.getTestPlanCaseTree()\n    }\n    if (this.projId || this.treeId) {\n      this.selectNode.id = this.projId | this.treeId\n    }\n  },\n  methods: {\n    getTestPlanCaseTree() {\n      // 清除面包屑导航\n      this.selectParentNodes = []\n      testPlanApi.getTestCasePlanCaseTree(this.planId)\n        .then(({data}) => {\n          this.treeNodes = data\n        })\n    },\n    handleSelect(data: typeNode, pNodes: any, node: typeNode) {\n      this.selectParentNodes = pNodes\n      this.selectNode = data\n      this.$refs.testCasePlanList.currentPage = 1\n      const _query = node.level === 1 ? {projId: data.id} : {treeId: data.id}\n      this.$router.push({\n        name: PathName.TestTrackCasePlanView,\n        query: _query\n      })\n    },\n    openTemplateReport() {\n      this.$refs.testReportTemplateList.open(this.planId)\n    },\n    editTestCase() {\n\n    },\n    refresh() {\n      this.$refs.testCasePlanList.initTableData()\n      this.getTestPlanCaseTree()\n    },\n    reloadMenu() {\n      this.isMenuShow = false\n      this.$nextTick(() => {\n        this.isMenuShow = true\n      })\n    },\n    handleClick(isHidden: Boolean) {\n      this.asideHidden = isHidden\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/utils\";\n\n.el-aside {\n  padding: 10px;\n  background: white;\n  width: $aside-tree-width !important;\n}\n\n.select-menu {\n  display: inline-block;\n}\n\n.header-menu.el-menu--horizontal > li {\n  height: 49px;\n  line-height: 50px;\n  color: dimgray;\n}\n\n.main-class {\n  padding: 0;\n}\n\n</style>\n"]}]}