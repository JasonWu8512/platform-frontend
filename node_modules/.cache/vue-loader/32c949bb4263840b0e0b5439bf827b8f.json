{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/jira/VersionReport.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/jira/VersionReport.vue","mtime":1655949681777},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1jYXNjYWRlci1wYW5lbCB7CiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7Cn0KLmVsLWNhc2NhZGVyX19zdWdnZXN0aW9uLWxpc3R7CiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7Cn0KCi5jdXJfcHJvamVjdCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHJpZ2h0OiAxMHB4OwogIHRvcDogMnB4Cn0KCmRpdi5zdGlja3kgewogIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTsKICBwb3NpdGlvbjogc3RpY2t5OwogIHRvcDogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9CgouZWwtdGFibGUgLmJ1Zy1yb3cgewogIGJhY2tncm91bmQ6ICNmZGUyZTI7Cn0KCi5lbC10YWJsZSAudGFzay1yb3cgewogIGJhY2tncm91bmQ6ICNiM2Q4ZmY7Cn0KCi5lbC10YWJsZSAuc3Rvcnktcm93IHsKICBiYWNrZ3JvdW5kOiAjZTBmMGQ1Owp9Cgo="},{"version":3,"sources":["VersionReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"VersionReport.vue","sourceRoot":"src/pages/jira","sourcesContent":["<template>\n  <el-card shadow=\"never\">\n    <div style=\"position: relative\">\n      <el-tabs v-model=\"activePannel\" :before-leave=\"getVersionsReport\">\n        <el-tab-pane label=\"人员工作量报告\" name=\"versionEstimateReport\">\n\n          <div\n            v-for=\"(version, index) in versionsEstimate\"\n            :key=\"index\"\n            :index=\"index\"\n            :version=\"version\"\n            style=\"margin-top: 20px;\"\n          >\n            <el-card :body-style=\"{ padding: '0px' }\">\n              <div\n                style=\"font-size: 14px; font-weight: 600; height: 40px; color: #fff;background-color:#2c2a48;  text-align: left;line-height: 40px; padding-left: 10px\">\n                <span>{{ version.version }}</span>\n              </div>\n              <el-table\n                :data=\"version['details']\"\n                :row-class-name=\"tableRowClassName\"\n                :cell-style=\"cellStyle\"\n                :tree-props=\"{children: 'tasks'}\"\n                row-key=\"id\"\n                size=\"medium\"\n              >\n                <template v-for=\"col in columnsParent\">\n                  <el-table-column :key=\"col.props\" :label=\"col.label\" :prop=\"col.props\" :sortable=\"col.sortable\">\n                    <template slot-scope=\"scope\" style=\" vertical-align: text-bottom\">\n                      <img v-if=\"col.props === 'type'\" :src=\"typeIcon(scope.row.type)\"\n                           alt style=\"width: 12px; height: 12px;\">\n                      <span>{{ scope.row[col.props] }}</span>\n                    </template>\n                  </el-table-column>\n                </template>\n              </el-table>\n            </el-card>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"人员质量报告\" name=\"versioQualityReport\">\n          <version-quality-report :active-name=\"activePannel\" :versions.sync=\"versionsQuality\"></version-quality-report>\n        </el-tab-pane>\n\n      </el-tabs>\n      <div class=\"cur_project\">\n        <el-cascader v-model=\"spValues\" :options=\"projectSprints\" :props=\"optionProps\" placeholder=\"请选择项目->迭代\"\n                     size=\"mini\" style=\"width: 300px\"></el-cascader>\n      </div>\n    </div>\n\n  </el-card>\n\n\n</template>\n\n<script>\nimport jiraApi from \"@/api/jira\"\nimport noData from \"@/common/components/noData.vue\"\nimport versionQualityReport from \"@/pages/jira/versionQualityReport.vue\"\n\nexport default {\n  name: \"VersionReport\",\n  components: {\n    versionQualityReport,\n    // eslint-disable-next-line vue/no-unused-components\n    noData,\n  },\n  data() {\n    return {\n      activePannel: 'versionEstimateReport',\n      optionProps: {\n        value: 'id',\n        label: 'name',\n        children: 'sprints'\n      },\n      spValues: [],\n      columnsParent: [{\n        label: '指派人',\n        props: 'bugOwner',\n        sortable: true,\n      },\n        {\n          label: '类型',\n          props: 'type',\n          sortable: false,\n        },\n        {\n          label: '任务id',\n          props: 'key',\n          sortable: false,\n        },\n        {\n          label: '所属story',\n          props: 'parentKey',\n          sortable: true\n        },\n        {\n          label: '状态',\n          props: 'status',\n          sortable: true,\n        }, {\n          label: '工作量(天)',\n          props: 'day',\n          sortable: true\n        }],\n      columnsChild: [],\n      versionsEstimate: [],\n      versionsQuality: [],\n    }\n  },\n  computed: {\n    projectSprints() {\n      return this.$store.state.jira.projects;\n    },\n    sprintId() {\n      if (this.spValues.length === 0) {\n        // eslint-disable-next-line vue/no-async-in-computed-properties\n        jiraApi.getLatestSprint({}).then(res => {\n          this.spValues = [res.data.projId, res.data.id]\n          // this.getVersionsReport(this.spValues[1])\n        })\n      }\n      return this.spValues[1]\n    }\n  },\n  watch: {\n    sprintId() {\n      this.getVersionsReport()\n    }\n  },\n  methods: {\n    cellStyle(){\n      return 'font: 13px Arial;font-weight: 500; color: #606266;'\n    },\n    getVersionsReport() {\n      // console.log('spValues', this.spValues)\n      jiraApi.getVersionDetailsBySprint({sprintId: this.sprintId, type: 'noBug'}).then(res => {\n        this.versionsEstimate = res.data.datas.map(version => {\n          var details = version.details.map(detail => {\n            return {\n              bugOwner: detail.bugOwner,\n              id: detail.bugOwner,\n              type: '合计',\n              status: '',\n              day: detail.day,\n              tasks: detail.tasks,\n            }\n          })\n          return {\n            version: version.version,\n            details: details\n          }\n        })\n      })\n      jiraApi.getVersionDetailsBySprint({sprintId: this.sprintId, type: 'Bug'}).then(res => {\n        this.versionsQuality = res.data.datas.map(version => {\n          var details = version.details.map(detail => {\n            return {\n              bugOwner: detail.bugOwner,\n              bug数: detail.tasks.length,\n              线下bug分: detail.offlinePoint,\n              线上bug分: detail.onlinePoint,\n              人天bug率: detail.day ? (detail.tasks.length / detail.day).toFixed(2) : 0,\n            }\n          })\n          return {\n            version: version.version,\n            chartData: {\n              rows: details,\n              columns: ['bugOwner', 'bug数', '线下bug分', '线上bug分', '人天bug率'],\n            },\n          }\n        })\n      })\n    },\n    tableRowClassName(row) {\n      // console.log('row', row)\n      if (row.row.type === 'Bug') {\n        return 'bug-row';\n      } else if (row.row.type === 'Sub-task') {\n        return 'task-row';\n      } else if (row.row.type === 'Task') {\n        return 'task-row'\n      } else if (row.row.type === 'Story') {\n        return 'story-row'\n      }\n      return '';\n    },\n    typeIcon(type) {\n      if (type === 'Bug') {\n        return require('../../assets/img/jira_bug.svg');\n      } else if (type === 'Sub-task') {\n        return require('../../assets/img/jira_subtask.svg');\n      } else if (type === 'Task') {\n        return require('../../assets/img/jira_task.svg')\n      } else if (type === 'Story') {\n        return require('../../assets/img/jira_story.svg')\n      }\n      return '';\n\n    }\n\n  },\n\n  mounted() {\n    // this.getVersionsReport();\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n\n</style>\n<style lang=\"scss\">\n.el-cascader-panel {\n  font-size: 12px !important;\n}\n.el-cascader__suggestion-list{\n  font-size: 12px !important;\n}\n\n.cur_project {\n  position: absolute;\n  right: 10px;\n  top: 2px\n}\n\ndiv.sticky {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n}\n\n.el-table .bug-row {\n  background: #fde2e2;\n}\n\n.el-table .task-row {\n  background: #b3d8ff;\n}\n\n.el-table .story-row {\n  background: #e0f0d5;\n}\n\n</style>\n"]}]}