{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/jira/MonthTrendReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/jira/MonthTrendReport.vue","mtime":1655949681777},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBqaXJhQXBpIGZyb20gJ0AvYXBpL2ppcmEnCmV4cG9ydCBkZWZhdWx0IHsKbmFtZTogIk1vbnRoVHJlbmRSZXBvcnQiLAogIGRhdGEoKSB7CiAgICB0aGlzLmNoYXJ0U2V0dGluZ3MgPSB7CiAgICAgIC8vIHN0YWNrOiB7ICfnlKjmiLcnOiBbJ+iuv+mXrueUqOaItycsICfkuIvljZXnlKjmiLcnXSB9LAogICAgICBhcmVhOiB0cnVlCiAgICB9CiAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGV4dGVuZDogewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykgeyAvLyDmj5DnpLrlhoXlrrnlpKrlpJrpmpTooYzmmL7npLrlhoXlrrkKICAgICAgICAgICAgbGV0IGFzdHIgPSAnJwogICAgICAgICAgICBwYXJhbXMuZm9yRWFjaCgoZWxlLCBpbmRleCkgPT4gewogICAgICAgICAgICAgIGFzdHIgKz0gYAogICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBibG9jaztoZWlnaHQ6MjBweDske2luZGV4ICUgMiA9PT0gMCA/ICd3aWR0aDogNTAlOycgOiAnd2lkdGg6IDM4JTsnfWZsb2F0OmxlZnQ7Ij4KICAgICAgICAgICAgICAgICAgICAgIDxpIHN0eWxlPSJ3aWR0aDogMTBweDtoZWlnaHQ6IDEwcHg7ZGlzcGxheTogaW5saW5lLWJsb2NrO2JhY2tncm91bmQ6ICR7ZWxlLmNvbG9yfTtib3JkZXItcmFkaXVzOiAxMHB4OyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtlbGUuc2VyaWVzTmFtZX06ICR7ZWxlLmRhdGF9PC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICBgCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIGNvbnN0IGIgPSAnPGRpdiBzdHlsZT0id2lkdGg6IDUwMHB4OyI+JyArIGFzdHIgKyAnPGRpdj4nCiAgICAgICAgICAgIHJldHVybiBiCiAgICAgICAgICB9LAogICAgICAgICAgcG9zaXRpb246IGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgICAgICByZXR1cm4gW3BvaW50WzFdLCAwXQogICAgICAgICAgfSwKICAgICAgICB9CiAgICAgIH0sCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ2J1Z+eOh+aciOW6pui2i+WKvycKICAgICAgICB9CiAgICAgIH0sCiAgICBjaGFydERhdGE6IHsKICAgICAgY29sdW1uczpbXSwKICAgICAgcm93czogW10KICAgIH0sCiAgICAvLyBjaGFydFNldHRpbmdzOiB7CiAgICAvLyAgIC8vIHN0YWNrOiB7ICfnlKjmiLcnOiBbJ+iuv+mXrueUqOaItycsICfkuIvljZXnlKjmiLcnXSB9LAogICAgLy8gICBhcmVhOiB0cnVlCiAgICAvLyB9CiAgfQogIH0sCiAgcHJvcHM6IHsKICAgIG1vbnRoOiB7dHlwZTogU3RyaW5nfQogIH0sCiAgd2F0Y2g6IHsKICAgIG1vbnRoKCkgewogICAgICB0aGlzLmdldE1vbnRoVHJlbmQoKTsKCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRNb250aFRyZW5kKCl7CiAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMgPSBbXQogICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzID0gW10KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICBqaXJhQXBpLmdldE1vbnRoVHJlbmRSZXBvcnQoe21vbnRoOiB0aGlzLm1vbnRofSkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMucHVzaCgnbW9udGgnKQogICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICBsZXQgcm93ID0ge30KICAgICAgICAgIHJvdy5tb250aCA9IE9iamVjdC5rZXlzKGl0ZW0pWzBdOwoKICAgICAgICAgIGl0ZW1bcm93Lm1vbnRoXS5mb3JFYWNoKGl0ZW0yID0+IHsKICAgICAgICAgICAgaWYgKHRoaXMuY2hhcnREYXRhLmNvbHVtbnMuaW5kZXhPZihpdGVtMlsncHJvak5hbWUnXSkgPCAwKXsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnYm9vbGUnLCBpdGVtMlsncHJvak5hbWUnXS5pbmRleE9mKHRoaXMuY2hhcnREYXRhLmNvbHVtbnMpKQogICAgICAgICAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMucHVzaChpdGVtMlsncHJvak5hbWUnXSkKICAgICAgICAgICAgfQogICAgICAgICAgICByb3dbaXRlbTJbJ3Byb2pOYW1lJ11dID0gaXRlbTJbJ29mZmxpbmVCdWdSYXRlJ10gPyBpdGVtMlsnb2ZmbGluZUJ1Z1JhdGUnXSA6IDAKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5jaGFydERhdGEucm93cy5wdXNoKHJvdykKICAgICAgICB9KQogICAgICAgIHRoaXMuY2hhcnRTZXR0aW5ncy5zdGFjayA9IHsgJ+S4muWKoee6vyc6IHRoaXMuY2hhcnREYXRhLmNvbHVtbnMgfTsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQoKICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["MonthTrendReport.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MonthTrendReport.vue","sourceRoot":"src/pages/jira","sourcesContent":["<template>\n<!--  <el-card>-->\n    <ve-line :data=\"chartData\" :settings=\"chartSettings\" :extend=\"extend\" v-loading=\"loading\"></ve-line>\n<!--  </el-card>-->\n</template>\n\n<script>\nimport jiraApi from '@/api/jira'\nexport default {\nname: \"MonthTrendReport\",\n  data() {\n    this.chartSettings = {\n      // stack: { '用户': ['访问用户', '下单用户'] },\n      area: true\n    }\n  return {\n      loading: false,\n      extend: {\n        tooltip: {\n          formatter: function (params) { // 提示内容太多隔行显示内容\n            let astr = ''\n            params.forEach((ele, index) => {\n              astr += `\n                  <div style=\"display: block;height:20px;${index % 2 === 0 ? 'width: 50%;' : 'width: 38%;'}float:left;\">\n                      <i style=\"width: 10px;height: 10px;display: inline-block;background: ${ele.color};border-radius: 10px;\"></i>\n                      <span>${ele.seriesName}: ${ele.data}</span>\n                  </div>\n              `\n            })\n            const b = '<div style=\"width: 500px;\">' + astr + '<div>'\n            return b\n          },\n          position: function (point) {\n            return [point[1], 0]\n          },\n        }\n      },\n      options: {\n        title: {\n          text: 'bug率月度趋势'\n        }\n      },\n    chartData: {\n      columns:[],\n      rows: []\n    },\n    // chartSettings: {\n    //   // stack: { '用户': ['访问用户', '下单用户'] },\n    //   area: true\n    // }\n  }\n  },\n  props: {\n    month: {type: String}\n  },\n  watch: {\n    month() {\n      this.getMonthTrend();\n\n    }\n  },\n  methods: {\n    getMonthTrend(){\n      this.chartData.columns = []\n      this.chartData.rows = []\n      this.loading = true\n      jiraApi.getMonthTrendReport({month: this.month}).then(res => {\n        this.chartData.columns.push('month')\n        res.data.forEach(item => {\n          let row = {}\n          row.month = Object.keys(item)[0];\n\n          item[row.month].forEach(item2 => {\n            if (this.chartData.columns.indexOf(item2['projName']) < 0){\n              // console.log('boole', item2['projName'].indexOf(this.chartData.columns))\n              this.chartData.columns.push(item2['projName'])\n            }\n            row[item2['projName']] = item2['offlineBugRate'] ? item2['offlineBugRate'] : 0\n          });\n          this.chartData.rows.push(row)\n        })\n        this.chartSettings.stack = { '业务线': this.chartData.columns };\n        this.loading = false\n\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}