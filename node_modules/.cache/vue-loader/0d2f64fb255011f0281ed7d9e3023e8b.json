{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/common/NodeTree.vue?vue&type=style&index=0&id=73368e2b&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/common/NodeTree.vue","mtime":1655949681782},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgInNyYy9hc3NldHMvY3NzL2Rpc3BsYXkiOwpAaW1wb3J0ICJzcmMvYXNzZXRzL2Nzcy9mb250IjsKCi5lbC1pbnB1dCB7CiAgbWFyZ2luLXRvcDogMTVweDsKfQoKLm5vZGUtdHJlZSB7CiAgbWFyZ2luLXRvcDogMTVweDsKfQoKLmN1c3RvbS10cmVlLW5vZGUgewogIEBleHRlbmQgJWZsZXgtYmV0d2Vlbi1jZW50ZXItcm93OwogIEBleHRlbmQgJWZvbnQtMTQ7CiAgcGFkZGluZy1yaWdodDogOHB4OwogIHdpZHRoOiAxMDAlOwp9CgouZmF0aGVyIC5jaGlsZCB7CiAgZGlzcGxheTogbm9uZTsKfQoKLmZhdGhlcjpob3ZlciAuY2hpbGQgewogIGRpc3BsYXk6IGJsb2NrOwp9Cgoubm9kZS1pY29uIHsKICBtYXJnaW4tcmlnaHQ6IDVweDsKfQoKLm5vZGUtdGl0bGUgewogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLm5vZGUtb3BlcmF0ZSA+IGkgewogIGNvbG9yOiAjNDA5ZWZmOwogIG1hcmdpbjogMCA1cHg7Cn0K"},{"version":3,"sources":["NodeTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"NodeTree.vue","sourceRoot":"src/pages/track/common","sourcesContent":["<template>\n  <div>\n    <el-input v-model=\"filterText\" placeholder=\"搜索模块\" size=\"small\">\n      <el-button\n        v-if=\"type === operationEnum.EDIT && !disabled\"\n        slot=\"append\"\n        icon=\"el-icon-folder-add\"\n        @click=\"openEditNodeDialog(operationEnum.ADD)\"\n      />\n    </el-input>\n\n    <el-tree\n      ref=\"tree\"\n      :data=\"treeNodes\"\n      :default-expanded-keys=\"expandedNode\"\n      :draggable=\"draggable\"\n      :expand-on-click-node=\"false\"\n      :filter-node-method=\"filterNode\"\n      class=\"node-tree\"\n      highlight-current\n      node-key=\"id\"\n    >\n      <template slot-scope=\"{node, data}\">\n        <span class=\"custom-tree-node father\" @click=\"handleNodeSelect(node, data)\">\n          <span class=\"node-title\">\n            <i class=\"el-icon-folder node-icon\"/>\n            {{ data.name }}\n          </span>\n          <span v-if=\"type === operationEnum.EDIT && !disabled\" class=\"node-operate child\">\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"重命名\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i\n                class=\"el-icon-edit\"\n                @click.stop=\"openEditNodeDialog(operationEnum.EDIT, data)\"\n              />\n            </el-tooltip>\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"添加子模块\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i\n                class=\"el-icon-circle-plus-outline\"\n                @click.stop=\"openEditNodeDialog(operationEnum.ADD, data)\"\n              />\n            </el-tooltip>\n            <el-tooltip\n              :open-delay=\"200\"\n              content=\"删除\"\n              effect=\"dark\"\n              placement=\"top\"\n            >\n              <i class=\"el-icon-delete\" @click.stop=\"remove(data)\"/>\n              </el-tooltip>\n          </span>\n        </span>\n      </template>\n    </el-tree>\n    <node-edit\n      ref=\"nodeEdit\"\n      :current-project=\"currentProject\"\n      :tree-nodes=\"treeNodes\"\n      @refreshNode=\"refreshNode\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {testCaseApi} from \"@/api\"\nimport {typeNode} from \"@/api/types/testTrackType\"\nimport {PathName} from \"@/constant/routeData\"\nimport {operationEnum} from \"@/constant/TestCase\"\nimport NodeEdit from \"@/pages/track/common/NodeEdit.vue\"\n\nexport default {\n  name: \"NodeTree\",\n  components: {NodeEdit},\n  data() {\n    return {\n      operationEnum: operationEnum,\n      expandedNode: [],\n      filterText: \"\",\n    }\n  },\n  props: {\n    treeNodes: Array,\n    currentNode: Object,\n    currentProject: Object,\n    type: {\n      type: String,\n      default: operationEnum.VIEW\n    },\n    draggable: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    filterText(val: any) {\n      this.$refs.tree.filter(val)\n    },\n    treeNodes() {\n      if (this.currentNode.id) {\n        // DOM加载完成再执行下一步操作\n        this.$nextTick(() => {\n          this.handleNodeSelect(this.$refs.tree.getNode(this.currentNode.id), this.currentNode)\n        })\n      }\n    }\n  },\n  methods: {\n    remove(data: { name: string; id: string }) {\n      this.$alert(\n        `确认删除模块: ${data.name}，以及模块下所有子模块和测试用例，评审及测试计划关联的用例？`,\n        \"\",\n        {\n          confirmButtonText: '确定',\n          showCancelButton: true,\n          cancelButtonText: '取消',\n          callback: (action: string) => {\n            if (action === \"confirm\") {\n              testCaseApi.deleteTestCaseModules(data.id)\n                .then(() => {\n                  this.$emit(\"refreshNode\")\n                  // 清除当前选择节点\n                  this.$emit(\"update:currentNode\", {})\n                  this.$router.push({\n                    name: PathName.TestTrackTestcaseProject,\n                    params: {projectId: this.currentProject.id}\n                  })\n                })\n            }\n          }\n        }\n      )\n    },\n    handleNodeSelect(node: typeNode, data: { id: string }) {\n      if (node) {\n        let pNodes: typeNode[] = []\n        this.getParentNodes(node, pNodes)\n        this.expandedNode.push(data.id)\n        this.$refs.tree.setCurrentKey(data.id)\n        this.$emit(\"nodeSelectEvent\", data, pNodes, node)\n      }\n    },\n    getParentNodes(currentNode: typeNode, pNodes: typeNode[]) {\n      if (currentNode.level && currentNode.level !== 1) {\n        this.getParentNodes(currentNode.parent, pNodes)\n      }\n      if (currentNode.data && currentNode.data.id !== \"\") {\n        pNodes.push(currentNode.data)\n      }\n    },\n    filterNode(value: string, data: { name: string }) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1\n    },\n    openEditNodeDialog(type: operationEnum, data?: typeNode) {\n      this.$refs.nodeEdit.open(type, data)\n    },\n    refreshNode() {\n      this.$emit(\"refreshNode\")\n      this.$emit(\"refreshTable\")\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n@import \"src/assets/css/font\";\n\n.el-input {\n  margin-top: 15px;\n}\n\n.node-tree {\n  margin-top: 15px;\n}\n\n.custom-tree-node {\n  @extend %flex-between-center-row;\n  @extend %font-14;\n  padding-right: 8px;\n  width: 100%;\n}\n\n.father .child {\n  display: none;\n}\n\n.father:hover .child {\n  display: block;\n}\n\n.node-icon {\n  margin-right: 5px;\n}\n\n.node-title {\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.node-operate > i {\n  color: #409eff;\n  margin: 0 5px;\n}\n</style>\n"]}]}