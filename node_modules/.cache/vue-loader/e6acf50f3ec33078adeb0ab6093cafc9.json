{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/FullSonar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/FullSonar.vue","mtime":1656393408962},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUYWJsZVBhZ2luYXRpb24gZnJvbSAiLi4vLi4vY29tbW9uL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9UYWJsZVBhZ2luYXRpb24iOwppbXBvcnQge1BBR0lOQVRJT05fU0laRX0gZnJvbSAiLi4vLi4vY29uc3RhbnQiOwppbXBvcnQge3NvbmFyQXBpfSBmcm9tICJAL2FwaSIKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGdWxsU29uYXIiLAogIGNvbXBvbmVudHM6IHtUYWJsZVBhZ2luYXRpb259LAogIHByb3BzOiB7fSwKICBkYXRhKCl7CiAgICByZXR1cm57CiAgICAgIGNvbmRpdGlvbjoge30sCiAgICAgIHRvdGFsOiAwLAogICAgICBwYWdlU2l6ZTogUEFHSU5BVElPTl9TSVpFLlhMQVJHRSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHNlYXJjaE5hbWU6ICcnLAogICAgICB0YWJsZURhdGFzOiBbXSwKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEZ1bGxTb25hckxpc3QoKQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RnVsbFNvbmFyTGlzdCgpewogICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgbGltaXQ6IHRoaXMucGFnZVNpemUsCiAgICAgICAgb2Zmc2V0OiB0aGlzLmN1cnJlbnRQYWdlLAogICAgICB9CiAgICAgIHNvbmFyQXBpLmdldEFsbFNvbmFySW5mb3MocGFyYW1zKS50aGVuKHJlcz0+ewogICAgICAgIHRoaXMudGFibGVEYXRhcyA9IHJlcy5kYXRhLmRhdGEKICAgICAgICB0aGlzLnRvdGFsID0gNTEKICAgICAgICB9CiAgICAgICkKICAgIH0sCiAgICBoYW5kbGVQb2xsaW5nRGF0YUxpc3QoKXsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDEKICAgICAgdGhpcy5nZXRGdWxsU29uYXJMaXN0KCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["FullSonar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FullSonar.vue","sourceRoot":"src/pages/coverage","sourcesContent":["<template>\n  <el-card class=\"card-content\">\n    <template slot=\"header\">\n      <template slot=\"title\">\n        <div>sonar扫描结果</div>\n      </template>\n    </template>\n    <el-table :data=\"tableDatas\" size=\"medium\"  ref=\"sonarTable\" v-loading=\"loading\">\n      <el-table-column label=\"应用名称\" prop=\"appName\"/>\n      <el-table-column label=\"负责人\" prop=\"owner\"/>\n      <el-table-column label=\"blocker级别问题\" prop=\"blocker\"/>\n      <el-table-column label=\"critical级别问题\" prop=\"critical\"/>\n      <el-table-column label=\"sonar问题详情\">\n        <template slot-scope=\"scope\">\n          <div>\n            <a :href=\"'http://sonar.jlgltech.com/dashboard?id='+scope.row.appName\" target=\"_blank\">\n              {{scope.row.appName}}</a>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"语言类型\" prop=\"lang\"/>\n    </el-table>\n    <table-pagination\n      :change=\"getFullSonarList\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n</template>\n\n<script>\nimport TablePagination from \"../../common/components/pagination/TablePagination\";\nimport {PAGINATION_SIZE} from \"../../constant\";\nimport {sonarApi} from \"@/api\"\nexport default {\n  name: \"FullSonar\",\n  components: {TablePagination},\n  props: {},\n  data(){\n    return{\n      condition: {},\n      total: 0,\n      pageSize: PAGINATION_SIZE.XLARGE,\n      currentPage: 1,\n      searchName: '',\n      tableDatas: [],\n    }\n  },\n  mounted() {\n    this.getFullSonarList()\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  methods: {\n    getFullSonarList(){\n      const params = {\n        limit: this.pageSize,\n        offset: this.currentPage,\n      }\n      sonarApi.getAllSonarInfos(params).then(res=>{\n        this.tableDatas = res.data.data\n        this.total = 51\n        }\n      )\n    },\n    handlePollingDataList(){\n      this.currentPage = 1\n      this.getFullSonarList()\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}