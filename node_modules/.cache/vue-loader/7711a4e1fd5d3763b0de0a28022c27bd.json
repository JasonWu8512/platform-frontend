{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/components/TestPlanList.vue","mtime":1667366879251},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TestPlanList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"TestPlanList.vue","sourceRoot":"src/pages/track/plan/components","sourcesContent":["<template>\n  <div>\n    <el-card class=\"card-content\">\n      <template slot=\"header\">\n        <table-header\n          :condition=\"condition\"\n          create-tip=\"创建测试计划\"\n          :show-third=\"stage === planStageEnum.SMOKE\"\n          :third-tip=\"isReject ? '返回全部计划': '筛选驳回计划'\"\n          icon-third=\"el-icon-sugar\"\n          @create=\"handleAddOrEdit\"\n          @search=\"handleSearch\"\n          @thirdClick=\"handleSearch('', true)\"\n        >\n          <template slot=\"title\">\n            <div>{{ stage === planStageEnum.SMOKE ? '冒烟测试计划' : '功能测试计划' }}</div>\n          </template>\n        </table-header>\n      </template>\n      <el-table\n        ref=\"table\"\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        @row-click=\"handleRowClick\"\n        @filter-change=\"filter\"\n      >\n\n        <!--  名称  -->\n        <el-table-column label=\"计划名称\" min-width=\"130\" prop=\"name\" show-overflow-tooltip/>\n\n        <!--  负责人  -->\n        <el-table-column\n          :filters=\"users\"\n          column-key=\"owner\"\n          label=\"负责人\"\n          prop=\"owner\"\n          show-overflow-tooltip\n        />\n\n        <!--  当前状态  -->\n        <el-table-column\n          :filters=\"planStatusOptions\"\n          column-key=\"status\"\n          label=\"计划状态\"\n          prop=\"status\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <plan-status :value=\"scope.row.status\"/>\n          </template>\n        </el-table-column>\n\n        <!--  测试阶段  -->\n        <el-table-column\n          :filters=\"planStageOptions\"\n          column-key=\"stage\"\n          label=\"测试阶段\"\n          prop=\"stage\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <plan-stage-table-item :value=\"scope.row.stage\"/>\n          </template>\n        </el-table-column>\n\n        <!--  测试进度  -->\n        <el-table-column label=\"执行成功率\" prop=\"percentage\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <el-progress :percentage=\"scope.row.percentage\"/>\n          </template>\n        </el-table-column>\n        <!--  确认成功率      -->\n        <el-table-column v-if=\"stage === planStageEnum.SMOKE\" label=\"确认成功率\" prop=\"percentage\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <el-progress :percentage=\"scope.row.checkPercentage\"/>\n          </template>\n        </el-table-column>\n\n        <!--  所属项目  -->\n        <el-table-column\n          :filters=\"projects\"\n          column-key=\"projId\"\n          label=\"所属项目\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <div>{{ scope.row.projNames.join() }}</div>\n          </template>\n        </el-table-column>\n\n        <!--        &lt;!&ndash;  计划开始时间  &ndash;&gt;-->\n        <!--        <el-table-column label=\"计划开始\" prop=\"targetStart\" show-overflow-tooltip sortable/>-->\n\n        <!--        &lt;!&ndash;  计划结束时间  &ndash;&gt;-->\n        <!--        <el-table-column label=\"计划结束\" prop=\"targetEnd\" show-overflow-tooltip sortable/>-->\n\n        <!--        &lt;!&ndash;  实际开始时间  &ndash;&gt;-->\n        <!--        <el-table-column label=\"实际开始\" prop=\"actualStart\" show-overflow-tooltip sortable/>-->\n\n        <!--        &lt;!&ndash;  实际结束时间  &ndash;&gt;-->\n        <!--        <el-table-column label=\"实际结束\" prop=\"actualEnd\" show-overflow-tooltip sortable/>-->\n\n        <!--  开发提测  -->\n        <el-table-column\n          v-if=\"stage === planStageEnum.SMOKE\"\n          label=\"提测审批状态\"\n          prop=\"packagingTest\"\n          show-overflow-tooltip\n          sortable\n        >\n          <template slot-scope=\"scope\">\n            <plan-test-table-item\n              :value=\"scope.row.instanceStatus\"\n              @approvalStatus=\"approvalStatus\"\n              @handleChange=\"handleChange(scope.row)\"\n              :is-dot-hidden=\"scope.row.rejectCount > 0\"\n            />\n          </template>\n        </el-table-column>\n\n        <!--  操作  -->\n        <el-table-column :width=\"table4BtnWidth\" label=\"操作\">\n          <template slot-scope=\"scope\">\n            <table-operator\n              copy-tip=\"查看测试报告\"\n              show-copy\n              show-delete\n              show-edit\n              @copyClick=\"handleToReport(scope.row)\"\n              @deleteClick=\"handleDelete(scope.row)\"\n              @editClick=\"handleAddOrEdit(scope.row)\"\n            >\n              <template v-if=\"stage === planStageEnum.SMOKE\" slot=\"latest\">\n                <el-tooltip\n                  v-if=\"scope.row.stage === planStageEnum.SMOKE\"\n                  content=\"提测\"\n                  placement=\"top\"\n                >\n                  <el-button\n                    :disabled=\"scope.row.percentage <= 90\"\n                    circle\n                    icon=\"el-icon-s-promotion\"\n                    size=\"mini\"\n                    type=\"warning\"\n                    @click.native.stop=\"handleSubmit(scope.row)\"\n                  />\n                </el-tooltip>\n              </template>\n            </table-operator>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <table-pagination\n        :change=\"initTableData\"\n        :current-page.sync=\"currentPage\"\n        :page-size.sync=\"pageSize\"\n        :total=\"total\"\n      />\n    </el-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {testPlanApi} from \"@/api\"\nimport {RequestGetTestCasePlanList, RequestUpdateApprovalStatus} from \"@/api/types/testPlan\"\nimport {typePlanData} from \"@/api/types/testPlanType\"\nimport variables from \"@/assets/css/utils.scss\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {_filter, formatTime} from \"@/common/utils\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\nimport {planInstanceStatusEnum, planStageEnum, planStageType, planStatusEnum, planStatusType} from \"@/constant/TestPlan\"\nimport PlanStageTableItem from \"@/pages/track/common/tableItems/PlanStageTableItem.vue\"\nimport PlanStatus from \"@/pages/track/common/tableItems/PlanStatusTableItem.vue\"\nimport PlanTestTableItem from \"@/pages/track/common/tableItems/PlanTestTableItem.vue\"\nimport {Message} from \"element-ui\"\n\n\n// 当前状态\nconst planStatusOptions = Object.entries(planStatusType).map(([value, text]) => {\n  return {text: text, value: value}\n})\n\n\nexport default {\n  name: \"TestPlanList\",\n  components: {\n    PlanTestTableItem,\n    PlanStageTableItem,\n    PlanStatus,\n    TableOperator,\n    TablePagination,\n    TableHeader,\n  },\n  data() {\n    return {\n      planStatusOptions: planStatusOptions,\n      planStageEnum: planStageEnum,\n      planInstanceStatusEnum: planInstanceStatusEnum,\n      projects: this.projects,\n      users: this.users,\n      isReject: false,\n      tableData: [],\n      currentPage: 1,\n      pageSize: PAGINATION_SIZE.LARGE,\n      total: 0,\n      caseFilter: {},\n    }\n  },\n  props: {\n    condition: Object,\n    stage: String,\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    table4BtnWidth() {\n      return variables['table4BtnWidth']\n    },\n    planStageOptions() {\n      if (this.stage === planStageEnum.SMOKE) {\n        // @ts-ignore\n        // eslint-disable-next-line no-unused-vars\n        return Object.entries(planStageType).filter(([value, text]) => value === planStageEnum.SMOKE).map(([value, text]) => {\n          return {text: text, value: value}\n        })\n      } else {\n        // @ts-ignore\n        // eslint-disable-next-line no-unused-vars\n        return Object.entries(planStageType).filter(([value, text]) => value !== planStageEnum.SMOKE).map(([value, text]) => {\n          return {text: text, value: value}\n        })\n      }\n    }\n  },\n  inject: ['projects', 'users'],\n  mounted() {\n    this.initTableData()\n  },\n  methods: {\n    initTableData() {\n      this.setSelectOptions()\n      this.getData()\n      this.$emit('update:condition', this.condition)\n    },\n    setSelectOptions() {\n      this.setOwnerOptions()\n      this.setProjectOptions()\n    },\n    getData(value?: string) {\n      let defaultStage = this.planStageOptions.map((item: any) => {\n        return item.value\n      })\n      const params: RequestGetTestCasePlanList = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        stage: defaultStage,\n        name: value,\n        isReject: this.isReject,\n      }\n      this.caseFilter = sessionStorage.getItem(this.$route.path)\n      this.caseFilter = this.caseFilter ? JSON.parse(this.caseFilter) : {}\n      if (JSON.stringify(this.caseFilter) !== \"{}\") {\n        Object.assign(params, this.caseFilter)\n        if (!this.caseFilter.stage || this.caseFilter.stage.length === 0) {\n          Object.assign(params, {stage: defaultStage})\n        }\n        this.$refs.table.columns.forEach((item: any) => {\n          item.filteredValue = this.caseFilter[item.columnKey]\n        })\n      }\n\n      testPlanApi.getTestCasePlanList(params)\n        .then(({data}) => {\n          this.total = data.total\n          this.tableData = data.data\n          this.tableData.forEach((item: typePlanData) => {\n            item.targetStart = formatTime(item.targetStart)\n            item.targetEnd = formatTime(item.targetEnd)\n            item.actualStart = formatTime(item.actualStart)\n            item.actualEnd = formatTime(item.actualEnd)\n          })\n        })\n    },\n    handleAddOrEdit(testPlan?: typePlanData) {\n      this.$eventBus.$emit('testPlanCreateOrUpdate', testPlan, this.planStageOptions)\n    },\n    handleSearch(value?: string, fetchReject?: boolean) {\n      if (fetchReject) {\n        this.isReject = !this.isReject\n      }\n      this.currentPage = 1\n      this.getData(value)\n    },\n    handleDelete(testPlan: typePlanData) {\n      this.$alert('确认删除测试计划?', '', {\n        confirmButtonText: '确定',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        callback: (action: string) => {\n          if (action === 'confirm') {\n            testPlanApi.deleteTestCasePlan(testPlan.id)\n              .then(() => {\n                this.refresh()\n              })\n          }\n        }\n      })\n    },\n    handleSubmit(testPlan: typePlanData) {\n      this.$eventBus.$emit(\"packagingTestSubmit\", testPlan)\n    },\n    handleToReport(testPlan: typePlanData) {\n      this.$router.push({\n        name: PathName.TestTrackCasePlanReport,\n        params: {planId: testPlan.id},\n      })\n    },\n    refresh() {\n      this.initTableData()\n    },\n    handleRowClick(row: any) {\n      this.$router.push({\n        name: PathName.TestTrackCasePlanView,\n        params: {planId: row.id},\n      })\n    },\n    handleChange(testPlan: typePlanData) {\n      // 冒烟用例审批通过需要测试检查通过率达100%\n      if (this.command === planInstanceStatusEnum.APPROVED && testPlan.checkPercentage !== 100) {\n        Message({\n          message: \"审批通过需要确认成功率达100%\",\n          type: \"warning\",\n          duration: 3000,\n          showClose: true\n        })\n        return\n      }\n      let body: RequestUpdateApprovalStatus = {\n        status: this.command,\n        userEmail: this.$store.state.login.email,\n      }\n      testPlanApi.updateApprovalStatus(testPlan.id, body)\n        .then(() => {\n          if (this.command === planInstanceStatusEnum.APPROVED) {\n            testPlanApi.updateTestCasePlan(testPlan.id, {status: planStatusEnum.DONE})\n              .then(() => {\n                this.refresh()\n              })\n          } else {\n            this.refresh()\n          }\n        })\n    },\n    approvalStatus(command: planInstanceStatusEnum) {\n      this.command = command\n    },\n    filter(filters: any) {\n      this.currentPage = 1\n      _filter(filters, this.caseFilter, this.$route.path)\n      this.initTableData()\n    },\n    setOwnerOptions() {\n      this.condition.ownerOptions = this.users\n    },\n    setProjectOptions() {\n      this.condition.projectOptions = this.projects\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-table {\n  cursor: pointer;\n}\n\n</style>\n"]}]}