{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseEdit.vue?vue&type=style&index=0&id=17f11924&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseEdit.vue","mtime":1655949681781},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAic3JjL2Fzc2V0cy9jc3MvdXRpbHMiOwoKLmRpYWxvZy10aXRsZSB7CiAgQGV4dGVuZCAlZGlhbG9nLXRpdGxlCn0KCi5lbC1zd2l0Y2ggewogIG1hcmdpbi1ib3R0b206IDEwcHgKfQo="},{"version":3,"sources":["TestCaseEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"TestCaseEdit.vue","sourceRoot":"src/pages/track/case/components","sourcesContent":["<template>\n  <div>\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      :title=\"operationType[operation]\"\n      :visible.sync=\"dialogFormVisible\"\n      class=\"dialog-title\"\n      width=\"65%\"\n      @close=\"close\"\n    >\n      <test-case-form ref=\"testCaseForm\" :condition=\"condition\" :read-only=\"readOnly\"/>\n\n      <template slot=\"footer\">\n        <el-switch\n          v-if=\"operation === operationEnum.ADD\"\n          v-model=\"isCreateContinue\"\n          active-text=\"保存并继续创建\"\n        />\n        <dialog-footer v-if=\"!readOnly\" @cancel=\"dialogFormVisible = false\" @confirm=\"saveCase\"/>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {testCaseApi} from \"@/api\"\nimport {RequestCreateTestCase, RequestUpdateTestCase} from \"@/api/types/testTrack\"\nimport {typeCaseData, typeCaseForm} from \"@/api/types/testTrackType\"\nimport DialogFooter from '@/common/components/DialogFooter.vue'\nimport {caseUpdateTypeEnum, executionEnum, operationEnum, operationType} from '@/constant/TestCase'\nimport TestCaseForm from \"@/pages/track/case/components/TestCaseForm.vue\"\nimport {caseForm, caseStep} from \"@/pages/track/case/forms\"\nimport {cloneDeep} from \"lodash\"\n\n\nexport default {\n  name: \"TestCaseEdit\",\n  components: {TestCaseForm, DialogFooter},\n  data() {\n    return {\n      operationEnum: operationEnum,\n      operationType: operationType,\n      testCase: {},\n      operation: '',\n      dialogFormVisible: false,\n      isCreateContinue: false,\n      isStepTableAlive: true,\n    }\n  },\n  props: {\n    treeNodes: Array,\n    readOnly: {\n      type: Boolean,\n      default: true\n    },\n    selectNode: Object,\n    currentProject: Object,\n    condition: Object,\n  },\n  mounted() {\n    this.$eventBus.$on('testCaseAddOrEditOrCopy', (testcase: typeCaseData, isCopy: boolean) => {\n      this.open(testcase, isCopy)\n    })\n  },\n  methods: {\n    reload() {\n      this.isStepTableAlive = false\n      this.$nextTick(() => (this.isStepTableAlive = true))\n    },\n    open(testCase: typeCaseData, isCopy: Boolean) {\n      this.dialogFormVisible = true\n      // 强制等待DOM加载完毕再操作\n      this.$nextTick(() => {\n        const form: typeCaseData & typeCaseForm = cloneDeep(testCase || caseForm)\n        this.operation = operationEnum.ADD\n        if (testCase) {\n          // 修改或查看\n          if (this.readOnly) {\n            this.operation = operationEnum.VIEW\n          } else {\n            this.operation = operationEnum.EDIT\n            form.module = testCase.treeId\n            form.maintainer = testCase.qa\n            form.priority = testCase.importance\n            form.method = testCase.executionType\n            form.prerequisite = testCase.preconditions\n          }\n          // 复制\n          if (isCopy) {\n            this.operation = operationEnum.ADD\n            form.name = ''\n          }\n        } else {\n          form.module = this.selectNode.id\n          form.maintainer = this.$store.state.login.username\n        }\n        // 没有步骤加一个步骤\n        if (form.steps.length === 0) {\n          form.steps.push(caseStep)\n        }\n        this.$refs.testCaseForm.initForm(form)\n      })\n    },\n    close() {\n      this.dialogFormVisible = false\n      this.reload()\n    },\n    saveCase() {\n      const testCaseForm = this.$refs.testCaseForm.$children[0]\n      testCaseForm.validate((valid: any) => {\n        if (valid) {\n          this.testCase = testCaseForm.model\n          const body: RequestCreateTestCase = this.buildParam()\n          if (this.operation === operationEnum.ADD) {\n            if (this.validate(body)) {\n              testCaseApi.createTestCase(body)\n                .then(() => {\n                  if (this.isCreateContinue) {\n                    const form = cloneDeep(caseForm)\n                    form.module = this.selectNode.id\n                    form.maintainer = this.$store.state.login.username\n                    this.$refs.testCaseForm.initForm(form)\n                  } else {\n                    this.dialogFormVisible = false\n                  }\n                  this.$emit(\"refresh\")\n                  return\n                })\n            }\n          } else if (this.operation === operationEnum.EDIT) {\n            let updateBody: RequestUpdateTestCase = {\n              type: caseUpdateTypeEnum.UPDATE_CASE,\n              case: body\n            }\n            if (this.validate(body)) {\n              testCaseApi.updateTestCase(this.testCase.id, updateBody)\n                .then(() => {\n                  if (this.isCreateContinue) {\n                    this.$refs.testCaseForm.$children[0].resetFields()\n                  } else {\n                    this.dialogFormVisible = false\n                  }\n                  this.$emit(\"refresh\")\n                  return\n                })\n            }\n          }\n        }\n      })\n    },\n    buildParam() {\n      this.testCase = this.$refs.testCaseForm.$children[0].model\n      let body: RequestCreateTestCase = {\n        projId: this.currentProject.id,\n        treeId: this.testCase.module,\n        name: this.testCase.name.trim(),\n        executionType: this.testCase.method,\n        caseType: this.testCase.caseType,\n        importance: this.testCase.priority,\n        qa: this.testCase.maintainer,\n        description: this.testCase.description\n      }\n      if (this.testCase.method !== executionEnum.AUTO) {\n        body = Object.assign({testId: null}, body)\n      }\n      // 前置条件\n      if (this.testCase.prerequisite.trim()) {\n        body = Object.assign({preconditions: this.testCase.prerequisite}, body)\n      }\n      // 没有测试步骤\n      if (this.testCase.steps[0].desc !== '') {\n        body = Object.assign({steps: this.testCase.steps}, body)\n      }\n      return body\n    },\n    validate(param: RequestCreateTestCase) {\n      if (param.steps) {\n        for (let i = 0; i < param.steps.length; i++) {\n          if ((param.steps[i].actions && param.steps[i].actions.length > 300) ||\n            (param.steps[i].expectedresults && param.steps[i].expectedresults.length > 300)) {\n            this.$message.warning('步骤描述,预期结果长度必须小于300')\n            return false\n          }\n        }\n      }\n      return true\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/utils\";\n\n.dialog-title {\n  @extend %dialog-title\n}\n\n.el-switch {\n  margin-bottom: 10px\n}\n</style>\n"]}]}