{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/common/TestPlanCaseStatusButton.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/common/TestPlanCaseStatusButton.vue","mtime":1655949681802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7cGxhblJlc3VsdEVudW0sIHBsYW5SZXN1bHRUeXBlfSBmcm9tICdAL2NvbnN0YW50L1Rlc3RQbGFuJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUZXN0UGxhbkNhc2VTdGF0dXNCdXR0b24iLAogIHByb3BzOiB7CiAgICBzdGF0dXM6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgaXNSZWFkT25seTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGlzRmFpbHVyZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2FkaW5nCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxhblJlc3VsdEVudW06IHBsYW5SZXN1bHRFbnVtLAogICAgICBwbGFuUmVzdWx0VHlwZTogcGxhblJlc3VsdFR5cGUsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRTdGF0dXMoc3RhdHVzOiBwbGFuUmVzdWx0RW51bSkgewogICAgICB0aGlzLiRlbWl0KCdzdGF0dXNDaGFuZ2UnLCBzdGF0dXMpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TestPlanCaseStatusButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestPlanCaseStatusButton.vue","sourceRoot":"src/pages/track/plan/common","sourcesContent":["<template>\n  <el-row class=\"status-button\">\n    <el-col>\n      <el-button\n        :disabled=\"isReadOnly || isFailure\"\n        :icon=\"status === planResultEnum.PASS ? 'el-icon-check' : ''\"\n        :loading=\"loading && status === planResultEnum.PASS\"\n        round\n        size=\"mini\"\n        type=\"success\"\n        @click=\"setStatus(planResultEnum.PASS)\"\n      >\n        {{ planResultType[planResultEnum.PASS] }}\n      </el-button>\n    </el-col>\n    <el-col>\n      <el-button\n        :disabled=\"isReadOnly\"\n        :icon=\"status === planResultEnum.FAIL ? 'el-icon-check' : ''\"\n        :loading=\"loading && status === planResultEnum.FAIL\"\n        round\n        size=\"mini\"\n        type=\"danger\"\n        @click=\"setStatus(planResultEnum.FAIL)\"\n      >\n        {{ planResultType[planResultEnum.FAIL] }}\n      </el-button>\n    </el-col>\n    <el-col>\n      <el-button\n        :disabled=\"isReadOnly\"\n        :icon=\"status === planResultEnum.BLOCK ? 'el-icon-check' : ''\"\n        :loading=\"loading && status === planResultEnum.BLOCK\"\n        round\n        size=\"mini\"\n        type=\"warning\"\n        @click=\"setStatus(planResultEnum.BLOCK)\"\n      >\n        {{ planResultType[planResultEnum.BLOCK] }}\n      </el-button>\n    </el-col>\n    <el-col>\n      <el-button\n        :disabled=\"isReadOnly\"\n        :icon=\"status === planResultEnum.SKIP ? 'el-icon-check' : ''\"\n        :loading=\"loading && status === planResultEnum.SKIP\"\n        round\n        size=\"mini\"\n        type=\"info\"\n        @click=\"setStatus(planResultEnum.SKIP)\"\n      >\n        {{ planResultType[planResultEnum.SKIP] }}\n      </el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<script lang=\"ts\">\nimport {planResultEnum, planResultType} from '@/constant/TestPlan'\n\nexport default {\n  name: \"TestPlanCaseStatusButton\",\n  props: {\n    status: {\n      type: String\n    },\n    isReadOnly: {\n      type: Boolean,\n      default: false\n    },\n    isFailure: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    }\n  },\n  data() {\n    return {\n      planResultEnum: planResultEnum,\n      planResultType: planResultType,\n    }\n  },\n  methods: {\n    setStatus(status: planResultEnum) {\n      this.$emit('statusChange', status)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n\n.status-button {\n  @extend %flex-left-center-row;\n}\n\n.el-col {\n  margin-left: 20px;\n}\n\n</style>\n"]}]}