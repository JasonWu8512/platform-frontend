{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseForm.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/case/components/TestCaseForm.vue","mtime":1655949681781},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7dHlwZUNhc2VGb3JtLCB0eXBlQ2FzZVN0ZXB9IGZyb20gIkAvYXBpL3R5cGVzL3Rlc3RUcmFja1R5cGUiCmltcG9ydCB2YXJpYWJsZXMgZnJvbSAnQC9hc3NldHMvY3NzL3V0aWxzLnNjc3MnCmltcG9ydCBUYWJsZU9wZXJhdG9yIGZyb20gIkAvY29tbW9uL2NvbXBvbmVudHMvVGFibGVPcGVyYXRvci52dWUiCmltcG9ydCB7ZXhlY3V0aW9uRW51bX0gZnJvbSAnQC9jb25zdGFudC9UZXN0Q2FzZScKaW1wb3J0IHtjYXNlRm9ybVJ1bGVzfSBmcm9tICJAL3BhZ2VzL3RyYWNrL2Nhc2UvZm9ybXMiCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3RDYXNlRm9ybSIsCiAgY29tcG9uZW50czoge1RhYmxlT3BlcmF0b3J9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBleGVjdXRpb25FbnVtOiBleGVjdXRpb25FbnVtLAogICAgICBtb2R1bGVPcHRpb25zOiBbXSwKICAgICAgbWFpbnRhaW5lck9wdGlvbnM6IFtdLAogICAgICBwcmlvcml0eU9wdGlvbnM6IFtdLAogICAgICBleGVjdXRpb25PcHRpb25zOiBbXSwKICAgICAgY2FzZVR5cGVPcHRpb25zOiBbXSwKICAgICAgZm9ybToge30sCiAgICAgIHRlc3RPcHRpb25zOiBbXSwKICAgICAgcnVsZXM6IHRoaXMucmVhZE9ubHkgPyB7fSA6IGNhc2VGb3JtUnVsZXMsCiAgICAgIGlzU3RlcFRhYmxlQWxpdmU6IHRydWUsCiAgICB9CiAgfSwKICBwcm9wczogewogICAgcmVhZE9ubHk6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGNvbmRpdGlvbjogT2JqZWN0LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZvcm1MYWJlbFdpZHRoKCkgewogICAgICByZXR1cm4gdmFyaWFibGVzWydmb3JtTGFiZWxXaWR0aCddCiAgICB9LAogICAgdGFibGUzQnRuV2lkdGgoKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXNbJ3RhYmxlM0J0bldpZHRoJ10KICAgIH0sCiAgICBsb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubG9hZGluZwogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRTZWxlY3RPcHRpb25zKCkgewogICAgICB0aGlzLm1vZHVsZU9wdGlvbnMgPSB0aGlzLmNvbmRpdGlvbi5tb2R1bGVPcHRpb25zCiAgICAgIHRoaXMubWFpbnRhaW5lck9wdGlvbnMgPSB0aGlzLmNvbmRpdGlvbi5tYWludGFpbmVyT3B0aW9ucwogICAgICB0aGlzLnByaW9yaXR5T3B0aW9ucyA9IHRoaXMuY29uZGl0aW9uLnByaW9yaXR5T3B0aW9ucwogICAgICB0aGlzLmV4ZWN1dGlvbk9wdGlvbnMgPSB0aGlzLmNvbmRpdGlvbi5leGVjdXRpb25PcHRpb25zCiAgICAgIHRoaXMuY2FzZVR5cGVPcHRpb25zID0gdGhpcy5jb25kaXRpb24uY2FzZVR5cGVPcHRpb25zCiAgICB9LAogICAgaW5pdEZvcm0oZm9ybTogdHlwZUNhc2VGb3JtKSB7CiAgICAgIHRoaXMuaW5pdFNlbGVjdE9wdGlvbnMoKQogICAgICB0aGlzLmZvcm0gPSBmb3JtCiAgICB9LAogICAgaGFuZGxlQWRkU3RlcChpbmRleDogbnVtYmVyLCBkYXRhOiB0eXBlQ2FzZVN0ZXApIHsKICAgICAgbGV0IHN0ZXA6IHR5cGVDYXNlU3RlcCA9IHtzdGVwTnVtYmVyOiBkYXRhLnN0ZXBOdW1iZXIgKyAxLCBhY3Rpb25zOiAnJywgZXhwZWN0ZWRyZXN1bHRzOiAnJ30KICAgICAgdGhpcy5mb3JtLnN0ZXBzLmZvckVhY2goKHN0ZXA6IHR5cGVDYXNlU3RlcCkgPT4gewogICAgICAgIGlmIChzdGVwLnN0ZXBOdW1iZXIgPiBkYXRhLnN0ZXBOdW1iZXIpIHsKICAgICAgICAgIHN0ZXAuc3RlcE51bWJlcisrCiAgICAgICAgfQogICAgICB9KQogICAgICB0aGlzLmZvcm0uc3RlcHMuc3BsaWNlKGluZGV4ICsgMSwgMCwgc3RlcCkKICAgIH0sCiAgICBoYW5kbGVDb3B5U3RlcChpbmRleDogbnVtYmVyLCBkYXRhOiB0eXBlQ2FzZVN0ZXApIHsKICAgICAgbGV0IHN0ZXA6IHR5cGVDYXNlU3RlcCA9IHsKICAgICAgICBzdGVwTnVtYmVyOiBkYXRhLnN0ZXBOdW1iZXIgKyAxLAogICAgICAgIGFjdGlvbnM6IGRhdGEuYWN0aW9ucywKICAgICAgICBleHBlY3RlZHJlc3VsdHM6IGRhdGEuZXhwZWN0ZWRyZXN1bHRzCiAgICAgIH0KICAgICAgdGhpcy5mb3JtLnN0ZXBzLmZvckVhY2goKHN0ZXA6IHR5cGVDYXNlU3RlcCkgPT4gewogICAgICAgIGlmIChzdGVwLnN0ZXBOdW1iZXIgPiBkYXRhLnN0ZXBOdW1iZXIpIHsKICAgICAgICAgIHN0ZXAuc3RlcE51bWJlcisrCiAgICAgICAgfQogICAgICB9KQogICAgICB0aGlzLmZvcm0uc3RlcHMuc3BsaWNlKGluZGV4ICsgMSwgMCwgc3RlcCkKICAgIH0sCiAgICBoYW5kbGVEZWxldGVTdGVwKGluZGV4OiBudW1iZXIsIGRhdGE6IHR5cGVDYXNlU3RlcCkgewogICAgICB0aGlzLmZvcm0uc3RlcHMuc3BsaWNlKGluZGV4LCAxKQogICAgICB0aGlzLmZvcm0uc3RlcHMuZm9yRWFjaCgoc3RlcDogdHlwZUNhc2VTdGVwKSA9PiB7CiAgICAgICAgaWYgKHN0ZXAuc3RlcE51bWJlciA+IGRhdGEuc3RlcE51bWJlcikgewogICAgICAgICAgc3RlcC5zdGVwTnVtYmVyLS0KICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgdHlwZUNoYW5nZSgpIHsKICAgICAgdGhpcy5mb3JtLnRlc3RJZCA9ICcnCiAgICAgIHRoaXMuZ2V0VGVzdE9wdGlvbnMoKQogICAgfSwKICAgIGdldFRlc3RPcHRpb25zKCkgewogICAgICB0aGlzLnRlc3RPcHRpb25zID0gW10KICAgICAgaWYgKHRoaXMuY3VycmVudFByb2plY3QgJiYgdGhpcy5mb3JtLnR5cGUgIT0gJycgJiYgdGhpcy5mb3JtLnR5cGUgIT0gJ2Z1bmN0aW9uYWwnKSB7CiAgICAgICAgdGhpcy5leHBlY3RlZHJlc3VsdHMgPSB0aGlzLiRnZXQoJy8nICsgdGhpcy5mb3JtLnR5cGUgKyAnL2xpc3QvJyArIHRoaXMuY3VycmVudFByb2plY3QuaWQsIChyZXNwb25zZTogYW55KSA9PiB7CiAgICAgICAgICB0aGlzLnRlc3RPcHRpb25zID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgdGhpcy50ZXN0T3B0aW9ucy51bnNoaWZ0KHtpZDogJ290aGVyJywgbmFtZTogdGhpcy4kdCgndGVzdF90cmFjay5jYXNlLm90aGVyJyl9KQogICAgICAgIH0pCiAgICAgIH0gZWxzZSBpZiAodGhpcy5mb3JtLnR5cGUgPT09ICdmdW5jdGlvbmFsJykgewogICAgICAgIHRoaXMudGVzdE9wdGlvbnMgPSBbe2lkOiAnb3RoZXInLCBuYW1lOiB0aGlzLiR0KCd0ZXN0X3RyYWNrLmNhc2Uub3RoZXInKX1dCiAgICAgICAgdGhpcy5mb3JtLnRlc3RJZCA9ICdvdGhlcicKICAgICAgfQogICAgfSwKICB9Cn0K"},{"version":3,"sources":["TestCaseForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"TestCaseForm.vue","sourceRoot":"src/pages/track/case/components","sourcesContent":["<template>\n  <el-form v-loading=\"loading\" :model=\"form\" :rules=\"rules\">\n    <el-row>\n      <el-col :offset=\"1\" :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"用例名称\" prop=\"name\">\n          <el-input\n            v-model.trim=\"form.name\"\n            :disabled=\"readOnly\"\n            clearable\n            placeholder=\"请输入内容\"\n          />\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"所属模块\" prop=\"module\">\n          <el-select\n            v-model=\"form.module\"\n            :disabled=\"readOnly\"\n            filterable\n            placeholder=\"请选择模块\"\n          >\n            <el-option\n              v-for=\"item in moduleOptions\"\n              :key=\"item.id\"\n              :label=\"item.path\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <el-row>\n      <el-col :offset=\"1\" :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"维护人\" prop=\"maintainer\">\n          <el-select\n            v-model=\"form.maintainer\"\n            :disabled=\"readOnly\"\n            filterable\n            placeholder=\"请选择维护人\"\n          >\n            <el-option\n              v-for=\"item in maintainerOptions\"\n              :key=\"item.id\"\n              :label=\"item.text\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"用例等级\" prop=\"priority\">\n          <el-select\n            v-model=\"form.priority\"\n            :disabled=\"readOnly\"\n            clearable\n            placeholder=\"请选择用例等级\"\n          >\n            <el-option\n              v-for=\"item in priorityOptions\"\n              :key=\"item.value\"\n              :label=\"item.text\"\n              :value=\"parseInt(item.value)\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <el-row>\n      <el-col :offset=\"1\" :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"类型\" prop=\"caseType\">\n          <el-select\n            v-model=\"form.caseType\"\n            disabled\n            placeholder=\"请选择用例类型\"\n            @change=\"typeChange\"\n          >\n            <el-option\n              v-for=\"item in caseTypeOptions\"\n              :key=\"item.value\"\n              :label=\"item.text\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"测试方式\" prop=\"method\">\n          <el-select v-model=\"form.method\" disabled placeholder=\"请选择测试方式\">\n            <el-option\n              v-for=\"item in executionOptions\"\n              :key=\"item.value\"\n              :label=\"item.text\"\n              :value=\"parseInt(item.value)\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <el-row v-if=\"form.method && form.method === executionEnum.AUTO\">\n      <el-col :offset=\"1\" :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"关联测试\" prop=\"testId\">\n          <el-select\n            v-model=\"form.testId\"\n            :disabled=\"readOnly\"\n            filterable\n            placeholder=\"请选择用例类型\"\n          >\n            <el-option\n              v-for=\"item in testOptions\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-col>\n      <el-col v-if=\"form.testId==='other'\" :offset=\"1\" :span=\"10\">\n        <el-form-item :label-width=\"formLabelWidth\" label=\"测试名称\" prop=\"testId\">\n          <el-input v-model=\"form.otherTestName\" placeholder=\"请输入关联用例名称\"/>\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <el-row class=\"row-title\">\n      <el-col :offset=\"2\">前置条件:</el-col>\n    </el-row>\n    <el-row class=\"row-content\">\n      <el-col :span=\"20\">\n        <el-form-item prop=\"prerequisite\">\n          <el-input\n            v-model=\"form.prerequisite\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            :disabled=\"readOnly\"\n            placeholder=\"请输入前置条件\"\n            type=\"textarea\"\n          />\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <el-row v-if=\"form.method && form.method !== executionEnum.AUTO\" class=\"row-title\">\n      <el-col :offset=\"2\">执行步骤:</el-col>\n    </el-row>\n\n    <el-row v-if=\"form.method && form.method !== executionEnum.AUTO\" class=\"row-content\">\n      <el-col :span=\"20\">\n        <el-table\n          v-if=\"isStepTableAlive\"\n          :data=\"form.steps\"\n          :default-sort=\"{prop: 'stepNumber', order: 'ascending'}\"\n          border\n          class=\"tb-edit\"\n          highlight-current-row\n          size=\"mini\"\n        >\n          <el-table-column label=\"编号\" min-width=\"10%\" prop=\"stepNumber\"/>\n          <el-table-column label=\"步骤描述\" min-width=\"35%\" prop=\"actions\">\n            <template slot-scope=\"scope\">\n              <el-input\n                v-model=\"scope.row.actions\"\n                :autosize=\"{minRows: 2, maxRows: 6}\"\n                :disabled=\"readOnly\"\n                class=\"table-edit-input\"\n                clearable\n                placeholder=\"请输入内容\"\n                type=\"textarea\"\n              />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"预期结果\" min-width=\"35%\" prop=\"expectedresults\">\n            <template slot-scope=\"scope\">\n              <el-input\n                v-model=\"scope.row.expectedresults\"\n                :autosize=\"{minRows: 2, maxRows: 6}\"\n                :disabled=\"readOnly\"\n                class=\"table-edit-input\"\n                clearable\n                placeholder=\"请输入内容\"\n                type=\"textarea\"\n              />\n            </template>\n          </el-table-column>\n          <el-table-column v-if=\"!readOnly\" :width=\"table3BtnWidth\" label=\"操作\">\n            <template slot-scope=\"scope\">\n              <table-operator\n                :delete-disable=\"(scope.$index === 0 && form.steps.length <= 1)\"\n                :edit-icon=\"'el-icon-plus'\"\n                :read-only=\"readOnly\"\n                copy-tip=\"复制\"\n                delete-tip=\"删除\"\n                edit-tip=\"添加步骤\"\n                show-copy\n                show-delete\n                show-edit\n                @copyClick=\"handleCopyStep(scope.$index, scope.row)\"\n                @deleteClick=\"handleDeleteStep(scope.$index, scope.row)\"\n                @editClick=\"handleAddStep(scope.$index, scope.row)\"\n              />\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n\n    <el-row class=\"row-title\">\n      <el-col :offset=\"2\">备注:</el-col>\n    </el-row>\n    <el-row class=\"row-content\">\n      <el-col :span=\"20\">\n        <el-form-item prop=\"description\">\n          <el-input\n            v-model=\"form.description\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            :disabled=\"readOnly\"\n            placeholder=\"请输入内容\"\n            type=\"textarea\"\n          />\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n  </el-form>\n</template>\n\n<script lang=\"ts\">\nimport {typeCaseForm, typeCaseStep} from \"@/api/types/testTrackType\"\nimport variables from '@/assets/css/utils.scss'\nimport TableOperator from \"@/common/components/TableOperator.vue\"\nimport {executionEnum} from '@/constant/TestCase'\nimport {caseFormRules} from \"@/pages/track/case/forms\"\n\nexport default {\n  name: \"TestCaseForm\",\n  components: {TableOperator},\n  data() {\n    return {\n      executionEnum: executionEnum,\n      moduleOptions: [],\n      maintainerOptions: [],\n      priorityOptions: [],\n      executionOptions: [],\n      caseTypeOptions: [],\n      form: {},\n      testOptions: [],\n      rules: this.readOnly ? {} : caseFormRules,\n      isStepTableAlive: true,\n    }\n  },\n  props: {\n    readOnly: {\n      type: Boolean,\n      default: true\n    },\n    condition: Object,\n  },\n  computed: {\n    formLabelWidth() {\n      return variables['formLabelWidth']\n    },\n    table3BtnWidth() {\n      return variables['table3BtnWidth']\n    },\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  methods: {\n    initSelectOptions() {\n      this.moduleOptions = this.condition.moduleOptions\n      this.maintainerOptions = this.condition.maintainerOptions\n      this.priorityOptions = this.condition.priorityOptions\n      this.executionOptions = this.condition.executionOptions\n      this.caseTypeOptions = this.condition.caseTypeOptions\n    },\n    initForm(form: typeCaseForm) {\n      this.initSelectOptions()\n      this.form = form\n    },\n    handleAddStep(index: number, data: typeCaseStep) {\n      let step: typeCaseStep = {stepNumber: data.stepNumber + 1, actions: '', expectedresults: ''}\n      this.form.steps.forEach((step: typeCaseStep) => {\n        if (step.stepNumber > data.stepNumber) {\n          step.stepNumber++\n        }\n      })\n      this.form.steps.splice(index + 1, 0, step)\n    },\n    handleCopyStep(index: number, data: typeCaseStep) {\n      let step: typeCaseStep = {\n        stepNumber: data.stepNumber + 1,\n        actions: data.actions,\n        expectedresults: data.expectedresults\n      }\n      this.form.steps.forEach((step: typeCaseStep) => {\n        if (step.stepNumber > data.stepNumber) {\n          step.stepNumber++\n        }\n      })\n      this.form.steps.splice(index + 1, 0, step)\n    },\n    handleDeleteStep(index: number, data: typeCaseStep) {\n      this.form.steps.splice(index, 1)\n      this.form.steps.forEach((step: typeCaseStep) => {\n        if (step.stepNumber > data.stepNumber) {\n          step.stepNumber--\n        }\n      })\n    },\n    typeChange() {\n      this.form.testId = ''\n      this.getTestOptions()\n    },\n    getTestOptions() {\n      this.testOptions = []\n      if (this.currentProject && this.form.type != '' && this.form.type != 'functional') {\n        this.expectedresults = this.$get('/' + this.form.type + '/list/' + this.currentProject.id, (response: any) => {\n          this.testOptions = response.data\n          this.testOptions.unshift({id: 'other', name: this.$t('test_track.case.other')})\n        })\n      } else if (this.form.type === 'functional') {\n        this.testOptions = [{id: 'other', name: this.$t('test_track.case.other')}]\n        this.form.testId = 'other'\n      }\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"src/assets/css/display\";\n\n.el-input {\n  width: auto;\n}\n\n.row-title {\n  margin-top: 15px;\n}\n\n.row-content {\n  margin-top: 10px;\n  @extend %flex-center-row\n}\n\n</style>\n\n<style lang=\"scss\">\n/* <-- 表格 input 编辑效果 */\n.table-edit-input .el-textarea__inner {\n  border-style: hidden;\n}\n</style>\n"]}]}