{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/SmokeTestPlan.vue?vue&type=style&index=0&id=43e344ac&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/track/plan/SmokeTestPlan.vue","mtime":1655949681802},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/css-loader/dist/cjs.js","mtime":1644298105513},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644314988580},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1644298105780},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/sass-loader/dist/cjs.js","mtime":1644314983366},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYXJkLWNvbnRlbnQgewogIG92ZXJmbG93LXk6IGF1dG87Cn0K"},{"version":3,"sources":["SmokeTestPlan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA","file":"SmokeTestPlan.vue","sourceRoot":"src/pages/track/plan","sourcesContent":["<template>\n  <div>\n    <test-plan-list ref=\"testPlanList\" :condition.sync=\"condition\" stage=\"smoke\"/>\n    <test-plan-edit ref=\"testPlanEditDialog\" :condition=\"condition\" @refresh=\"refresh\"/>\n    <packaging-test ref=\"packingTestDialog\" @refresh=\"refresh\"/>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport PackagingTest from \"@/pages/track/plan/components/PackagingTest.vue\"\nimport TestPlanEdit from \"@/pages/track/plan/components/TestPlanEdit.vue\"\nimport TestPlanList from \"@/pages/track/plan/components/TestPlanList.vue\"\n\nexport default {\n  name: \"SmokeTestPlan\",\n  components: {PackagingTest, TestPlanEdit, TestPlanList},\n  data() {\n    return {\n      condition: {},\n    }\n  },\n  methods: {\n    refresh() {\n      this.$refs.testPlanList.initTableData()\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.card-content {\n  overflow-y: auto;\n}\n</style>\n"]}]}