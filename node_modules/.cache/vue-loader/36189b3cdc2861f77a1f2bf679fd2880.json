{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/auto/AutoPointConfigBuildRecord.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/auto/AutoPointConfigBuildRecord.vue","mtime":1658199471565},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/ts-loader/index.js","mtime":1644314987889},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQge2F1dG9BcGl9IGZyb20gIkAvYXBpIgppbXBvcnQgVGFibGVQYWdpbmF0aW9uIGZyb20gIkAvY29tbW9uL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9UYWJsZVBhZ2luYXRpb24udnVlIgppbXBvcnQgVGFibGVIZWFkZXIgZnJvbSAiQC9jb21tb24vY29tcG9uZW50cy9UYWJsZUhlYWRlci52dWUiCmltcG9ydCAgVGFibGVPcGVyYXRvciBmcm9tICJAL2NvbW1vbi9jb21wb25lbnRzL1RhYmxlT3BlcmF0b3IudnVlIgppbXBvcnQge1BBR0lOQVRJT05fU0laRX0gZnJvbSAiQC9jb25zdGFudCIKaW1wb3J0IHtQYXRoTmFtZX0gZnJvbSAiQC9jb25zdGFudC9yb3V0ZURhdGEiCgpleHBvcnQgZGVmYXVsdCB7Cm5hbWU6ICJBdXRvQ29uZmlnQnVpbGRSZWNvcmQiLAogIGNvbXBvbmVudHM6IHtUYWJsZVBhZ2luYXRpb24sIFRhYmxlSGVhZGVyLCBUYWJsZU9wZXJhdG9yfSwKICBkYXRhKCkgewogIHJldHVybiB7CiAgICBjb25kaXRpb246IHt9LAogICAgdG90YWw6IDAsCiAgICBwYWdlU2l6ZTogUEFHSU5BVElPTl9TSVpFLkxBUkdFLAogICAgY3VycmVudFBhZ2U6IDEsCiAgICB0YWJsZURhdGE6IFtdLAogICAgdXNlclBpcGVsaW5lSWQ6IHRydWUsCiAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbmZpZ0lkKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zLmNvbmZpZ0lkID8gdGhpcy4kcm91dGUucGFyYW1zLmNvbmZpZ0lkIDogJycKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEJ1aWxkUmVjb3JkKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIHRhZ1R5cGUocm93OiBhbnkpewogICAgICBpZiAocm93LnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnKSB7CiAgICAgICAgcmV0dXJuICdzdWNjZXNzJwogICAgICB9ZWxzZSBpZihyb3cuc3RhdHVzID09PSAncnVubmluZycpIHsKICAgICAgICByZXR1cm4gJ2luZm8nCiAgICAgIH1lbHNlIGlmKHJvdy5zdGF0dXMgPT09ICdwZW5kaW5nJykgewogICAgICAgIHJldHVybiAnJwogICAgICB9ZWxzZSBpZihyb3cuc3RhdHVzID09PSAnZmFpbCcpIHsKICAgICAgICByZXR1cm4gJ2RhbmdlcicKICAgICAgfQogICAgfSwKICAgIGdldEJ1aWxkUmVjb3JkKHZhbHVlPzogc3RyaW5nKSB7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICBvZmZzZXQ6IHRoaXMucGFnZVNpemUgKiAodGhpcy5jdXJyZW50UGFnZSAtIDEpLAogICAgICAgIGxpbWl0OiB0aGlzLnBhZ2VTaXplLAogICAgICAgIGNvbmZpZ05hbWU6IHZhbHVlLAogICAgICAgIGNvbmZpZ0lkOiB0aGlzLmNvbmZpZ0lkCiAgICAgIH0KICAgICAgYXV0b0FwaS5nZXRBdXRvUnVuSGlzdG9yeShwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlcy5kYXRhLmRhdGEKICAgICAgICB0aGlzLnRvdGFsID0gcmVzLmRhdGEudG90YWwKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVHZXRCdWlsZFJlY29yZCh2YWx1ZT86IHN0cmluZykgewogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMQogICAgICB0aGlzLmdldEJ1aWxkUmVjb3JkKHZhbHVlKQogICAgfSwKICAgIGhhbmRsZVRvQWxsdXJlUmVwb3J0KHJvdz86IGFueSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogUGF0aE5hbWUuQXV0b0Nhc2VSZXBvcnQsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBoaXN0b3J5SWQ6IHJvdy5pZAogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["AutoPointConfigBuildRecord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutoPointConfigBuildRecord.vue","sourceRoot":"src/pages/auto","sourcesContent":["<template>\n  <el-card>\n    <template slot=\"header\">\n      <table-header :condition=\"condition\"\n                    placeholder=\"根据配置名称搜索\"\n                    :showCreate=\"false\"\n                    :showSearch=\"configId === ''\"\n                    @search=\"handleGetBuildRecord\"\n      >\n        <template slot=\"title\">\n          <div>接口自动化执行记录</div>\n        </template>\n      </table-header>\n    </template>\n    <el-table :data=\"tableData\" size=\"medium\">\n      <el-table-column prop=\"id\" label=\"构建id\"/>\n      <el-table-column prop=\"autoConfigName\" label=\"配置名称\"/>\n      <el-table-column prop=\"username\" label=\"触发者\"/>\n      <el-table-column prop=\"createdAt\" label=\"构建时间\">\n        <template v-slot:default=\"scope\">\n          <span>{{new Date(scope.row.createdAt).format('yyyy-MM-dd hh:mm:ss')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"构建状态\">\n        <template v-slot:default=\"scope\">\n          <el-tag :type=\"tagType(scope.row)\" effect=\"dark\">{{scope.row.statusChinese}}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"mark\" label=\"备注\"/>\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <table-operator\n            copy-tip=\"allure报告\"\n            show-copy\n            @copyClick=\"handleToAllureReport(scope.row)\"\n          >\n          </table-operator>\n        </template>\n      </el-table-column>\n    </el-table>\n    <table-pagination\n      :change=\"getBuildRecord\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n</template>\n\n<script lang=\"ts\">\nimport {autoApi} from \"@/api\"\nimport TablePagination from \"@/common/components/pagination/TablePagination.vue\"\nimport TableHeader from \"@/common/components/TableHeader.vue\"\nimport  TableOperator from \"@/common/components/TableOperator.vue\"\nimport {PAGINATION_SIZE} from \"@/constant\"\nimport {PathName} from \"@/constant/routeData\"\n\nexport default {\nname: \"AutoConfigBuildRecord\",\n  components: {TablePagination, TableHeader, TableOperator},\n  data() {\n  return {\n    condition: {},\n    total: 0,\n    pageSize: PAGINATION_SIZE.LARGE,\n    currentPage: 1,\n    tableData: [],\n    userPipelineId: true,\n  }\n  },\n  computed: {\n    configId() {\n      return this.$route.params.configId ? this.$route.params.configId : ''\n    }\n  },\n  mounted() {\n    this.getBuildRecord()\n  },\n  methods: {\n    tagType(row: any){\n      if (row.status === 'success') {\n        return 'success'\n      }else if(row.status === 'running') {\n        return 'info'\n      }else if(row.status === 'pending') {\n        return ''\n      }else if(row.status === 'fail') {\n        return 'danger'\n      }\n    },\n    getBuildRecord(value?: string) {\n      const params = {\n        offset: this.pageSize * (this.currentPage - 1),\n        limit: this.pageSize,\n        configName: value,\n        configId: this.configId\n      }\n      autoApi.getAutoRunHistory(params).then(res => {\n        this.tableData = res.data.data\n        this.total = res.data.total\n      })\n    },\n    handleGetBuildRecord(value?: string) {\n      this.currentPage = 1\n      this.getBuildRecord(value)\n    },\n    handleToAllureReport(row?: any) {\n      this.$router.push({\n        name: PathName.AutoCaseReport,\n        params: {\n          historyId: row.id\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n"]}]}