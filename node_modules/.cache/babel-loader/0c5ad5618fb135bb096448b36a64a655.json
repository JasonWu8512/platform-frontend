{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/Team/components/SprintEstimate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/Team/components/SprintEstimate.vue","mtime":1655949681769},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SprintEstimate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card>\n      <div slot=\"header\" class=\"title_big\">\n        <span>项目资源报告</span>\n        <i class=\"el-icon-refresh\" style=\"font-size: 16px; color: #909399; cursor: pointer; float: right\" @click=\"synReport()\">刷新</i>\n      </div>\n      <el-card shadow=\"never\" v-loading=\"loading\">\n\n\n      <div slot=\"header\" class=\"title\">\n        <span>迭代时间：{{sprintTime}}</span>\n        <el-cascader v-model=\"spValues\" :options=\"projectSprints\" :props=\"optionProps\" placeholder=\"请选择项目->迭代\"\n                     size=\"mini\" style=\"width: 400px;float: right; padding: 3px 0; border: 0\"></el-cascader>\n        <span class=\"title-right\">技改需求数：{{techStoryCount}}</span>\n        <span class=\"title-right\"> 业务需求数：{{businessStoryCount}}</span>\n        <el-input type=\"textarea\" v-model=\"textarea\" :rows=\"5\"\n                  style=\"margin-top: 10px; font-size: 13px;\"\n                  :disabled=\"true\"></el-input>\n      </div>\n      <el-table :data=\"tableData\"\n                row-key=\"id\"\n                size=\"medium\">\n        <template v-for=\"col in tableColumns\">\n          <el-table-column :prop=\"col.prop\" :label=\"col.label\" :key=\"col.prop\" :width=\"col.width\">\n            <template slot-scope=\"scope\">\n              <el-tooltip :disabled=\"col.prop !== 'mark'\" class=\"item\" effect=\"dark\" :content=\"scope.row[col.prop]\" placement=\"top\">\n                <el-input v-if=\"col.editable\" style=\"width: 80%\"\n                                 @change=\"changeSprintEstimate(col.prop, scope.row)\"\n                                  @keyup.enter.native=\"$event.target.blur\"\n                                 v-model=\"scope.row[col.prop]\"></el-input>\n                <span v-else-if=\"col.isClick\"\n                @click=\"goto(scope.row)\">{{scope.row[col.prop]}}</span>\n                <span v-else-if=\"col.prop === 'saturation'\">{{scope.row[col.prop]}}%</span>\n                <span v-else>{{scope.row[col.prop]}}</span>\n              </el-tooltip>\n            </template>\n          </el-table-column>\n        </template>\n\n      </el-table>\n      </el-card>\n      <el-card style=\"margin-top: 15px\" shadow=\"never\" v-loading=\"loading\">\n        <el-row>\n          <el-col :span=\"12\">\n            <span class=\"title_top\">研发测试投入及BUG数</span>\n            <div v-if=\"resourceData.rows.length === 0\" style=\"margin: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-histogram v-else :data=\"resourceData\" :extend=\"resourceExtend\" style=\"margin-top: 20px\"></ve-histogram>\n          </el-col>\n          <el-col :span=\"12\">\n            <span class=\"title_top\">占用研发+测试资源Top10需求(人天)</span>\n            <div v-if=\"rankData.rows.length === 0\" style=\"margin-top: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-bar v-else :data=\"rankData\" :extend=\"extend\" tyle=\"margin-top: 20px\"></ve-bar>\n          </el-col>\n        </el-row>\n      </el-card>\n      <el-card style=\"margin-top: 15px\" shadow=\"never\" v-loading=\"loading\">\n        <el-row>\n          <el-col :span=\"12\">\n            <span class=\"title_top\">Bug质量分</span>\n            <div v-if=\"bugPointData.rows.length === 0\" style=\"margin: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-line :data=\"bugPointData\" :extend=\"pointExtend\" tyle=\"margin-top: 20px\"></ve-line>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-select v-model=\"fix_type\" style=\"width: 200px; padding: 3px 0; border: 0; z-index: 99; float: right\">\n              <el-option v-for=\"item in fixTypes\"\n                         :key=\"item.label\"\n                         :label=\"item.label\"\n                         :value=\"item.label\"></el-option>\n            </el-select>\n            <span class=\"title_top\">Bug修复时长/h</span>\n            <div v-if=\"bugFixTimeData.rows.length === 0\" style=\"margin: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-line :data=\"bugFixTimeData\" :extend=\"fixExtend\" tyle=\"margin-top: 20px\"></ve-line>\n\n          </el-col>\n          <download-excel :data=\"json_data\" :fields=\"json_fields\" type=\"xls\" name=\"Bug详情.xls\">\n            <i class=\"el-icon-download\" style=\"font-size: 16px; color: #909399; cursor: pointer;\">下载详情</i>\n          </download-excel>\n        </el-row>\n      </el-card>\n      <el-card style=\"margin-top: 15px\" shadow=\"never\" v-loading=\"loading\">\n        <el-row>\n          <el-col :span=\"12\">\n            <span class=\"title_top\">研发测试投入占比</span>\n            <div v-if=\"rankData.rows.length === 0\" style=\"margin: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-pie v-else :data=\"developResourceData\" :settings=\"chartSettings\" :extend=\"pieExtend\" style=\"margin-left: -50px; margin-top: -20px\"></ve-pie>\n          </el-col>\n          <el-col :span=\"12\">\n            <span class=\"title_top\">饱和度</span>\n            <div v-if=\"saturationData.rows.length === 0\" style=\"margin: 50px;\">\n              <span style=\"font-size: 16px; color: #909390;\">暂无数据</span>\n            </div>\n            <ve-line :data=\"saturationData\" :extend=\"satExtend\" tyle=\"margin-top: 20px\"></ve-line>\n          </el-col>\n        </el-row>\n      </el-card>\n\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nimport jiraApi from \"@/api/jira\"\nimport {cloneDeep} from \"lodash\"\nimport JsonExcel from \"vue-json-excel\"\nimport {PathName} from \"@/constant/routeData\";\nexport default {\nname: \"SprintEstimate\",\n  components: {downloadExcel: JsonExcel},\n  data() {\n  return {\n    textarea: \"\",\n    json_fields: {\n      \"关键字\": \"key\",\n      \"概要\": \"summary\",\n      \"Sprint\": \"sprintName\",\n      \"创建日期\": \"created\",\n      \"报告人\": \"creator\",\n      \"平台\": \"platform\",\n      \"Bug Owner\": \"bugOwner\",\n      \"Server环境\": \"env\",\n      \"Bug Level\": \"subBugLevel\",\n      \"修复时长\": \"fixHour\",\n      \"关闭时长\": \"closeHour\"\n    },\n    json_data: [],\n    json_meta: [\n      [\n        {\n          key: \"charset\",\n          value: \"utf-8\"\n        }\n      ]\n    ],\n    extend: {\n      legend: {\n        // show: false\n        bottom: \"20px\"\n      },\n    },\n    pointExtend: {\n      legend: {\n        show: false\n      },\n      series: {\n        smooth: false\n      }\n    },\n    satExtend: {\n      legend: {\n        show: false\n      },\n      series: {\n        smooth: false\n      },\n      yAxis: {\n        axisLabel:{\n          show: true,\n          interval: 'auto',\n          formatter: '{value}%'\n        },\n      },\n      tooltip:{\n        formatter: '{c}%'\n      }\n    },\n    fixExtend: {\n      legend: {\n        bottom: \"20px\"\n      },\n      series: {\n        smooth: false\n      }\n    },\n    resourceExtend: {\n      label: {\n        show: true,\n        position: \"top\",\n        color: \"inherit\",\n        fontStyle: \"oblique\",\n        fontWeight: \"bold\",\n      },\n      legend: {\n        bottom: \"20px\"\n      }\n    },\n    pieExtend: {\n      legend: {\n        show: false\n      }\n    },\n    chartSettings: {\n      label: {\n        position: \"inner\",\n        formatter: '{b}:{d}%'\n      }\n    },\n    subTask: '',\n    version: '',\n    url: '',\n    sprintTime:'',\n    sprId: '',\n    // peopleResource: {},\n    // bugResource: {},\n    businessStoryCount: 0,\n    techStoryCount: 0,\n    spValues: [],\n    tableData: [],\n    cloneTable: [],\n    saturationData: {\n      columns: [],\n      rows: []\n    },\n    bugFixTimeData: {\n      columns: [],\n      rows: []\n    },\n    fixTypes: [{\n      label: \"Open -> Closed\"\n    },{\n      label: \"Fixed -> Closed\"\n    },{\n      label: \"Open -> Fixed\"\n    }],\n    fix_type: '',\n    type_fix: '',\n    optionProps: {\n      value: 'id',\n      label: 'name',\n      children: 'sprints'\n    },\n    resourceData: {\n      columns: [],\n      rows: []\n    },\n    rankData: {\n      columns: [],\n      rows: []\n    },\n    developResourceData: {\n      columns: [],\n      rows: []\n    },\n    bugPointData:{\n      columns: [],\n      rows: []\n    },\n    tableColumns: [\n      {\n        label: '组别',\n        prop: 'terminal',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '团队人数',\n        prop: 'teamPeople',\n        editable: true,\n        number: true,\n        isClick: false,\n      },\n      {\n        label: 'Jira人数',\n        prop: 'peopleCount',\n        editable: false,\n        number: true,\n        isClick: true,\n      },\n      {\n        label: '实际人数',\n        prop: 'realPeople',\n        editable: true,\n        number: true,\n        isClick: false,\n      },\n      {\n        label: '迭代工作日',\n        prop: 'sprintDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '业务需求',\n        prop: 'businessStoryDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '技改需求',\n        prop: 'techStoryDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '需求变更/增加',\n        prop: 'changeStoryDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '跟测/回归',\n        prop: 'regressionStoryDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '资源损耗',\n        prop: 'resourceDepletionDays',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '饱和度',\n        prop: 'saturation',\n        editable: false,\n        isClick: false,\n      },\n      {\n        label: '备注',\n        prop: 'mark',\n        editable: true,\n        isClick: false,\n      }\n\n    ]\n  }\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n    projectSprints() {\n      return this.$store.state.jira.projects;\n    },\n    sprintId() {\n      if (this.spValues.length === 0) {\n        // eslint-disable-next-line vue/no-async-in-computed-properties\n        jiraApi.getSprintSpecific({}).then(res => {\n          this.spValues = [res.data.projId, res.data.id]\n          if (this.$route.query.sprintId) {\n            this.spValues = [this.$route.query.projId, this.$route.query.sprintId]\n          }\n          // this.getVersionsReport(this.spValues[1])\n        })\n      }\n      return this.spValues[1]\n    }\n  },\n  watch: {\n    sprintId() {\n      this.$router.push({name: PathName.EfficiencyData, query:{projId: this.spValues[0], sprintId: this.sprintId}})\n      this.getSprintEstimate();\n      this.getRankData();\n      this.getDevQaAndBug();\n      this.getBugPoint();\n      this.getBugFixTime();\n      this.downloadBugDetaild();\n    },\n    spValues() {\n      this.$emit(\"getChildValue\",{projId:this.spValues[0]})\n    },\n    fix_type() {\n      this.getBugFixTime();\n    }\n  },\n  mounted() {\n  this.fix_type = this.fixTypes[0].label\n  },\n  methods: {\n  downloadBugDetaild(){\n    this.json_data = []\n    jiraApi.downloadBugDetails({sprintId: this.sprintId}).then(res => {\n      res.data.forEach(item => {\n        this.json_data.push({\n          key: item.key,\n          summary: item.summary,\n          sprintName: item.sprintName,\n          created: item.created,\n          creator: item.creator,\n          platform: item.platform,\n          bugOwner: item.bugOwner,\n          env: item.env,\n          subBugLevel: item.subBugLevel,\n          fixHour: item.fixHour,\n          closeHour: item.closeHour\n        })\n      })\n    })\n  },\n  getBugFixTime(){\n    if(this.fix_type === \"Open -> Fixed\") {\n      this.type_fix = \"OpenToFixed\"\n    }else if (this.fix_type === \"Fixed -> Closed\") {\n      this.type_fix = \"FixedToClosed\"\n    }else{\n      this.type_fix = \"OpenToClosed\"\n    }\n    this.bugFixTimeData.columns = []\n    this.bugFixTimeData.rows = []\n    jiraApi.getBugFixTime({sprintId: this.sprintId, type: this.type_fix}).then(res => {\n      res.data.forEach(item => {\n        this.bugFixTimeData.rows.push(item)\n        this.bugFixTimeData.columns = Object.keys(this.bugFixTimeData.rows[0])\n      })\n    })\n  },\n  getBugPoint(){\n    this.bugPointData.columns = []\n    this.bugPointData.rows = []\n    jiraApi.getBugPoint({sprintId: this.sprintId}).then(res => {\n      res.data.forEach(item => {\n        this.bugPointData.rows.push({\n          'platform': item.platform,\n          'BugPoint': item.pointRate\n        })\n        this.bugPointData.columns = Object.keys(this.bugPointData.rows[0])\n      })\n    })\n  },\n  getDevQaAndBug(){\n    this.resourceData.columns = []\n    this.resourceData.rows = []\n    jiraApi.getDevQaAndBug({sprintId: this.sprintId}).then(res => {\n      res.data.forEach(item => {\n        this.resourceData.rows.push({\n          'platform': item.platform,\n          '人天': item.peopleCount,\n          'BUG数': item.bugs\n        })\n        this.resourceData.columns = Object.keys(this.resourceData.rows[0])\n      })\n    })\n  },\n  getRankData(){\n    this.rankData.columns = []\n    this.rankData.rows = []\n    jiraApi.getStoryResourceRank({sprintId: this.sprintId}).then(res => {\n      res.data.forEach(item => {\n        this.rankData.rows.push({\n          \"需求\": item.name,\n          \"人天\": item.estimate\n        })\n        this.rankData.columns = Object.keys(this.rankData.rows[0])\n      })\n    })\n  },\n  goto(row){\n    jiraApi.getSubTask({sprintId: this.sprintId, terminal: row['terminal']}).then(res => {\n      this.subTask = res.data.key\n      this.version = res.data.version\n      this.url = \"https://jira.jiliguala.com/browse/\" + this.subTask +\n        \"?jql=issuetype = Sub-task AND Sprint = \" + row['sprintId'] + \" AND assignee in \" + row['people'] +\n        \"AND fixVersion in \" + this.version\n      console.log(this.url)\n      window.open(this.url)\n    })\n  },\n  getSprintEstimate(){\n    this.developResourceData.columns = []\n    this.developResourceData.rows = []\n    this.saturationData.columns = []\n    this.saturationData.rows = []\n    // this.peopleResource = {}\n    // this.bugResource = {}\n    jiraApi.getSprintEstimateReport({sprintId: this.sprintId}).then(res => {\n      this.businessStoryCount = 0\n      this.techStoryCount = 0\n      this.sprintTime = ''\n      this.textarea = ''\n      res.data.forEach(item =>{\n        if (item.terminal !== \"total\"){\n          this.developResourceData.rows.push({\n            'terminal': item.terminal,\n            '人天': item.businessStoryDays + item.techStoryDays + item.changeStoryDays + item.regressionStoryDays\n              + item.resourceDepletionDays\n          })\n          this.developResourceData.columns = Object.keys(this.developResourceData.rows[0])\n        }\n      })\n      this.tableData = res.data.map(item => {\n        if (item.terminal === \"total\"){\n          this.sprId = item.sprintId\n          this.textarea = item.mark\n        }\n        if (item.terminal !== \"total\"){\n          this.sprintTime = item.sprintTime\n          this.businessStoryCount = item.businessStoryCount\n        }\n        this.techStoryCount = item.techStoryCount\n        // 饱和度实时计算，不再存库。实际人数为0的与没有迭代工作日的饱和度为0\n        let s = 0\n        if (item.realPeople !== '0.0' && item.sprintDays !== null && item.sprintDays !== 0){\n          s = (item.regressionStoryDays + item.techStoryDays + item.businessStoryDays + item.changeStoryDays + item.resourceDepletionDays) / (item.sprintDays * item.realPeople) * 100\n          s = parseFloat(s).toFixed(2)\n        }\n        if (s !== 0){\n          this.saturationData.rows.push({\n            'terminal': item.terminal,\n            'saturation': s\n          })\n          this.saturationData.columns = Object.keys(this.saturationData.rows[0])\n        }\n        return {\n          id: item.id,\n          sprintId: item.sprintId,\n          terminal: item.terminal,\n          peopleCount: item.peopleCount,\n          teamPeople: item.teamPeople,\n          realPeople: parseFloat(item.realPeople).toFixed(1),\n          sprintDays: item.sprintDays,\n          techStoryDays: item.techStoryDays,\n          changeStoryDays: item.changeStoryDays,\n          businessStoryDays: item.businessStoryDays,\n          regressionStoryDays: item.regressionStoryDays,\n          resourceDepletionDays: item.resourceDepletionDays,\n          saturation: s,\n          mark: item.mark,\n          editable: item.editable,\n          people: item.people\n        }\n      })\n      this.tableData.pop()\n      this.cloneTable = cloneDeep(this.tableData)\n    })\n  },\n  changeSprintEstimate(prop, row) {\n    // if (['teamPeople', 'realPeople'].indexOf(prop) > -1) {\n    //   row.edited = true\n    // }\n    if (prop === 'realPeople'){\n      row.realPeople = parseFloat(row.realPeople).toFixed(1)\n      // let sat = (row.regressionStoryDays + row.techStoryDays + row.businessStoryDays + row.changeStoryDays + row.resourceDepletionDays) / (row.sprintDays * row.realPeople) * 100\n      // row.saturation = parseFloat(sat).toFixed(2)\n    }\n    if (row.sprintDays === null){\n      row.sprintDays = 0\n    }\n    row.teamPeople = parseFloat(row.teamPeople).toFixed(1)\n    jiraApi.editSprintEstimateReport(row.id, row).then(\n      // eslint-disable-next-line no-unused-vars\n      res => {\n        this.getSprintEstimate()\n      }\n    )\n  },\n    // changeMark(sprId, textarea) {\n    //   let ctx = {\"mark\": textarea, \"edited\": true}\n    //   jiraApi.editSprintTotalEstimate(sprId, ctx).then()\n    // },\n    synReport() {\n      jiraApi.synReport({sprintId: this.sprintId}).then(\n        // eslint-disable-next-line no-unused-vars\n        res => {\n          this.getSprintEstimate()\n          this.getBugPoint()\n          this.getDevQaAndBug()\n      }\n      )\n    }\n  },\n\n\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n.title_big {\n  font-size: 20px;\n  font-weight: 700;\n  margin-left: 5px;\n  line-height: 35px;\n  text-align: left;\n}\n.title {\n  font-size: 16px;\n  font-weight: 700;\n  margin-left: 5px;\n  line-height: 35px;\n  text-align: left;\n  color: #909399;\n}\n.title-right {\n  width: 150px;\n  float: right;\n  margin-right: 15px;\n  color: #909399;\n  font-size: 14px;\n  font-weight: 600\n}\n.title_top{\n  margin-top: 20px;\n  color: #909399;\n  font-size: 16px;\n  font-weight: 600;\n  float: left;\n}\n\n</style>\n"],"sourceRoot":"src/pages/Team/components"}]}