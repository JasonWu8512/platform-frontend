{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js!/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/coverage/FullSonar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/coverage/FullSonar.vue","mtime":1656393408962},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js","mtime":1644298102066},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFRhYmxlUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vY29tcG9uZW50cy9wYWdpbmF0aW9uL1RhYmxlUGFnaW5hdGlvbiI7CmltcG9ydCB7IFBBR0lOQVRJT05fU0laRSB9IGZyb20gIi4uLy4uL2NvbnN0YW50IjsKaW1wb3J0IHsgc29uYXJBcGkgfSBmcm9tICJAL2FwaSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRnVsbFNvbmFyIiwKICBjb21wb25lbnRzOiB7CiAgICBUYWJsZVBhZ2luYXRpb246IFRhYmxlUGFnaW5hdGlvbgogIH0sCiAgcHJvcHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb25kaXRpb246IHt9LAogICAgICB0b3RhbDogMCwKICAgICAgcGFnZVNpemU6IFBBR0lOQVRJT05fU0laRS5YTEFSR0UsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBzZWFyY2hOYW1lOiAnJywKICAgICAgdGFibGVEYXRhczogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRGdWxsU29uYXJMaXN0KCk7CiAgfSwKICBjb21wdXRlZDogewogICAgbG9hZGluZzogZnVuY3Rpb24gbG9hZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmxvYWRpbmc7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRGdWxsU29uYXJMaXN0OiBmdW5jdGlvbiBnZXRGdWxsU29uYXJMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBsaW1pdDogdGhpcy5wYWdlU2l6ZSwKICAgICAgICBvZmZzZXQ6IHRoaXMuY3VycmVudFBhZ2UKICAgICAgfTsKICAgICAgc29uYXJBcGkuZ2V0QWxsU29uYXJJbmZvcyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnRhYmxlRGF0YXMgPSByZXMuZGF0YS5kYXRhOwogICAgICAgIF90aGlzLnRvdGFsID0gNTE7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVBvbGxpbmdEYXRhTGlzdDogZnVuY3Rpb24gaGFuZGxlUG9sbGluZ0RhdGFMaXN0KCkgewogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsKICAgICAgdGhpcy5nZXRGdWxsU29uYXJMaXN0KCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["FullSonar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,eAAA,MAAA,oDAAA;AACA,SAAA,eAAA,QAAA,gBAAA;AACA,SAAA,QAAA,QAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,eAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,EAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,eAAA,CAAA,MAHA;AAIA,MAAA,WAAA,EAAA,CAJA;AAKA,MAAA,UAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,gBAAA;AACA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,QADA;AAEA,QAAA,MAAA,EAAA,KAAA;AAFA,OAAA;AAIA,MAAA,QAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,OAHA;AAKA,KAXA;AAYA,IAAA,qBAZA,mCAYA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,gBAAA;AACA;AAfA;AAtBA,CAAA","sourcesContent":["<template>\n  <el-card class=\"card-content\">\n    <template slot=\"header\">\n      <template slot=\"title\">\n        <div>sonar扫描结果</div>\n      </template>\n    </template>\n    <el-table :data=\"tableDatas\" size=\"medium\"  ref=\"sonarTable\" v-loading=\"loading\">\n      <el-table-column label=\"应用名称\" prop=\"appName\"/>\n      <el-table-column label=\"负责人\" prop=\"owner\"/>\n      <el-table-column label=\"blocker级别问题\" prop=\"blocker\"/>\n      <el-table-column label=\"critical级别问题\" prop=\"critical\"/>\n      <el-table-column label=\"sonar问题详情\">\n        <template slot-scope=\"scope\">\n          <div>\n            <a :href=\"'http://sonar.jlgltech.com/dashboard?id='+scope.row.appName\" target=\"_blank\">\n              {{scope.row.appName}}</a>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"语言类型\" prop=\"lang\"/>\n    </el-table>\n    <table-pagination\n      :change=\"getFullSonarList\"\n      :current-page.sync=\"currentPage\"\n      :page-size.sync=\"pageSize\"\n      :total=\"total\"\n    />\n  </el-card>\n</template>\n\n<script>\nimport TablePagination from \"../../common/components/pagination/TablePagination\";\nimport {PAGINATION_SIZE} from \"../../constant\";\nimport {sonarApi} from \"@/api\"\nexport default {\n  name: \"FullSonar\",\n  components: {TablePagination},\n  props: {},\n  data(){\n    return{\n      condition: {},\n      total: 0,\n      pageSize: PAGINATION_SIZE.XLARGE,\n      currentPage: 1,\n      searchName: '',\n      tableDatas: [],\n    }\n  },\n  mounted() {\n    this.getFullSonarList()\n  },\n  computed: {\n    loading() {\n      return this.$store.state.loading\n    },\n  },\n  methods: {\n    getFullSonarList(){\n      const params = {\n        limit: this.pageSize,\n        offset: this.currentPage,\n      }\n      sonarApi.getAllSonarInfos(params).then(res=>{\n        this.tableDatas = res.data.data\n        this.total = 51\n        }\n      )\n    },\n    handlePollingDataList(){\n      this.currentPage = 1\n      this.getFullSonarList()\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/pages/coverage"}]}