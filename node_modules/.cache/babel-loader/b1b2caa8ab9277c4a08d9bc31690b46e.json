{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js!/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jlglqa/Documents/QA/noa/src/pages/jira/projectTolerance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/pages/jira/projectTolerance.vue","mtime":1655949681777},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js","mtime":1644298102066},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/vue-loader/lib/index.js","mtime":1644314988580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGppcmFBcGkgZnJvbSAiQC9hcGkvamlyYSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicHJvamVjdFRvbGVyYW5jZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHRoaXMuZXh0ZW5kID0gewogICAgICAneEF4aXMuMC5heGlzTGFiZWwucm90YXRlJzogMjAKICAgIH07CiAgICB0aGlzLnN0b3J5VGhyb3VnaHB1dENoYXJ0U2V0dGluZ3MgPSB7CiAgICAgIGF4aXNTaXRlOiB7CiAgICAgICAgcmlnaHQ6IFsn5ZCe5ZCQ546HJ10KICAgICAgfSwKICAgICAgeUF4aXNUeXBlOiBbJ0tNQicsICdwZXJjZW50J10sCiAgICAgIHlBeGlzTmFtZTogWyfmlbDlgLwnLCAn5q+U546HJ10KICAgIH07CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nX2N5Y2xlOiBmYWxzZSwKICAgICAgbG9hZGluZ19zcHJpbnQ6IGZhbHNlLAogICAgICBsb2FkaW5nX2J1ZzogZmFsc2UsCiAgICAgIGxvYWRpbmdfdGhyb3VnaHB1dDogZmFsc2UsCiAgICAgIHByb2pfaWRfY3ljbGU6ICcnLAogICAgICBwcm9qX2lkX2J1Z1RpbWU6ICcnLAogICAgICBwcm9qX2lkX3Rocm91Z2hwdXQ6ICcnLAogICAgICBkdDogJycsCiAgICAgIGJ1Z1RpbWVDaGFydERhdGE6IHsKICAgICAgICBjb2x1bW5zOiBbXSwKICAgICAgICByb3dzOiBbXQogICAgICB9LAogICAgICBzdG9yeVRocm91Z2hwdXRDaGFydERhdGE6IHsKICAgICAgICBjb2x1bW5zOiBbXSwKICAgICAgICByb3dzOiBbXQogICAgICB9LAogICAgICBidXNpbmVzc1NwcmludEN5Y2xlRGF0YTogewogICAgICAgIGNvbHVtbnM6IFtdLAogICAgICAgIHJvd3M6IFtdCiAgICAgIH0sCiAgICAgIHByb2plY3RSZXNwb25zZUN5Y2xlRGF0YTogewogICAgICAgIGNvbHVtbnM6IFtdLAogICAgICAgIHJvd3M6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgcHJval9pZF9idWdUaW1lOiBmdW5jdGlvbiBwcm9qX2lkX2J1Z1RpbWUoKSB7CiAgICAgIHRoaXMuZ2V0UHJvalNwcmludEJ1Z1RpbWUodGhpcy5wcm9qX2lkX2J1Z1RpbWUpOwogICAgfSwKICAgIHByb2pfaWRfdGhyb3VnaHB1dDogZnVuY3Rpb24gcHJval9pZF90aHJvdWdocHV0KCkgewogICAgICB0aGlzLmdldFByb2pTcHJpbnRUaHJvdWdocHV0KHRoaXMucHJval9pZF90aHJvdWdocHV0KTsKICAgIH0sCiAgICBwcm9qX2lkX2N5Y2xlOiBmdW5jdGlvbiBwcm9qX2lkX2N5Y2xlKCkgewogICAgICB0aGlzLmdldEJ1c2luZXNzU3ByaW50Q3ljbGUodGhpcy5wcm9qX2lkX2N5Y2xlKTsKICAgIH0sCiAgICBkdDogZnVuY3Rpb24gZHQoKSB7CiAgICAgIHRoaXMuZ2V0UHJvamVjdEN5Y2xlKCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcHJvamVjdHM6IGZ1bmN0aW9uIHByb2plY3RzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuamlyYS5wcm9qZWN0czsKICAgIH0sCiAgICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubG9hZGluZzsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnByb2pfaWRfYnVnVGltZSA9IHRoaXMuJHN0b3JlLnN0YXRlLmppcmEucHJvamVjdHNbMF0uaWQ7CiAgICB0aGlzLnByb2pfaWRfdGhyb3VnaHB1dCA9IHRoaXMucHJval9pZF9idWdUaW1lOwogICAgdGhpcy5wcm9qX2lkX2N5Y2xlID0gdGhpcy5wcm9qX2lkX2J1Z1RpbWU7CiAgICB0aGlzLmdldGRhdGF0aW1lKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBnZXRDaGlsZFZhbHVlKHZhbCkgewogICAgLy8gICBjb25zb2xlLmxvZygndnZ2JywgdmFsKQogICAgLy8gICB0aGlzLnByb2pfaWQ9dmFsLnByb2pJZAogICAgLy8gICBpZiAodmFsLnByb2pJZCkgewogICAgLy8gICAgIHRoaXMuZ2V0UHJvalNwcmludEJ1Z1RpbWUodmFsLnByb2pJZCkKICAgIC8vICAgICB0aGlzLmdldFByb2pTcHJpbnRUaHJvdWdocHV0KHZhbC5wcm9qSWQpCiAgICAvLyAgIH0KICAgIC8vCiAgICAvLyB9LAogICAgZ2V0ZGF0YXRpbWU6IGZ1bmN0aW9uIGdldGRhdGF0aW1lKCkgewogICAgICB0aGlzLmR0ID0gbmV3IERhdGUoKS5mb3JtYXQoInl5eXktTU0tZGQiKTsKICAgIH0sCiAgICBnZXRQcm9qZWN0Q3ljbGU6IGZ1bmN0aW9uIGdldFByb2plY3RDeWNsZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZ19jeWNsZSA9IHRydWU7CiAgICAgIHRoaXMucHJvamVjdFJlc3BvbnNlQ3ljbGVEYXRhLmNvbHVtbnMgPSBbXTsKICAgICAgdGhpcy5wcm9qZWN0UmVzcG9uc2VDeWNsZURhdGEucm93cyA9IFtdOwogICAgICBqaXJhQXBpLmdldEJ1c2luZXNzQ3ljbGVUcmVuZCh7CiAgICAgICAgcXVlcnlfZGF0ZTogdGhpcy5kdAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBfdGhpcy5wcm9qZWN0UmVzcG9uc2VDeWNsZURhdGEucm93cy5wdXNoKHsKICAgICAgICAgICAgJ3Byb2plY3QnOiBpdGVtLnByb2plY3ROYW1lLAogICAgICAgICAgICAn5Lqk5LuY5ZGo5pyfJzogaXRlbS5kZWxpdmVyeUN5Y2xlLAogICAgICAgICAgICAn5byA5Y+R5Lqk5LuY5ZGo5pyfJzogaXRlbS5kZXZlbG9wQ3ljbGUKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzLnByb2plY3RSZXNwb25zZUN5Y2xlRGF0YS5jb2x1bW5zID0gT2JqZWN0LmtleXMoX3RoaXMucHJvamVjdFJlc3BvbnNlQ3ljbGVEYXRhLnJvd3NbMF0pOwogICAgICAgIH0pOwogICAgICAgIF90aGlzLmxvYWRpbmdfY3ljbGUgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QnVzaW5lc3NTcHJpbnRDeWNsZTogZnVuY3Rpb24gZ2V0QnVzaW5lc3NTcHJpbnRDeWNsZSh2YWwpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmdfc3ByaW50ID0gdHJ1ZTsKICAgICAgdGhpcy5idXNpbmVzc1NwcmludEN5Y2xlRGF0YS5jb2x1bW5zID0gW107CiAgICAgIHRoaXMuYnVzaW5lc3NTcHJpbnRDeWNsZURhdGEucm93cyA9IFtdOwogICAgICBqaXJhQXBpLmdldEJ1c2luZXNzU3ByaW50Q3ljbGUoewogICAgICAgIHByb2pfaWQ6IHZhbAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBfdGhpczIuYnVzaW5lc3NTcHJpbnRDeWNsZURhdGEucm93cy5wdXNoKHsKICAgICAgICAgICAgJ3NwcmludCc6IGl0ZW0uc3ByaW50TmFtZSwKICAgICAgICAgICAgJ+W8gOWPkeS6pOS7mOWRqOacnyc6IGl0ZW0uZGV2ZWxvcEN5Y2xlLAogICAgICAgICAgICAn5Lqk5LuY5ZGo5pyfJzogaXRlbS5kZWxpdmVyeUN5Y2xlCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpczIuYnVzaW5lc3NTcHJpbnRDeWNsZURhdGEuY29sdW1ucyA9IE9iamVjdC5rZXlzKF90aGlzMi5idXNpbmVzc1NwcmludEN5Y2xlRGF0YS5yb3dzWzBdKTsKICAgICAgICB9KTsKICAgICAgICBfdGhpczIubG9hZGluZ19zcHJpbnQgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0UHJvalNwcmludEJ1Z1RpbWU6IGZ1bmN0aW9uIGdldFByb2pTcHJpbnRCdWdUaW1lKHZhbCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZ19idWcgPSB0cnVlOwogICAgICB0aGlzLmJ1Z1RpbWVDaGFydERhdGEuY29sdW1ucyA9IFtdOwogICAgICB0aGlzLmJ1Z1RpbWVDaGFydERhdGEucm93cyA9IFtdOwogICAgICBqaXJhQXBpLmdldFNwcmludEJ1Z0ZpeFRpbWVUcmVuZCh7CiAgICAgICAgcHJval9pZDogdmFsCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIF90aGlzMy5idWdUaW1lQ2hhcnREYXRhLnJvd3MucHVzaCh7CiAgICAgICAgICAgICdzcHJpbnQnOiBpdGVtLnNwcmludE5hbWUsCiAgICAgICAgICAgICfnur/kuItidWflubPlnYfop6PlhrPml7bplb8nOiBpdGVtLm9mZmxpbmVBdmdGaXhUaW1lLAogICAgICAgICAgICAn57q/5LiLYnVn5bmz5Z2H5YWz6Zet5pe26ZW/JzogaXRlbS5vZmZsaW5lQXZnQ2xvc2VUaW1lCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpczMuYnVnVGltZUNoYXJ0RGF0YS5jb2x1bW5zID0gT2JqZWN0LmtleXMoX3RoaXMzLmJ1Z1RpbWVDaGFydERhdGEucm93c1swXSk7CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMzLmxvYWRpbmdfYnVnID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFByb2pTcHJpbnRUaHJvdWdocHV0OiBmdW5jdGlvbiBnZXRQcm9qU3ByaW50VGhyb3VnaHB1dCh2YWwpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmdfdGhyb3VnaHB1dCA9IHRydWU7CiAgICAgIHRoaXMuc3RvcnlUaHJvdWdocHV0Q2hhcnREYXRhLmNvbHVtbnMgPSBbXTsKICAgICAgdGhpcy5zdG9yeVRocm91Z2hwdXRDaGFydERhdGEucm93cyA9IFtdOwogICAgICBqaXJhQXBpLmdldFN0b3J5VGhyb3VnaHB1dCh7CiAgICAgICAgcHJval9pZDogdmFsCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIF90aGlzNC5zdG9yeVRocm91Z2hwdXRDaGFydERhdGEucm93cy5wdXNoKHsKICAgICAgICAgICAgJ3NwcmludCc6IGl0ZW0uc3ByaW50TmFtZSwKICAgICAgICAgICAgLy8gJ+S6pOS7mOmcgOaxguaVsCc6IGl0ZW0uZG9uZVN0b3J5Q291bnQsCiAgICAgICAgICAgICfpnIDmsYLmlbAnOiBpdGVtLnRvdGFsU3RvcnlDb3VudCAvLyAn5ZCe5ZCQ546HJzogaXRlbS50aHJvdWdocHV0CgogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM0LnN0b3J5VGhyb3VnaHB1dENoYXJ0RGF0YS5jb2x1bW5zID0gT2JqZWN0LmtleXMoX3RoaXM0LnN0b3J5VGhyb3VnaHB1dENoYXJ0RGF0YS5yb3dzWzBdKTsKICAgICAgICB9KTsKICAgICAgICBfdGhpczQubG9hZGluZ190aHJvdWdocHV0ID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["projectTolerance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card v-loading=\"loading_cycle\">\n      <div slot=\"header\" class=\"card-title\">\n        <span>各产线需求响应周期</span>\n        <el-date-picker\n          v-model=\"dt\"\n          :clearable=\"false\"\n          placeholder=\"选择日期\"\n          type=\"date\"\n          value-format=\"yyyy-MM-dd\"\n          style=\"width: 200px;float: right; padding: 3px 0; border: 0\"\n        />\n      </div>\n      <ve-histogram :data=\"projectResponseCycleData\" :extend=\"extend\"></ve-histogram>\n    </el-card>\n    <el-card class=\"card-margin-top\" :v-show=\"proj_id_cycle !== ''\" v-loading=\"loading_sprint\">\n      <div slot=\"header\" class=\"card-title\">\n        <span>需求响应周期趋势</span>\n        <el-select v-model=\"proj_id_cycle\" style=\"width: 200px;float: right; padding: 3px 0; border: 0\">\n          <el-option v-for=\"item in projects\"\n                     :key=\"item.id\"\n                     :label=\"item.name\"\n                     :value=\"item.id\"></el-option>\n        </el-select>\n      </div>\n      <ve-line :data=\"businessSprintCycleData\" :extend=\"extend\"></ve-line>\n    </el-card>\n    <el-card class=\"card-margin-top\" :v-show=\"proj_id_bugTime !== ''\" v-loading=\"loading_bug\">\n      <div slot=\"header\" class=\"card-title\">\n        <span>线下bug平均解决/关闭时长(小时)</span>\n        <el-select v-model=\"proj_id_bugTime\" style=\"width: 200px;float: right; padding: 3px 0; border: 0\">\n          <el-option v-for=\"item in projects\"\n          :key=\"item.id\"\n          :label=\"item.name\"\n          :value=\"item.id\"></el-option>\n        </el-select>\n      </div>\n      <ve-line :data=\"bugTimeChartData\" :extend=\"extend\"></ve-line>\n    </el-card>\n    <el-card class=\"card-margin-top\" :v-show=\"proj_id_throughput !== ''\" v-loading=\"loading_throughput\">\n      <div slot=\"header\" class=\"card-title\">\n        <span>迭代需求吞吐率</span>\n        <el-select v-model=\"proj_id_throughput\" style=\"width: 200px;float: right; padding: 3px 0; border: 0\">\n          <el-option v-for=\"item in projects\"\n                     :key=\"item.id\"\n                     :label=\"item.name\"\n                     :value=\"item.id\"></el-option>\n        </el-select>\n      </div>\n      <ve-line :data=\"storyThroughputChartData\" :extend=\"extend\"></ve-line>\n    </el-card>\n  </div>\n\n</template>\n\n<script>\nimport jiraApi from \"@/api/jira\"\n\nexport default {\n  name: \"projectTolerance\",\n  data() {\n    this.extend = {\n      'xAxis.0.axisLabel.rotate': 20\n    }\n    this.storyThroughputChartSettings = {\n      axisSite: { right: ['吞吐率'] },\n      yAxisType: ['KMB', 'percent'],\n      yAxisName: ['数值', '比率']\n    }\n    return {\n      loading_cycle: false,\n      loading_sprint: false,\n      loading_bug: false,\n      loading_throughput: false,\n      proj_id_cycle: '',\n      proj_id_bugTime: '',\n      proj_id_throughput: '',\n      dt: '',\n      bugTimeChartData: {\n        columns: [],\n        rows: []\n      },\n      storyThroughputChartData: {\n        columns: [],\n        rows: []\n      },\n      businessSprintCycleData:{\n        columns: [],\n        rows: []\n      },\n      projectResponseCycleData:{\n        columns: [],\n        rows: []\n      },\n    }\n  },\n  watch: {\n    proj_id_bugTime() {\n      this.getProjSprintBugTime(this.proj_id_bugTime)\n    },\n    proj_id_throughput() {\n      this.getProjSprintThroughput(this.proj_id_throughput)\n    },\n    proj_id_cycle() {\n      this.getBusinessSprintCycle(this.proj_id_cycle)\n    },\n    dt() {\n      this.getProjectCycle()\n    }\n  },\n  computed: {\n    projects() {\n      return this.$store.state.jira.projects;\n    },\n    loading() {\n      return this.$store.state.loading\n    }\n  },\n  mounted() {\n    this.proj_id_bugTime = this.$store.state.jira.projects[0].id\n    this.proj_id_throughput = this.proj_id_bugTime\n    this.proj_id_cycle = this.proj_id_bugTime\n    this.getdatatime()\n  },\n  methods: {\n    // getChildValue(val) {\n    //   console.log('vvv', val)\n    //   this.proj_id=val.projId\n    //   if (val.projId) {\n    //     this.getProjSprintBugTime(val.projId)\n    //     this.getProjSprintThroughput(val.projId)\n    //   }\n    //\n    // },\n    getdatatime(){\n      this.dt = new Date().format(\"yyyy-MM-dd\");\n    },\n    getProjectCycle() {\n      this.loading_cycle=true\n      this.projectResponseCycleData.columns = []\n      this.projectResponseCycleData.rows = []\n      jiraApi.getBusinessCycleTrend({query_date: this.dt}).then(res => {\n        res.data.forEach(item => {\n          this.projectResponseCycleData.rows.push({\n            'project': item.projectName,\n            '交付周期': item.deliveryCycle,\n            '开发交付周期': item.developCycle,\n          })\n          this.projectResponseCycleData.columns = Object.keys(this.projectResponseCycleData.rows[0])\n        })\n        this.loading_cycle=false\n      })\n    },\n    getBusinessSprintCycle(val) {\n      this.loading_sprint=true\n      this.businessSprintCycleData.columns = []\n      this.businessSprintCycleData.rows = []\n      jiraApi.getBusinessSprintCycle({proj_id: val}).then(res => {\n        res.data.forEach(item => {\n          this.businessSprintCycleData.rows.push({\n            'sprint': item.sprintName,\n            '开发交付周期': item.developCycle,\n            '交付周期': item.deliveryCycle,\n          })\n          this.businessSprintCycleData.columns = Object.keys(this.businessSprintCycleData.rows[0])\n        })\n        this.loading_sprint=false\n      })\n    },\n    getProjSprintBugTime(val) {\n      this.loading_bug=true\n      this.bugTimeChartData.columns = []\n      this.bugTimeChartData.rows = []\n      jiraApi.getSprintBugFixTimeTrend({proj_id: val}).then(res => {\n        res.data.forEach(item => {\n          this.bugTimeChartData.rows.push({\n            'sprint': item.sprintName,\n            '线下bug平均解决时长': item.offlineAvgFixTime,\n            '线下bug平均关闭时长': item.offlineAvgCloseTime,\n          })\n          this.bugTimeChartData.columns = Object.keys(this.bugTimeChartData.rows[0])\n        })\n        this.loading_bug=false\n      })\n    },\n    getProjSprintThroughput(val){\n      this.loading_throughput=true\n      this.storyThroughputChartData.columns = []\n      this.storyThroughputChartData.rows = []\n      jiraApi.getStoryThroughput({proj_id: val}).then(res => {\n        res.data.forEach(item => {\n          this.storyThroughputChartData.rows.push({\n            'sprint': item.sprintName,\n            // '交付需求数': item.doneStoryCount,\n            '需求数': item.totalStoryCount,\n            // '吞吐率': item.throughput\n          })\n          this.storyThroughputChartData.columns = Object.keys(this.storyThroughputChartData.rows[0])\n        })\n        this.loading_throughput=false\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.el-select-dropdown__item {\n  font-size: 12px !important;\n}\n.el-scrollbar__wrap {\n  overflow: auto !important;\n}\n</style>\n\n<style scoped lang=\"scss\">\n.card-title {\n  font-size: 16px;\n  font-weight: 700;\n  text-align: left;\n}\n.card-margin-top {\n  margin-top: 20px;\n}\n\n</style>\n"],"sourceRoot":"src/pages/jira"}]}