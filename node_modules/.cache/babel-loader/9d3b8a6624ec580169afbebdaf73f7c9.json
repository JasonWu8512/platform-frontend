{"remainingRequest":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js!/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js!/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js??ref--13-0!/Users/jlglqa/Documents/QA/noa/src/store/modules/users.js","dependencies":[{"path":"/Users/jlglqa/Documents/QA/noa/src/store/modules/users.js","mtime":1655949681826},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/cache-loader/dist/cjs.js","mtime":1644298102062},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/thread-loader/dist/cjs.js","mtime":1644298102066},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/babel-loader/lib/index.js","mtime":1644314985388},{"path":"/Users/jlglqa/Documents/QA/noa/node_modules/eslint-loader/index.js","mtime":1644298104993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qbGdscWEvRG9jdW1lbnRzL1FBL25vYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2psZ2xxYS9Eb2N1bWVudHMvUUEvbm9hL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IHVzZXJBcGkgfSBmcm9tICJAL2FwaSI7CmV4cG9ydCB2YXIgU0VUX1VTRVJTID0gJ1NFVF9VU0VSUyc7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogewogICAgdXNlcnM6IFtdLAogICAgc29ja2V0SW5mbzogewogICAgICB1c2Vyc1VwZGF0ZTogZmFsc2UKICAgIH0KICB9LAogIG11dGF0aW9uczogX2RlZmluZVByb3BlcnR5KHt9LCBTRVRfVVNFUlMsIGZ1bmN0aW9uIChzdGF0ZSwgdXNlcnMpIHsKICAgIHN0YXRlLnVzZXJzID0gdXNlcnM7CiAgICBzdGF0ZS5zb2NrZXRJbmZvLnVzZXJzVXBkYXRlID0gdHJ1ZTsKICB9KSwKICBhY3Rpb25zOiB7CiAgICBHRVRfVVNFUjogZnVuY3Rpb24gR0VUX1VTRVIoX3JlZikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiB1c2VyQXBpLmdldFVzZXJCeVNlYXJjaCgpLnRoZW4oZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YTsKICAgICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICAgICAgICAgICAgICBvYmoudGV4dCA9IG9iai51c2VybmFtZTsKICAgICAgICAgICAgICAgICAgICBvYmoudmFsdWUgPSBvYmoudXNlcm5hbWU7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBjb21taXQoU0VUX1VTRVJTLCBkYXRhKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/jlglqa/Documents/QA/noa/src/store/modules/users.js"],"names":["userApi","SET_USERS","state","users","socketInfo","usersUpdate","mutations","actions","GET_USER","commit","getUserBySearch","then","data","forEach","obj","text","username","value"],"mappings":";;;;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AAEP,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AAFP,GADM;AAObC,EAAAA,SAAS,sBACNL,SADM,YACKC,KADL,EACYC,KADZ,EACmB;AACxBD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACAD,IAAAA,KAAK,CAACE,UAAN,CAAiBC,WAAjB,GAA+B,IAA/B;AACD,GAJM,CAPI;AAabE,EAAAA,OAAO,EAAE;AACDC,IAAAA,QADC,0BACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATC,gBAAAA,MAAS,QAATA,MAAS;AAAA;AAAA,uBACjBT,OAAO,CAACU,eAAR,GACHC,IADG,CACE,iBAAY;AAAA,sBAAVC,IAAU,SAAVA,IAAU;AAChBA,kBAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBA,oBAAAA,GAAG,CAACC,IAAJ,GAAWD,GAAG,CAACE,QAAf;AACAF,oBAAAA,GAAG,CAACG,KAAJ,GAAYH,GAAG,CAACE,QAAhB;AACD,mBAHD;AAIAP,kBAAAA,MAAM,CAACR,SAAD,EAAYW,IAAZ,CAAN;AACD,iBAPG,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASxB;AAVM;AAbI,CAAf","sourcesContent":["import {userApi} from \"@/api\"\n\nexport const SET_USERS = 'SET_USERS'\n\nexport default {\n  state: {\n    users: [],\n    socketInfo: {\n      usersUpdate: false,\n    }\n  },\n  mutations: {\n    [SET_USERS](state, users) {\n      state.users = users\n      state.socketInfo.usersUpdate = true\n    },\n  },\n  actions: {\n    async GET_USER({commit}) {\n      await userApi.getUserBySearch()\n        .then(({data}) => {\n          data.forEach((obj) => {\n            obj.text = obj.username\n            obj.value = obj.username\n          })\n          commit(SET_USERS, data)\n        })\n    }\n  }\n}\n"]}]}